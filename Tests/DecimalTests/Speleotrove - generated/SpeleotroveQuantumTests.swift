// =============================================================================
// Automatically generated. DO NOT EDIT!
// To regenerate: make gen
// =============================================================================

import XCTest
@testable import Decimal

class SpeleotroveQuantumTests: XCTestCase, SpeleotroveMixin {

  // MARK: - Quantize

  func test_quantize64() {
    /* ddcan401 */ self.quantize64("#6e38ff3ffff3fcff", "1", "#6e38ff3fcff3fcff", .toNearestOrEven)
    /* ddcan402 */ self.quantize64("#6e38ff3fcff3fdff", "0", "#6e38ff3fcff3fcff", .toNearestOrEven)
    /* ddcan403 */ self.quantize64("#7880000000000000", "Inf", "#7800000000000000", .toNearestOrEven)
    /* ddcan404 */ self.quantize64("#7802000000000000", "-Inf", "#7800000000000000", .toNearestOrEven)
    /* ddcan410 */ self.quantize64("#7c03ff3fcff3fcff", "1", "#7c00ff3fcff3fcff", .toNearestOrEven)
    /* ddcan411 */ self.quantize64("#7c03ff3fcff3fcff", "1", "#7c00ff3fcff3fcff", .toNearestOrEven)
    /* ddcan412 */ self.quantize64("#7c40ff3fcff3fcff", "1", "#7c00ff3fcff3fcff", .toNearestOrEven)
    /* ddcan413 */ self.quantize64("#7c40ff3fcff3fcff", "1", "#7c00ff3fcff3fcff", .toNearestOrEven)
    /* ddcan414 */ self.quantize64("#7e00ffffcff3fcff", "1", "#7c00ff3fcff3fcff", .toNearestOrEven, .isInvalidOperation)
    /* ddcan415 */ self.quantize64("#7e00ffffcff3fcff", "1", "#7c00ff3fcff3fcff", .toNearestOrEven, .isInvalidOperation)
    /* ddcan416 */ self.quantize64("#7e80ff3fcff3fcff", "1", "#7c00ff3fcff3fcff", .toNearestOrEven, .isInvalidOperation)
    /* ddcan417 */ self.quantize64("#7e80ff3fcff3fcff", "1", "#7c00ff3fcff3fcff", .toNearestOrEven, .isInvalidOperation)
    /* ddqua001 */ self.quantize64("0", "1e0", "0", .toNearestOrEven)
    /* ddqua002 */ self.quantize64("1", "1e0", "1", .toNearestOrEven)
    /* ddqua003 */ self.quantize64("0.1", "1e+2", "0E+2", .toNearestOrEven, .isInexact)
    /* ddqua005 */ self.quantize64("0.1", "1e+1", "0E+1", .toNearestOrEven, .isInexact)
    /* ddqua006 */ self.quantize64("0.1", "1e0", "0", .toNearestOrEven, .isInexact)
    /* ddqua007 */ self.quantize64("0.1", "1e-1", "0.1", .toNearestOrEven)
    /* ddqua008 */ self.quantize64("0.1", "1e-2", "0.10", .toNearestOrEven)
    /* ddqua009 */ self.quantize64("0.1", "1e-3", "0.100", .toNearestOrEven)
    /* ddqua010 */ self.quantize64("0.9", "1e+2", "0E+2", .toNearestOrEven, .isInexact)
    /* ddqua011 */ self.quantize64("0.9", "1e+1", "0E+1", .toNearestOrEven, .isInexact)
    /* ddqua012 */ self.quantize64("0.9", "1e+0", "1", .toNearestOrEven, .isInexact)
    /* ddqua013 */ self.quantize64("0.9", "1e-1", "0.9", .toNearestOrEven)
    /* ddqua014 */ self.quantize64("0.9", "1e-2", "0.90", .toNearestOrEven)
    /* ddqua015 */ self.quantize64("0.9", "1e-3", "0.900", .toNearestOrEven)
    /* ddqua021 */ self.quantize64("-0", "1e0", "-0", .toNearestOrEven)
    /* ddqua022 */ self.quantize64("-1", "1e0", "-1", .toNearestOrEven)
    /* ddqua023 */ self.quantize64("-0.1", "1e+2", "-0E+2", .toNearestOrEven, .isInexact)
    /* ddqua025 */ self.quantize64("-0.1", "1e+1", "-0E+1", .toNearestOrEven, .isInexact)
    /* ddqua026 */ self.quantize64("-0.1", "1e0", "-0", .toNearestOrEven, .isInexact)
    /* ddqua027 */ self.quantize64("-0.1", "1e-1", "-0.1", .toNearestOrEven)
    /* ddqua028 */ self.quantize64("-0.1", "1e-2", "-0.10", .toNearestOrEven)
    /* ddqua029 */ self.quantize64("-0.1", "1e-3", "-0.100", .toNearestOrEven)
    /* ddqua030 */ self.quantize64("-0.9", "1e+2", "-0E+2", .toNearestOrEven, .isInexact)
    /* ddqua031 */ self.quantize64("-0.9", "1e+1", "-0E+1", .toNearestOrEven, .isInexact)
    /* ddqua032 */ self.quantize64("-0.9", "1e+0", "-1", .toNearestOrEven, .isInexact)
    /* ddqua033 */ self.quantize64("-0.9", "1e-1", "-0.9", .toNearestOrEven)
    /* ddqua034 */ self.quantize64("-0.9", "1e-2", "-0.90", .toNearestOrEven)
    /* ddqua035 */ self.quantize64("-0.9", "1e-3", "-0.900", .toNearestOrEven)
    /* ddqua036 */ self.quantize64("-0.5", "1e+2", "-0E+2", .toNearestOrEven, .isInexact)
    /* ddqua037 */ self.quantize64("-0.5", "1e+1", "-0E+1", .toNearestOrEven, .isInexact)
    /* ddqua038 */ self.quantize64("-0.5", "1e+0", "-0", .toNearestOrEven, .isInexact)
    /* ddqua039 */ self.quantize64("-0.5", "1e-1", "-0.5", .toNearestOrEven)
    /* ddqua040 */ self.quantize64("-0.5", "1e-2", "-0.50", .toNearestOrEven)
    /* ddqua041 */ self.quantize64("-0.5", "1e-3", "-0.500", .toNearestOrEven)
    /* ddqua042 */ self.quantize64("-0.9", "1e+2", "-0E+2", .toNearestOrEven, .isInexact)
    /* ddqua043 */ self.quantize64("-0.9", "1e+1", "-0E+1", .toNearestOrEven, .isInexact)
    /* ddqua044 */ self.quantize64("-0.9", "1e+0", "-1", .toNearestOrEven, .isInexact)
    /* ddqua045 */ self.quantize64("-0.9", "1e-1", "-0.9", .toNearestOrEven)
    /* ddqua046 */ self.quantize64("-0.9", "1e-2", "-0.90", .toNearestOrEven)
    /* ddqua047 */ self.quantize64("-0.9", "1e-3", "-0.900", .toNearestOrEven)
    /* ddqua060 */ self.quantize64("2.17", "0.001", "2.170", .toNearestOrEven)
    /* ddqua061 */ self.quantize64("2.17", "0.01", "2.17", .toNearestOrEven)
    /* ddqua062 */ self.quantize64("2.17", "0.1", "2.2", .toNearestOrEven, .isInexact)
    /* ddqua063 */ self.quantize64("2.17", "1e+0", "2", .toNearestOrEven, .isInexact)
    /* ddqua064 */ self.quantize64("2.17", "1e+1", "0E+1", .toNearestOrEven, .isInexact)
    /* ddqua065 */ self.quantize64("-Inf", "Inf", "-Infinity", .toNearestOrEven)
    /* ddqua066 */ self.quantize64("2", "Inf", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddqua067 */ self.quantize64("-0.1", "1", "-0", .toNearestOrEven, .isInexact)
    /* ddqua068 */ self.quantize64("-0", "1e+5", "-0E+5", .toNearestOrEven)
    /* ddqua069 */ self.quantize64("+123456789012345.6", "1e-2", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddqua070 */ self.quantize64("-987654335236450.6", "1e-2", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddqua071 */ self.quantize64("217", "1e-1", "217.0", .toNearestOrEven)
    /* ddqua072 */ self.quantize64("217", "1e+0", "217", .toNearestOrEven)
    /* ddqua073 */ self.quantize64("217", "1e+1", "2.2E+2", .toNearestOrEven, .isInexact)
    /* ddqua074 */ self.quantize64("217", "1e+2", "2E+2", .toNearestOrEven, .isInexact)
    /* ddqua089 */ self.quantize64("12", "1e+4", "0E+4", .toNearestOrEven, .isInexact)
    /* ddqua090 */ self.quantize64("12", "1e+3", "0E+3", .toNearestOrEven, .isInexact)
    /* ddqua091 */ self.quantize64("12", "1e+2", "0E+2", .toNearestOrEven, .isInexact)
    /* ddqua092 */ self.quantize64("12", "1e+1", "1E+1", .toNearestOrEven, .isInexact)
    /* ddqua093 */ self.quantize64("1.2345", "1e-2", "1.23", .toNearestOrEven, .isInexact)
    /* ddqua094 */ self.quantize64("1.2355", "1e-2", "1.24", .toNearestOrEven, .isInexact)
    /* ddqua095 */ self.quantize64("1.2345", "1e-6", "1.234500", .toNearestOrEven)
    /* ddqua096 */ self.quantize64("9.9999", "1e-2", "10.00", .toNearestOrEven, .isInexact)
    /* ddqua097 */ self.quantize64("0.0001", "1e-2", "0.00", .toNearestOrEven, .isInexact)
    /* ddqua098 */ self.quantize64("0.001", "1e-2", "0.00", .toNearestOrEven, .isInexact)
    /* ddqua099 */ self.quantize64("0.009", "1e-2", "0.01", .toNearestOrEven, .isInexact)
    /* ddqua100 */ self.quantize64("92", "1e+2", "1E+2", .toNearestOrEven, .isInexact)
    /* ddqua1001 */ self.quantize64("0.000", "0.001", "0.000", .toNearestOrAwayFromZero)
    /* ddqua1002 */ self.quantize64("0.001", "0.001", "0.001", .toNearestOrAwayFromZero)
    /* ddqua1003 */ self.quantize64("0.0012", "0.001", "0.001", .toNearestOrAwayFromZero, .isInexact)
    /* ddqua1004 */ self.quantize64("0.0018", "0.001", "0.002", .toNearestOrAwayFromZero, .isInexact)
    /* ddqua1005 */ self.quantize64("0.501", "0.001", "0.501", .toNearestOrAwayFromZero)
    /* ddqua1006 */ self.quantize64("0.5012", "0.001", "0.501", .toNearestOrAwayFromZero, .isInexact)
    /* ddqua1007 */ self.quantize64("0.5018", "0.001", "0.502", .toNearestOrAwayFromZero, .isInexact)
    /* ddqua1008 */ self.quantize64("0.999", "0.001", "0.999", .toNearestOrAwayFromZero)
    /* ddqua101 */ self.quantize64("-1", "1e0", "-1", .toNearestOrEven)
    /* ddqua102 */ self.quantize64("-1", "1e-1", "-1.0", .toNearestOrEven)
    /* ddqua1021 */ self.quantize64("8.666666666666000E+384", "1.000000000000000E+384", "8.666666666666000E+384", .toNearestOrAwayFromZero)
    /* ddqua1022 */ self.quantize64("-8.666666666666000E+384", "1.000000000000000E+384", "-8.666666666666000E+384", .toNearestOrAwayFromZero)
    /* ddqua1027 */ self.quantize64("8.666666666666000E+323", "1E+31", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* ddqua1029 */ self.quantize64("8.66666666E+3", "1E+3", "9E+3", .toNearestOrAwayFromZero, .isInexact)
    /* ddqua103 */ self.quantize64("-1", "1e-2", "-1.00", .toNearestOrEven)
    /* ddqua104 */ self.quantize64("0", "1e0", "0", .toNearestOrEven)
    /* ddqua1040 */ self.quantize64("-2147483646", "0", "-2147483646", .toNearestOrAwayFromZero)
    /* ddqua1041 */ self.quantize64("-2147483647", "0", "-2147483647", .toNearestOrAwayFromZero)
    /* ddqua1042 */ self.quantize64("-2147483648", "0", "-2147483648", .toNearestOrAwayFromZero)
    /* ddqua1043 */ self.quantize64("-2147483649", "0", "-2147483649", .toNearestOrAwayFromZero)
    /* ddqua1044 */ self.quantize64("2147483646", "0", "2147483646", .toNearestOrAwayFromZero)
    /* ddqua1045 */ self.quantize64("2147483647", "0", "2147483647", .toNearestOrAwayFromZero)
    /* ddqua1046 */ self.quantize64("2147483648", "0", "2147483648", .toNearestOrAwayFromZero)
    /* ddqua1047 */ self.quantize64("2147483649", "0", "2147483649", .toNearestOrAwayFromZero)
    /* ddqua1048 */ self.quantize64("4294967294", "0", "4294967294", .toNearestOrAwayFromZero)
    /* ddqua1049 */ self.quantize64("4294967295", "0", "4294967295", .toNearestOrAwayFromZero)
    /* ddqua105 */ self.quantize64("0", "1e-1", "0.0", .toNearestOrEven)
    /* ddqua1050 */ self.quantize64("4294967296", "0", "4294967296", .toNearestOrAwayFromZero)
    /* ddqua1051 */ self.quantize64("4294967297", "0", "4294967297", .toNearestOrAwayFromZero)
    /* ddqua106 */ self.quantize64("0", "1e-2", "0.00", .toNearestOrEven)
    /* ddqua107 */ self.quantize64("0.00", "1e0", "0", .toNearestOrEven)
    /* ddqua108 */ self.quantize64("0", "1e+1", "0E+1", .toNearestOrEven)
    /* ddqua109 */ self.quantize64("0", "1e+2", "0E+2", .toNearestOrEven)
    /* ddqua110 */ self.quantize64("+1", "1e0", "1", .toNearestOrEven)
    /* ddqua1100 */ self.quantize64("1.2300", "1.00", "1.23", .toNearestOrEven)
    /* ddqua1101 */ self.quantize64("1.2301", "1.00", "1.23", .toNearestOrEven, .isInexact)
    /* ddqua1102 */ self.quantize64("1.2310", "1.00", "1.23", .toNearestOrEven, .isInexact)
    /* ddqua1103 */ self.quantize64("1.2350", "1.00", "1.24", .toNearestOrEven, .isInexact)
    /* ddqua1104 */ self.quantize64("1.2351", "1.00", "1.24", .toNearestOrEven, .isInexact)
    /* ddqua1105 */ self.quantize64("1.2450", "1.00", "1.24", .toNearestOrEven, .isInexact)
    /* ddqua1106 */ self.quantize64("1.2451", "1.00", "1.25", .toNearestOrEven, .isInexact)
    /* ddqua1107 */ self.quantize64("1.2360", "1.00", "1.24", .toNearestOrEven, .isInexact)
    /* ddqua1108 */ self.quantize64("1.2370", "1.00", "1.24", .toNearestOrEven, .isInexact)
    /* ddqua1109 */ self.quantize64("1.2399", "1.00", "1.24", .toNearestOrEven, .isInexact)
    /* ddqua111 */ self.quantize64("+1", "1e-1", "1.0", .toNearestOrEven)
    /* ddqua112 */ self.quantize64("+1", "1e-2", "1.00", .toNearestOrEven)
    /* ddqua120 */ self.quantize64("1.04", "1e-3", "1.040", .toNearestOrEven)
    /* ddqua1200 */ self.quantize64("1.2300", "1.00", "1.23", .toNearestOrAwayFromZero)
    /* ddqua1201 */ self.quantize64("1.2301", "1.00", "1.23", .toNearestOrAwayFromZero, .isInexact)
    /* ddqua1202 */ self.quantize64("1.2310", "1.00", "1.23", .toNearestOrAwayFromZero, .isInexact)
    /* ddqua1203 */ self.quantize64("1.2350", "1.00", "1.24", .toNearestOrAwayFromZero, .isInexact)
    /* ddqua1204 */ self.quantize64("1.2351", "1.00", "1.24", .toNearestOrAwayFromZero, .isInexact)
    /* ddqua1205 */ self.quantize64("1.2450", "1.00", "1.25", .toNearestOrAwayFromZero, .isInexact)
    /* ddqua1206 */ self.quantize64("1.2451", "1.00", "1.25", .toNearestOrAwayFromZero, .isInexact)
    /* ddqua1207 */ self.quantize64("1.2360", "1.00", "1.24", .toNearestOrAwayFromZero, .isInexact)
    /* ddqua1208 */ self.quantize64("1.2370", "1.00", "1.24", .toNearestOrAwayFromZero, .isInexact)
    /* ddqua1209 */ self.quantize64("1.2399", "1.00", "1.24", .toNearestOrAwayFromZero, .isInexact)
    /* ddqua121 */ self.quantize64("1.04", "1e-2", "1.04", .toNearestOrEven)
    /* ddqua122 */ self.quantize64("1.04", "1e-1", "1.0", .toNearestOrEven, .isInexact)
    /* ddqua123 */ self.quantize64("1.04", "1e0", "1", .toNearestOrEven, .isInexact)
    /* ddqua124 */ self.quantize64("1.05", "1e-3", "1.050", .toNearestOrEven)
    /* ddqua125 */ self.quantize64("1.05", "1e-2", "1.05", .toNearestOrEven)
    /* ddqua126 */ self.quantize64("1.05", "1e-1", "1.0", .toNearestOrEven, .isInexact)
    /* ddqua131 */ self.quantize64("1.05", "1e0", "1", .toNearestOrEven, .isInexact)
    /* ddqua132 */ self.quantize64("1.06", "1e-3", "1.060", .toNearestOrEven)
    /* ddqua133 */ self.quantize64("1.06", "1e-2", "1.06", .toNearestOrEven)
    /* ddqua134 */ self.quantize64("1.06", "1e-1", "1.1", .toNearestOrEven, .isInexact)
    /* ddqua135 */ self.quantize64("1.06", "1e0", "1", .toNearestOrEven, .isInexact)
    /* ddqua140 */ self.quantize64("-10", "1e-2", "-10.00", .toNearestOrEven)
    /* ddqua141 */ self.quantize64("+1", "1e-2", "1.00", .toNearestOrEven)
    /* ddqua142 */ self.quantize64("+10", "1e-2", "10.00", .toNearestOrEven)
    /* ddqua143 */ self.quantize64("1E+17", "1e-2", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddqua144 */ self.quantize64("1E-17", "1e-2", "0.00", .toNearestOrEven, .isInexact)
    /* ddqua145 */ self.quantize64("1E-3", "1e-2", "0.00", .toNearestOrEven, .isInexact)
    /* ddqua146 */ self.quantize64("1E-2", "1e-2", "0.01", .toNearestOrEven)
    /* ddqua147 */ self.quantize64("1E-1", "1e-2", "0.10", .toNearestOrEven)
    /* ddqua148 */ self.quantize64("0E-17", "1e-2", "0.00", .toNearestOrEven)
    /* ddqua150 */ self.quantize64("1.0600", "1e-5", "1.06000", .toNearestOrEven)
    /* ddqua1500 */ self.quantize64("1.2300", "1.00", "1.23", .towardZero)
    /* ddqua1501 */ self.quantize64("1.2301", "1.00", "1.23", .towardZero, .isInexact)
    /* ddqua1502 */ self.quantize64("1.2310", "1.00", "1.23", .towardZero, .isInexact)
    /* ddqua1503 */ self.quantize64("1.2350", "1.00", "1.23", .towardZero, .isInexact)
    /* ddqua1504 */ self.quantize64("1.2351", "1.00", "1.23", .towardZero, .isInexact)
    /* ddqua1505 */ self.quantize64("1.2450", "1.00", "1.24", .towardZero, .isInexact)
    /* ddqua1506 */ self.quantize64("1.2451", "1.00", "1.24", .towardZero, .isInexact)
    /* ddqua1507 */ self.quantize64("1.2360", "1.00", "1.23", .towardZero, .isInexact)
    /* ddqua1508 */ self.quantize64("1.2370", "1.00", "1.23", .towardZero, .isInexact)
    /* ddqua1509 */ self.quantize64("1.2399", "1.00", "1.23", .towardZero, .isInexact)
    /* ddqua151 */ self.quantize64("1.0600", "1e-4", "1.0600", .toNearestOrEven)
    /* ddqua1511 */ self.quantize64("-1.2399", "1.00", "-1.23", .towardZero, .isInexact)
    /* ddqua152 */ self.quantize64("1.0600", "1e-3", "1.060", .toNearestOrEven)
    /* ddqua153 */ self.quantize64("1.0600", "1e-2", "1.06", .toNearestOrEven)
    /* ddqua154 */ self.quantize64("1.0600", "1e-1", "1.1", .toNearestOrEven, .isInexact)
    /* ddqua155 */ self.quantize64("1.0600", "1e0", "1", .toNearestOrEven, .isInexact)
    /* ddqua157 */ self.quantize64("-0.5", "1e+0", "-1", .toNearestOrAwayFromZero, .isInexact)
    /* ddqua158 */ self.quantize64("1.05", "1e-1", "1.1", .toNearestOrAwayFromZero, .isInexact)
    /* ddqua159 */ self.quantize64("1.06", "1e0", "1", .toNearestOrAwayFromZero, .isInexact)
    /* ddqua1600 */ self.quantize64("1.2300", "1.00", "1.23", .up)
    /* ddqua1601 */ self.quantize64("1.2301", "1.00", "1.24", .up, .isInexact)
    /* ddqua1602 */ self.quantize64("1.2310", "1.00", "1.24", .up, .isInexact)
    /* ddqua1603 */ self.quantize64("1.2350", "1.00", "1.24", .up, .isInexact)
    /* ddqua1604 */ self.quantize64("1.2351", "1.00", "1.24", .up, .isInexact)
    /* ddqua1605 */ self.quantize64("1.2450", "1.00", "1.25", .up, .isInexact)
    /* ddqua1606 */ self.quantize64("1.2451", "1.00", "1.25", .up, .isInexact)
    /* ddqua1607 */ self.quantize64("1.2360", "1.00", "1.24", .up, .isInexact)
    /* ddqua1608 */ self.quantize64("1.2370", "1.00", "1.24", .up, .isInexact)
    /* ddqua1609 */ self.quantize64("1.2399", "1.00", "1.24", .up, .isInexact)
    /* ddqua161 */ self.quantize64("0", "-9e0", "0", .toNearestOrEven)
    /* ddqua1611 */ self.quantize64("-1.2399", "1.00", "-1.23", .up, .isInexact)
    /* ddqua162 */ self.quantize64("1", "-7e0", "1", .toNearestOrEven)
    /* ddqua163 */ self.quantize64("0.1", "-1e+2", "0E+2", .toNearestOrEven, .isInexact)
    /* ddqua165 */ self.quantize64("0.1", "0e+1", "0E+1", .toNearestOrEven, .isInexact)
    /* ddqua166 */ self.quantize64("0.1", "2e0", "0", .toNearestOrEven, .isInexact)
    /* ddqua167 */ self.quantize64("0.1", "3e-1", "0.1", .toNearestOrEven)
    /* ddqua168 */ self.quantize64("0.1", "44e-2", "0.10", .toNearestOrEven)
    /* ddqua169 */ self.quantize64("0.1", "555e-3", "0.100", .toNearestOrEven)
    /* ddqua170 */ self.quantize64("0.9", "6666e+2", "0E+2", .toNearestOrEven, .isInexact)
    /* ddqua1700 */ self.quantize64("1.2300", "1.00", "1.23", .down)
    /* ddqua1701 */ self.quantize64("1.2301", "1.00", "1.23", .down, .isInexact)
    /* ddqua1702 */ self.quantize64("1.2310", "1.00", "1.23", .down, .isInexact)
    /* ddqua1703 */ self.quantize64("1.2350", "1.00", "1.23", .down, .isInexact)
    /* ddqua1704 */ self.quantize64("1.2351", "1.00", "1.23", .down, .isInexact)
    /* ddqua1705 */ self.quantize64("1.2450", "1.00", "1.24", .down, .isInexact)
    /* ddqua1706 */ self.quantize64("1.2451", "1.00", "1.24", .down, .isInexact)
    /* ddqua1707 */ self.quantize64("1.2360", "1.00", "1.23", .down, .isInexact)
    /* ddqua1708 */ self.quantize64("1.2370", "1.00", "1.23", .down, .isInexact)
    /* ddqua1709 */ self.quantize64("1.2399", "1.00", "1.23", .down, .isInexact)
    /* ddqua171 */ self.quantize64("0.9", "-777e+1", "0E+1", .toNearestOrEven, .isInexact)
    /* ddqua1711 */ self.quantize64("-1.2399", "1.00", "-1.24", .down, .isInexact)
    /* ddqua172 */ self.quantize64("0.9", "-88e+0", "1", .toNearestOrEven, .isInexact)
    /* ddqua173 */ self.quantize64("0.9", "-9e-1", "0.9", .toNearestOrEven)
    /* ddqua174 */ self.quantize64("0.9", "0e-2", "0.90", .toNearestOrEven)
    /* ddqua175 */ self.quantize64("0.9", "1.1e-3", "0.9000", .toNearestOrEven)
    /* ddqua181 */ self.quantize64("-0", "1.1e0", "-0.0", .toNearestOrEven)
    /* ddqua182 */ self.quantize64("-1", "-1e0", "-1", .toNearestOrEven)
    /* ddqua183 */ self.quantize64("-0.1", "11e+2", "-0E+2", .toNearestOrEven, .isInexact)
    /* ddqua185 */ self.quantize64("-0.1", "111e+1", "-0E+1", .toNearestOrEven, .isInexact)
    /* ddqua186 */ self.quantize64("-0.1", "71e0", "-0", .toNearestOrEven, .isInexact)
    /* ddqua187 */ self.quantize64("-0.1", "-91e-1", "-0.1", .toNearestOrEven)
    /* ddqua188 */ self.quantize64("-0.1", "-.1e-2", "-0.100", .toNearestOrEven)
    /* ddqua189 */ self.quantize64("-0.1", "-1e-3", "-0.100", .toNearestOrEven)
    /* ddqua190 */ self.quantize64("-0.9", "0e+2", "-0E+2", .toNearestOrEven, .isInexact)
    /* ddqua191 */ self.quantize64("-0.9", "-0e+1", "-0E+1", .toNearestOrEven, .isInexact)
    /* ddqua192 */ self.quantize64("-0.9", "-10e+0", "-1", .toNearestOrEven, .isInexact)
    /* ddqua193 */ self.quantize64("-0.9", "100e-1", "-0.9", .toNearestOrEven)
    /* ddqua194 */ self.quantize64("-0.9", "999e-2", "-0.90", .toNearestOrEven)
    /* ddqua201 */ self.quantize64("-1", "1e+0", "-1", .toNearestOrEven)
    /* ddqua202 */ self.quantize64("-1", "1e+1", "-0E+1", .toNearestOrEven, .isInexact)
    /* ddqua203 */ self.quantize64("-1", "1e+2", "-0E+2", .toNearestOrEven, .isInexact)
    /* ddqua204 */ self.quantize64("0", "1e+0", "0", .toNearestOrEven)
    /* ddqua205 */ self.quantize64("0", "1e+1", "0E+1", .toNearestOrEven)
    /* ddqua206 */ self.quantize64("0", "1e+2", "0E+2", .toNearestOrEven)
    /* ddqua207 */ self.quantize64("+1", "1e+0", "1", .toNearestOrEven)
    /* ddqua208 */ self.quantize64("+1", "1e+1", "0E+1", .toNearestOrEven, .isInexact)
    /* ddqua209 */ self.quantize64("+1", "1e+2", "0E+2", .toNearestOrEven, .isInexact)
    /* ddqua220 */ self.quantize64("1.04", "1e+3", "0E+3", .toNearestOrEven, .isInexact)
    /* ddqua221 */ self.quantize64("1.04", "1e+2", "0E+2", .toNearestOrEven, .isInexact)
    /* ddqua222 */ self.quantize64("1.04", "1e+1", "0E+1", .toNearestOrEven, .isInexact)
    /* ddqua223 */ self.quantize64("1.04", "1e+0", "1", .toNearestOrEven, .isInexact)
    /* ddqua224 */ self.quantize64("1.05", "1e+3", "0E+3", .toNearestOrEven, .isInexact)
    /* ddqua225 */ self.quantize64("1.05", "1e+2", "0E+2", .toNearestOrEven, .isInexact)
    /* ddqua226 */ self.quantize64("1.05", "1e+1", "0E+1", .toNearestOrEven, .isInexact)
    /* ddqua227 */ self.quantize64("1.05", "1e+0", "1", .toNearestOrEven, .isInexact)
    /* ddqua228 */ self.quantize64("1.05", "1e+3", "0E+3", .toNearestOrEven, .isInexact)
    /* ddqua229 */ self.quantize64("1.05", "1e+2", "0E+2", .toNearestOrEven, .isInexact)
    /* ddqua230 */ self.quantize64("1.05", "1e+1", "0E+1", .toNearestOrEven, .isInexact)
    /* ddqua231 */ self.quantize64("1.05", "1e+0", "1", .toNearestOrEven, .isInexact)
    /* ddqua232 */ self.quantize64("1.06", "1e+3", "0E+3", .toNearestOrEven, .isInexact)
    /* ddqua233 */ self.quantize64("1.06", "1e+2", "0E+2", .toNearestOrEven, .isInexact)
    /* ddqua234 */ self.quantize64("1.06", "1e+1", "0E+1", .toNearestOrEven, .isInexact)
    /* ddqua235 */ self.quantize64("1.06", "1e+0", "1", .toNearestOrEven, .isInexact)
    /* ddqua240 */ self.quantize64("-10", "1e+1", "-1E+1", .toNearestOrEven)
    /* ddqua241 */ self.quantize64("+1", "1e+1", "0E+1", .toNearestOrEven, .isInexact)
    /* ddqua242 */ self.quantize64("+10", "1e+1", "1E+1", .toNearestOrEven)
    /* ddqua243 */ self.quantize64("1E+1", "1e+1", "1E+1", .toNearestOrEven)
    /* ddqua244 */ self.quantize64("1E+2", "1e+1", "1.0E+2", .toNearestOrEven)
    /* ddqua245 */ self.quantize64("1E+3", "1e+1", "1.00E+3", .toNearestOrEven)
    /* ddqua246 */ self.quantize64("1E+4", "1e+1", "1.000E+4", .toNearestOrEven)
    /* ddqua247 */ self.quantize64("1E+5", "1e+1", "1.0000E+5", .toNearestOrEven)
    /* ddqua248 */ self.quantize64("1E+6", "1e+1", "1.00000E+6", .toNearestOrEven)
    /* ddqua249 */ self.quantize64("1E+7", "1e+1", "1.000000E+7", .toNearestOrEven)
    /* ddqua250 */ self.quantize64("1E+8", "1e+1", "1.0000000E+8", .toNearestOrEven)
    /* ddqua251 */ self.quantize64("1E+9", "1e+1", "1.00000000E+9", .toNearestOrEven)
    /* ddqua252 */ self.quantize64("1E+17", "1e+1", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddqua253 */ self.quantize64("1E-17", "1e+1", "0E+1", .toNearestOrEven, .isInexact)
    /* ddqua254 */ self.quantize64("1E-2", "1e+1", "0E+1", .toNearestOrEven, .isInexact)
    /* ddqua255 */ self.quantize64("0E-17", "1e+1", "0E+1", .toNearestOrEven)
    /* ddqua256 */ self.quantize64("-0E-17", "1e+1", "-0E+1", .toNearestOrEven)
    /* ddqua257 */ self.quantize64("-0E-1", "1e+1", "-0E+1", .toNearestOrEven)
    /* ddqua258 */ self.quantize64("-0", "1e+1", "-0E+1", .toNearestOrEven)
    /* ddqua259 */ self.quantize64("-0E+1", "1e+1", "-0E+1", .toNearestOrEven)
    /* ddqua260 */ self.quantize64("-10", "1e+2", "-0E+2", .toNearestOrEven, .isInexact)
    /* ddqua261 */ self.quantize64("+1", "1e+2", "0E+2", .toNearestOrEven, .isInexact)
    /* ddqua262 */ self.quantize64("+10", "1e+2", "0E+2", .toNearestOrEven, .isInexact)
    /* ddqua263 */ self.quantize64("1E+1", "1e+2", "0E+2", .toNearestOrEven, .isInexact)
    /* ddqua264 */ self.quantize64("1E+2", "1e+2", "1E+2", .toNearestOrEven)
    /* ddqua265 */ self.quantize64("1E+3", "1e+2", "1.0E+3", .toNearestOrEven)
    /* ddqua266 */ self.quantize64("1E+4", "1e+2", "1.00E+4", .toNearestOrEven)
    /* ddqua267 */ self.quantize64("1E+5", "1e+2", "1.000E+5", .toNearestOrEven)
    /* ddqua268 */ self.quantize64("1E+6", "1e+2", "1.0000E+6", .toNearestOrEven)
    /* ddqua269 */ self.quantize64("1E+7", "1e+2", "1.00000E+7", .toNearestOrEven)
    /* ddqua270 */ self.quantize64("1E+8", "1e+2", "1.000000E+8", .toNearestOrEven)
    /* ddqua271 */ self.quantize64("1E+9", "1e+2", "1.0000000E+9", .toNearestOrEven)
    /* ddqua272 */ self.quantize64("1E+10", "1e+2", "1.00000000E+10", .toNearestOrEven)
    /* ddqua273 */ self.quantize64("1E-10", "1e+2", "0E+2", .toNearestOrEven, .isInexact)
    /* ddqua274 */ self.quantize64("1E-2", "1e+2", "0E+2", .toNearestOrEven, .isInexact)
    /* ddqua275 */ self.quantize64("0E-10", "1e+2", "0E+2", .toNearestOrEven)
    /* ddqua280 */ self.quantize64("-10", "1e+3", "-0E+3", .toNearestOrEven, .isInexact)
    /* ddqua281 */ self.quantize64("+1", "1e+3", "0E+3", .toNearestOrEven, .isInexact)
    /* ddqua282 */ self.quantize64("+10", "1e+3", "0E+3", .toNearestOrEven, .isInexact)
    /* ddqua283 */ self.quantize64("1E+1", "1e+3", "0E+3", .toNearestOrEven, .isInexact)
    /* ddqua284 */ self.quantize64("1E+2", "1e+3", "0E+3", .toNearestOrEven, .isInexact)
    /* ddqua285 */ self.quantize64("1E+3", "1e+3", "1E+3", .toNearestOrEven)
    /* ddqua286 */ self.quantize64("1E+4", "1e+3", "1.0E+4", .toNearestOrEven)
    /* ddqua287 */ self.quantize64("1E+5", "1e+3", "1.00E+5", .toNearestOrEven)
    /* ddqua288 */ self.quantize64("1E+6", "1e+3", "1.000E+6", .toNearestOrEven)
    /* ddqua289 */ self.quantize64("1E+7", "1e+3", "1.0000E+7", .toNearestOrEven)
    /* ddqua290 */ self.quantize64("1E+8", "1e+3", "1.00000E+8", .toNearestOrEven)
    /* ddqua291 */ self.quantize64("1E+9", "1e+3", "1.000000E+9", .toNearestOrEven)
    /* ddqua292 */ self.quantize64("1E+10", "1e+3", "1.0000000E+10", .toNearestOrEven)
    /* ddqua293 */ self.quantize64("1E-10", "1e+3", "0E+3", .toNearestOrEven, .isInexact)
    /* ddqua294 */ self.quantize64("1E-2", "1e+3", "0E+3", .toNearestOrEven, .isInexact)
    /* ddqua295 */ self.quantize64("0E-10", "1e+3", "0E+3", .toNearestOrEven)
    /* ddqua300 */ self.quantize64("0.0078", "1e-5", "0.00780", .toNearestOrEven)
    /* ddqua301 */ self.quantize64("0.0078", "1e-4", "0.0078", .toNearestOrEven)
    /* ddqua302 */ self.quantize64("0.0078", "1e-3", "0.008", .toNearestOrEven, .isInexact)
    /* ddqua303 */ self.quantize64("0.0078", "1e-2", "0.01", .toNearestOrEven, .isInexact)
    /* ddqua304 */ self.quantize64("0.0078", "1e-1", "0.0", .toNearestOrEven, .isInexact)
    /* ddqua305 */ self.quantize64("0.0078", "1e0", "0", .toNearestOrEven, .isInexact)
    /* ddqua306 */ self.quantize64("0.0078", "1e+1", "0E+1", .toNearestOrEven, .isInexact)
    /* ddqua307 */ self.quantize64("0.0078", "1e+2", "0E+2", .toNearestOrEven, .isInexact)
    /* ddqua310 */ self.quantize64("-0.0078", "1e-5", "-0.00780", .toNearestOrEven)
    /* ddqua311 */ self.quantize64("-0.0078", "1e-4", "-0.0078", .toNearestOrEven)
    /* ddqua312 */ self.quantize64("-0.0078", "1e-3", "-0.008", .toNearestOrEven, .isInexact)
    /* ddqua313 */ self.quantize64("-0.0078", "1e-2", "-0.01", .toNearestOrEven, .isInexact)
    /* ddqua314 */ self.quantize64("-0.0078", "1e-1", "-0.0", .toNearestOrEven, .isInexact)
    /* ddqua315 */ self.quantize64("-0.0078", "1e0", "-0", .toNearestOrEven, .isInexact)
    /* ddqua316 */ self.quantize64("-0.0078", "1e+1", "-0E+1", .toNearestOrEven, .isInexact)
    /* ddqua317 */ self.quantize64("-0.0078", "1e+2", "-0E+2", .toNearestOrEven, .isInexact)
    /* ddqua320 */ self.quantize64("0.078", "1e-5", "0.07800", .toNearestOrEven)
    /* ddqua321 */ self.quantize64("0.078", "1e-4", "0.0780", .toNearestOrEven)
    /* ddqua322 */ self.quantize64("0.078", "1e-3", "0.078", .toNearestOrEven)
    /* ddqua323 */ self.quantize64("0.078", "1e-2", "0.08", .toNearestOrEven, .isInexact)
    /* ddqua324 */ self.quantize64("0.078", "1e-1", "0.1", .toNearestOrEven, .isInexact)
    /* ddqua325 */ self.quantize64("0.078", "1e0", "0", .toNearestOrEven, .isInexact)
    /* ddqua326 */ self.quantize64("0.078", "1e+1", "0E+1", .toNearestOrEven, .isInexact)
    /* ddqua327 */ self.quantize64("0.078", "1e+2", "0E+2", .toNearestOrEven, .isInexact)
    /* ddqua330 */ self.quantize64("-0.078", "1e-5", "-0.07800", .toNearestOrEven)
    /* ddqua331 */ self.quantize64("-0.078", "1e-4", "-0.0780", .toNearestOrEven)
    /* ddqua332 */ self.quantize64("-0.078", "1e-3", "-0.078", .toNearestOrEven)
    /* ddqua333 */ self.quantize64("-0.078", "1e-2", "-0.08", .toNearestOrEven, .isInexact)
    /* ddqua334 */ self.quantize64("-0.078", "1e-1", "-0.1", .toNearestOrEven, .isInexact)
    /* ddqua335 */ self.quantize64("-0.078", "1e0", "-0", .toNearestOrEven, .isInexact)
    /* ddqua336 */ self.quantize64("-0.078", "1e+1", "-0E+1", .toNearestOrEven, .isInexact)
    /* ddqua337 */ self.quantize64("-0.078", "1e+2", "-0E+2", .toNearestOrEven, .isInexact)
    /* ddqua340 */ self.quantize64("0.78", "1e-5", "0.78000", .toNearestOrEven)
    /* ddqua341 */ self.quantize64("0.78", "1e-4", "0.7800", .toNearestOrEven)
    /* ddqua342 */ self.quantize64("0.78", "1e-3", "0.780", .toNearestOrEven)
    /* ddqua343 */ self.quantize64("0.78", "1e-2", "0.78", .toNearestOrEven)
    /* ddqua344 */ self.quantize64("0.78", "1e-1", "0.8", .toNearestOrEven, .isInexact)
    /* ddqua345 */ self.quantize64("0.78", "1e0", "1", .toNearestOrEven, .isInexact)
    /* ddqua346 */ self.quantize64("0.78", "1e+1", "0E+1", .toNearestOrEven, .isInexact)
    /* ddqua347 */ self.quantize64("0.78", "1e+2", "0E+2", .toNearestOrEven, .isInexact)
    /* ddqua350 */ self.quantize64("-0.78", "1e-5", "-0.78000", .toNearestOrEven)
    /* ddqua351 */ self.quantize64("-0.78", "1e-4", "-0.7800", .toNearestOrEven)
    /* ddqua352 */ self.quantize64("-0.78", "1e-3", "-0.780", .toNearestOrEven)
    /* ddqua353 */ self.quantize64("-0.78", "1e-2", "-0.78", .toNearestOrEven)
    /* ddqua354 */ self.quantize64("-0.78", "1e-1", "-0.8", .toNearestOrEven, .isInexact)
    /* ddqua355 */ self.quantize64("-0.78", "1e0", "-1", .toNearestOrEven, .isInexact)
    /* ddqua356 */ self.quantize64("-0.78", "1e+1", "-0E+1", .toNearestOrEven, .isInexact)
    /* ddqua357 */ self.quantize64("-0.78", "1e+2", "-0E+2", .toNearestOrEven, .isInexact)
    /* ddqua360 */ self.quantize64("7.8", "1e-5", "7.80000", .toNearestOrEven)
    /* ddqua361 */ self.quantize64("7.8", "1e-4", "7.8000", .toNearestOrEven)
    /* ddqua362 */ self.quantize64("7.8", "1e-3", "7.800", .toNearestOrEven)
    /* ddqua363 */ self.quantize64("7.8", "1e-2", "7.80", .toNearestOrEven)
    /* ddqua364 */ self.quantize64("7.8", "1e-1", "7.8", .toNearestOrEven)
    /* ddqua365 */ self.quantize64("7.8", "1e0", "8", .toNearestOrEven, .isInexact)
    /* ddqua366 */ self.quantize64("7.8", "1e+1", "1E+1", .toNearestOrEven, .isInexact)
    /* ddqua367 */ self.quantize64("7.8", "1e+2", "0E+2", .toNearestOrEven, .isInexact)
    /* ddqua368 */ self.quantize64("7.8", "1e+3", "0E+3", .toNearestOrEven, .isInexact)
    /* ddqua370 */ self.quantize64("-7.8", "1e-5", "-7.80000", .toNearestOrEven)
    /* ddqua371 */ self.quantize64("-7.8", "1e-4", "-7.8000", .toNearestOrEven)
    /* ddqua372 */ self.quantize64("-7.8", "1e-3", "-7.800", .toNearestOrEven)
    /* ddqua373 */ self.quantize64("-7.8", "1e-2", "-7.80", .toNearestOrEven)
    /* ddqua374 */ self.quantize64("-7.8", "1e-1", "-7.8", .toNearestOrEven)
    /* ddqua375 */ self.quantize64("-7.8", "1e0", "-8", .toNearestOrEven, .isInexact)
    /* ddqua376 */ self.quantize64("-7.8", "1e+1", "-1E+1", .toNearestOrEven, .isInexact)
    /* ddqua377 */ self.quantize64("-7.8", "1e+2", "-0E+2", .toNearestOrEven, .isInexact)
    /* ddqua378 */ self.quantize64("-7.8", "1e+3", "-0E+3", .toNearestOrEven, .isInexact)
    /* ddqua380 */ self.quantize64("1234567352364.506", "1e-2", "1234567352364.51", .toNearestOrEven, .isInexact)
    /* ddqua381 */ self.quantize64("12345673523645.06", "1e-2", "12345673523645.06", .toNearestOrEven)
    /* ddqua382 */ self.quantize64("123456735236450.6", "1e-2", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddqua383 */ self.quantize64("1234567352364506", "1e-2", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddqua384 */ self.quantize64("-1234567352364.506", "1e-2", "-1234567352364.51", .toNearestOrEven, .isInexact)
    /* ddqua385 */ self.quantize64("-12345673523645.06", "1e-2", "-12345673523645.06", .toNearestOrEven)
    /* ddqua386 */ self.quantize64("-123456735236450.6", "1e-2", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddqua387 */ self.quantize64("-1234567352364506", "1e-2", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddqua389 */ self.quantize64("123456735236450.6", "1e-2", "NaN", .towardZero, .isInvalidOperation)
    /* ddqua391 */ self.quantize64("12345678912.34567", "1e-3", "12345678912.346", .toNearestOrAwayFromZero, .isInexact)
    /* ddqua392 */ self.quantize64("123456789123.4567", "1e-3", "123456789123.457", .toNearestOrAwayFromZero, .isInexact)
    /* ddqua393 */ self.quantize64("1234567891234.567", "1e-3", "1234567891234.567", .toNearestOrAwayFromZero)
    /* ddqua394 */ self.quantize64("12345678912345.67", "1e-3", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* ddqua395 */ self.quantize64("123456789123456.7", "1e-3", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* ddqua396 */ self.quantize64("1234567891234567.", "1e-3", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* ddqua400 */ self.quantize64("9.999", "1e-5", "9.99900", .toNearestOrAwayFromZero)
    /* ddqua401 */ self.quantize64("9.999", "1e-4", "9.9990", .toNearestOrAwayFromZero)
    /* ddqua402 */ self.quantize64("9.999", "1e-3", "9.999", .toNearestOrAwayFromZero)
    /* ddqua403 */ self.quantize64("9.999", "1e-2", "10.00", .toNearestOrAwayFromZero, .isInexact)
    /* ddqua404 */ self.quantize64("9.999", "1e-1", "10.0", .toNearestOrAwayFromZero, .isInexact)
    /* ddqua405 */ self.quantize64("9.999", "1e0", "10", .toNearestOrAwayFromZero, .isInexact)
    /* ddqua406 */ self.quantize64("9.999", "1e1", "1E+1", .toNearestOrAwayFromZero, .isInexact)
    /* ddqua407 */ self.quantize64("9.999", "1e2", "0E+2", .toNearestOrAwayFromZero, .isInexact)
    /* ddqua410 */ self.quantize64("0.999", "1e-5", "0.99900", .toNearestOrAwayFromZero)
    /* ddqua411 */ self.quantize64("0.999", "1e-4", "0.9990", .toNearestOrAwayFromZero)
    /* ddqua412 */ self.quantize64("0.999", "1e-3", "0.999", .toNearestOrAwayFromZero)
    /* ddqua413 */ self.quantize64("0.999", "1e-2", "1.00", .toNearestOrAwayFromZero, .isInexact)
    /* ddqua414 */ self.quantize64("0.999", "1e-1", "1.0", .toNearestOrAwayFromZero, .isInexact)
    /* ddqua415 */ self.quantize64("0.999", "1e0", "1", .toNearestOrAwayFromZero, .isInexact)
    /* ddqua416 */ self.quantize64("0.999", "1e1", "0E+1", .toNearestOrAwayFromZero, .isInexact)
    /* ddqua420 */ self.quantize64("0.0999", "1e-5", "0.09990", .toNearestOrAwayFromZero)
    /* ddqua421 */ self.quantize64("0.0999", "1e-4", "0.0999", .toNearestOrAwayFromZero)
    /* ddqua422 */ self.quantize64("0.0999", "1e-3", "0.100", .toNearestOrAwayFromZero, .isInexact)
    /* ddqua423 */ self.quantize64("0.0999", "1e-2", "0.10", .toNearestOrAwayFromZero, .isInexact)
    /* ddqua424 */ self.quantize64("0.0999", "1e-1", "0.1", .toNearestOrAwayFromZero, .isInexact)
    /* ddqua425 */ self.quantize64("0.0999", "1e0", "0", .toNearestOrAwayFromZero, .isInexact)
    /* ddqua426 */ self.quantize64("0.0999", "1e1", "0E+1", .toNearestOrAwayFromZero, .isInexact)
    /* ddqua430 */ self.quantize64("0.00999", "1e-5", "0.00999", .toNearestOrAwayFromZero)
    /* ddqua431 */ self.quantize64("0.00999", "1e-4", "0.0100", .toNearestOrAwayFromZero, .isInexact)
    /* ddqua432 */ self.quantize64("0.00999", "1e-3", "0.010", .toNearestOrAwayFromZero, .isInexact)
    /* ddqua433 */ self.quantize64("0.00999", "1e-2", "0.01", .toNearestOrAwayFromZero, .isInexact)
    /* ddqua434 */ self.quantize64("0.00999", "1e-1", "0.0", .toNearestOrAwayFromZero, .isInexact)
    /* ddqua435 */ self.quantize64("0.00999", "1e0", "0", .toNearestOrAwayFromZero, .isInexact)
    /* ddqua436 */ self.quantize64("0.00999", "1e1", "0E+1", .toNearestOrAwayFromZero, .isInexact)
    /* ddqua440 */ self.quantize64("0.000999", "1e-5", "0.00100", .toNearestOrAwayFromZero, .isInexact)
    /* ddqua441 */ self.quantize64("0.000999", "1e-4", "0.0010", .toNearestOrAwayFromZero, .isInexact)
    /* ddqua442 */ self.quantize64("0.000999", "1e-3", "0.001", .toNearestOrAwayFromZero, .isInexact)
    /* ddqua443 */ self.quantize64("0.000999", "1e-2", "0.00", .toNearestOrAwayFromZero, .isInexact)
    /* ddqua444 */ self.quantize64("0.000999", "1e-1", "0.0", .toNearestOrAwayFromZero, .isInexact)
    /* ddqua445 */ self.quantize64("0.000999", "1e0", "0", .toNearestOrAwayFromZero, .isInexact)
    /* ddqua446 */ self.quantize64("0.000999", "1e1", "0E+1", .toNearestOrAwayFromZero, .isInexact)
    /* ddqua481 */ self.quantize64("12345678000", "1e+3", "1.2345678E+10", .toNearestOrAwayFromZero)
    /* ddqua482 */ self.quantize64("1234567800", "1e+1", "1.23456780E+9", .toNearestOrAwayFromZero)
    /* ddqua483 */ self.quantize64("1234567890", "1e+1", "1.23456789E+9", .toNearestOrAwayFromZero)
    /* ddqua484 */ self.quantize64("1234567891", "1e+1", "1.23456789E+9", .toNearestOrAwayFromZero, .isInexact)
    /* ddqua485 */ self.quantize64("12345678901", "1e+2", "1.23456789E+10", .toNearestOrAwayFromZero, .isInexact)
    /* ddqua486 */ self.quantize64("1234567896", "1e+1", "1.23456790E+9", .toNearestOrAwayFromZero, .isInexact)
    /* ddqua487 */ self.quantize64("1234.987643", "1e-4", "1234.9876", .toNearestOrAwayFromZero, .isInexact)
    /* ddqua488 */ self.quantize64("1234.987647", "1e-4", "1234.9876", .toNearestOrAwayFromZero, .isInexact)
    /* ddqua491 */ self.quantize64("12345678000", "1e+3", "1.2345678E+10", .toNearestOrAwayFromZero)
    /* ddqua492 */ self.quantize64("1234567800", "1e+1", "1.23456780E+9", .toNearestOrAwayFromZero)
    /* ddqua493 */ self.quantize64("1234567890", "1e+1", "1.23456789E+9", .toNearestOrAwayFromZero)
    /* ddqua494 */ self.quantize64("1234567891", "1e+1", "1.23456789E+9", .toNearestOrAwayFromZero, .isInexact)
    /* ddqua495 */ self.quantize64("12345678901", "1e+2", "1.23456789E+10", .toNearestOrAwayFromZero, .isInexact)
    /* ddqua496 */ self.quantize64("1234567896", "1e+1", "1.23456790E+9", .toNearestOrAwayFromZero, .isInexact)
    /* ddqua497 */ self.quantize64("1234.987643", "1e-4", "1234.9876", .toNearestOrAwayFromZero, .isInexact)
    /* ddqua498 */ self.quantize64("1234.987647", "1e-4", "1234.9876", .toNearestOrAwayFromZero, .isInexact)
    /* ddqua500 */ self.quantize64("0", "1e1", "0E+1", .toNearestOrAwayFromZero)
    /* ddqua501 */ self.quantize64("0", "1e0", "0", .toNearestOrAwayFromZero)
    /* ddqua502 */ self.quantize64("0", "1e-1", "0.0", .toNearestOrAwayFromZero)
    /* ddqua503 */ self.quantize64("0.0", "1e-1", "0.0", .toNearestOrAwayFromZero)
    /* ddqua504 */ self.quantize64("0.0", "1e0", "0", .toNearestOrAwayFromZero)
    /* ddqua505 */ self.quantize64("0.0", "1e+1", "0E+1", .toNearestOrAwayFromZero)
    /* ddqua506 */ self.quantize64("0E+1", "1e-1", "0.0", .toNearestOrAwayFromZero)
    /* ddqua507 */ self.quantize64("0E+1", "1e0", "0", .toNearestOrAwayFromZero)
    /* ddqua508 */ self.quantize64("0E+1", "1e+1", "0E+1", .toNearestOrAwayFromZero)
    /* ddqua509 */ self.quantize64("-0", "1e1", "-0E+1", .toNearestOrAwayFromZero)
    /* ddqua510 */ self.quantize64("-0", "1e0", "-0", .toNearestOrAwayFromZero)
    /* ddqua511 */ self.quantize64("-0", "1e-1", "-0.0", .toNearestOrAwayFromZero)
    /* ddqua512 */ self.quantize64("-0.0", "1e-1", "-0.0", .toNearestOrAwayFromZero)
    /* ddqua513 */ self.quantize64("-0.0", "1e0", "-0", .toNearestOrAwayFromZero)
    /* ddqua514 */ self.quantize64("-0.0", "1e+1", "-0E+1", .toNearestOrAwayFromZero)
    /* ddqua515 */ self.quantize64("-0E+1", "1e-1", "-0.0", .toNearestOrAwayFromZero)
    /* ddqua516 */ self.quantize64("-0E+1", "1e0", "-0", .toNearestOrAwayFromZero)
    /* ddqua517 */ self.quantize64("-0E+1", "1e+1", "-0E+1", .toNearestOrAwayFromZero)
    /* ddqua520 */ self.quantize64("1.234", "1e359", "0E+359", .toNearestOrAwayFromZero, .isInexact)
    /* ddqua521 */ self.quantize64("123.456", "1e359", "0E+359", .toNearestOrAwayFromZero, .isInexact)
    /* ddqua522 */ self.quantize64("1.234", "1e359", "0E+359", .toNearestOrAwayFromZero, .isInexact)
    /* ddqua523 */ self.quantize64("123.456", "1e359", "0E+359", .toNearestOrAwayFromZero, .isInexact)
    /* ddqua526 */ self.quantize64("1.234", "1e-299", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* ddqua527 */ self.quantize64("123.456", "1e-299", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* ddqua528 */ self.quantize64("1.234", "1e-299", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* ddqua529 */ self.quantize64("123.456", "1e-299", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* ddqua532 */ self.quantize64("1.234E+299", "1e299", "1E+299", .toNearestOrAwayFromZero, .isInexact)
    /* ddqua533 */ self.quantize64("1.234E+298", "1e299", "0E+299", .toNearestOrAwayFromZero, .isInexact)
    /* ddqua534 */ self.quantize64("1.234", "1e299", "0E+299", .toNearestOrAwayFromZero, .isInexact)
    /* ddqua537 */ self.quantize64("0", "1e-299", "0E-299", .toNearestOrAwayFromZero)
    /* ddqua538 */ self.quantize64("1.234", "1e-299", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* ddqua539 */ self.quantize64("1.234", "1e-300", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* ddqua580 */ self.quantize64("Inf", "-Inf", "Infinity", .toNearestOrAwayFromZero)
    /* ddqua581 */ self.quantize64("Inf", "1e-299", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* ddqua582 */ self.quantize64("Inf", "1e-1", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* ddqua583 */ self.quantize64("Inf", "1e0", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* ddqua584 */ self.quantize64("Inf", "1e1", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* ddqua585 */ self.quantize64("Inf", "1e299", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* ddqua586 */ self.quantize64("Inf", "Inf", "Infinity", .toNearestOrAwayFromZero)
    /* ddqua587 */ self.quantize64("-1000", "Inf", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* ddqua588 */ self.quantize64("-Inf", "Inf", "-Infinity", .toNearestOrAwayFromZero)
    /* ddqua589 */ self.quantize64("-1", "Inf", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* ddqua590 */ self.quantize64("0", "Inf", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* ddqua591 */ self.quantize64("1", "Inf", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* ddqua592 */ self.quantize64("1000", "Inf", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* ddqua593 */ self.quantize64("Inf", "Inf", "Infinity", .toNearestOrAwayFromZero)
    /* ddqua594 */ self.quantize64("Inf", "1e-0", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* ddqua595 */ self.quantize64("-0", "Inf", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* ddqua600 */ self.quantize64("-Inf", "-Inf", "-Infinity", .toNearestOrAwayFromZero)
    /* ddqua601 */ self.quantize64("-Inf", "1e-299", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* ddqua602 */ self.quantize64("-Inf", "1e-1", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* ddqua603 */ self.quantize64("-Inf", "1e0", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* ddqua604 */ self.quantize64("-Inf", "1e1", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* ddqua605 */ self.quantize64("-Inf", "1e299", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* ddqua606 */ self.quantize64("-Inf", "Inf", "-Infinity", .toNearestOrAwayFromZero)
    /* ddqua607 */ self.quantize64("-1000", "Inf", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* ddqua608 */ self.quantize64("-Inf", "-Inf", "-Infinity", .toNearestOrAwayFromZero)
    /* ddqua609 */ self.quantize64("-1", "-Inf", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* ddqua610 */ self.quantize64("0", "-Inf", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* ddqua611 */ self.quantize64("1", "-Inf", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* ddqua612 */ self.quantize64("1000", "-Inf", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* ddqua613 */ self.quantize64("Inf", "-Inf", "Infinity", .toNearestOrAwayFromZero)
    /* ddqua614 */ self.quantize64("-Inf", "1e-0", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* ddqua615 */ self.quantize64("-0", "-Inf", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* ddqua621 */ self.quantize64("NaN", "-Inf", "NaN", .toNearestOrAwayFromZero)
    /* ddqua622 */ self.quantize64("NaN", "1e-299", "NaN", .toNearestOrAwayFromZero)
    /* ddqua623 */ self.quantize64("NaN", "1e-1", "NaN", .toNearestOrAwayFromZero)
    /* ddqua624 */ self.quantize64("NaN", "1e0", "NaN", .toNearestOrAwayFromZero)
    /* ddqua625 */ self.quantize64("NaN", "1e1", "NaN", .toNearestOrAwayFromZero)
    /* ddqua626 */ self.quantize64("NaN", "1e299", "NaN", .toNearestOrAwayFromZero)
    /* ddqua627 */ self.quantize64("NaN", "Inf", "NaN", .toNearestOrAwayFromZero)
    /* ddqua628 */ self.quantize64("NaN", "NaN", "NaN", .toNearestOrAwayFromZero)
    /* ddqua629 */ self.quantize64("-Inf", "NaN", "NaN", .toNearestOrAwayFromZero)
    /* ddqua630 */ self.quantize64("-1000", "NaN", "NaN", .toNearestOrAwayFromZero)
    /* ddqua631 */ self.quantize64("-1", "NaN", "NaN", .toNearestOrAwayFromZero)
    /* ddqua632 */ self.quantize64("0", "NaN", "NaN", .toNearestOrAwayFromZero)
    /* ddqua633 */ self.quantize64("1", "NaN", "NaN", .toNearestOrAwayFromZero)
    /* ddqua634 */ self.quantize64("1000", "NaN", "NaN", .toNearestOrAwayFromZero)
    /* ddqua635 */ self.quantize64("Inf", "NaN", "NaN", .toNearestOrAwayFromZero)
    /* ddqua636 */ self.quantize64("NaN", "1e-0", "NaN", .toNearestOrAwayFromZero)
    /* ddqua637 */ self.quantize64("-0", "NaN", "NaN", .toNearestOrAwayFromZero)
    /* ddqua641 */ self.quantize64("sNaN", "-Inf", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* ddqua642 */ self.quantize64("sNaN", "1e-299", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* ddqua643 */ self.quantize64("sNaN", "1e-1", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* ddqua644 */ self.quantize64("sNaN", "1e0", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* ddqua645 */ self.quantize64("sNaN", "1e1", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* ddqua646 */ self.quantize64("sNaN", "1e299", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* ddqua647 */ self.quantize64("sNaN", "NaN", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* ddqua648 */ self.quantize64("sNaN", "sNaN", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* ddqua649 */ self.quantize64("NaN", "sNaN", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* ddqua650 */ self.quantize64("-Inf", "sNaN", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* ddqua651 */ self.quantize64("-1000", "sNaN", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* ddqua652 */ self.quantize64("-1", "sNaN", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* ddqua653 */ self.quantize64("0", "sNaN", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* ddqua654 */ self.quantize64("1", "sNaN", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* ddqua655 */ self.quantize64("1000", "sNaN", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* ddqua656 */ self.quantize64("Inf", "sNaN", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* ddqua657 */ self.quantize64("NaN", "sNaN", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* ddqua658 */ self.quantize64("sNaN", "1e-0", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* ddqua659 */ self.quantize64("-0", "sNaN", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* ddqua661 */ self.quantize64("NaN(0x9)", "-Inf", "NaN(0x9)", .toNearestOrAwayFromZero)
    /* ddqua662 */ self.quantize64("NaN(0x8)", "919", "NaN(0x8)", .toNearestOrAwayFromZero)
    /* ddqua663 */ self.quantize64("NaN(0x47)", "Inf", "NaN(0x47)", .toNearestOrAwayFromZero)
    /* ddqua664 */ self.quantize64("NaN(0x6)", "NaN(0x5)", "NaN(0x6)", .toNearestOrAwayFromZero)
    /* ddqua665 */ self.quantize64("-Inf", "NaN(0x4)", "NaN(0x4)", .toNearestOrAwayFromZero)
    /* ddqua666 */ self.quantize64("-919", "NaN(0x1f)", "NaN(0x1f)", .toNearestOrAwayFromZero)
    /* ddqua667 */ self.quantize64("Inf", "NaN(0x2)", "NaN(0x2)", .toNearestOrAwayFromZero)
    /* ddqua671 */ self.quantize64("sNaN(0x63)", "-Inf", "NaN(0x63)", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* ddqua672 */ self.quantize64("sNaN(0x62)", "-11", "NaN(0x62)", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* ddqua673 */ self.quantize64("sNaN(0x61)", "NaN", "NaN(0x61)", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* ddqua674 */ self.quantize64("sNaN(0x10)", "sNaN(0x5e)", "NaN(0x10)", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* ddqua675 */ self.quantize64("NaN(0x5f)", "sNaN(0x5d)", "NaN(0x5d)", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* ddqua676 */ self.quantize64("-Inf", "sNaN(0x5c)", "NaN(0x5c)", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* ddqua677 */ self.quantize64("088", "sNaN(0x5b)", "NaN(0x5b)", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* ddqua678 */ self.quantize64("Inf", "sNaN(0x5a)", "NaN(0x5a)", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* ddqua679 */ self.quantize64("NaN", "sNaN(0x58)", "NaN(0x58)", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* ddqua681 */ self.quantize64("-NaN(0x9)", "-Inf", "-NaN(0x9)", .toNearestOrAwayFromZero)
    /* ddqua682 */ self.quantize64("-NaN(0x8)", "919", "-NaN(0x8)", .toNearestOrAwayFromZero)
    /* ddqua683 */ self.quantize64("-NaN(0x47)", "Inf", "-NaN(0x47)", .toNearestOrAwayFromZero)
    /* ddqua684 */ self.quantize64("-NaN(0x6)", "-NaN(0x5)", "-NaN(0x6)", .toNearestOrAwayFromZero)
    /* ddqua685 */ self.quantize64("-Inf", "-NaN(0x4)", "-NaN(0x4)", .toNearestOrAwayFromZero)
    /* ddqua686 */ self.quantize64("-919", "-NaN(0x1f)", "-NaN(0x1f)", .toNearestOrAwayFromZero)
    /* ddqua687 */ self.quantize64("Inf", "-NaN(0x2)", "-NaN(0x2)", .toNearestOrAwayFromZero)
    /* ddqua691 */ self.quantize64("-sNaN(0x63)", "-Inf", "-NaN(0x63)", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* ddqua692 */ self.quantize64("-sNaN(0x62)", "-11", "-NaN(0x62)", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* ddqua693 */ self.quantize64("-sNaN(0x61)", "NaN", "-NaN(0x61)", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* ddqua694 */ self.quantize64("-sNaN(0x10)", "sNaN(0x5e)", "-NaN(0x10)", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* ddqua695 */ self.quantize64("-NaN(0x5f)", "-sNaN(0x5d)", "-NaN(0x5d)", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* ddqua696 */ self.quantize64("-Inf", "-sNaN(0x5c)", "-NaN(0x5c)", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* ddqua697 */ self.quantize64("088", "-sNaN(0x5b)", "-NaN(0x5b)", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* ddqua698 */ self.quantize64("Inf", "-sNaN(0x5a)", "-NaN(0x5a)", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* ddqua699 */ self.quantize64("NaN", "-sNaN(0x58)", "-NaN(0x58)", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* ddqua710 */ self.quantize64("1.00E-383", "1e-383", "1E-383", .toNearestOrAwayFromZero)
    /* ddqua711 */ self.quantize64("0.1E-383", "2e-384", "1E-384", .toNearestOrAwayFromZero)
    /* ddqua712 */ self.quantize64("0.10E-383", "3e-384", "1E-384", .toNearestOrAwayFromZero)
    /* ddqua713 */ self.quantize64("0.100E-383", "4e-384", "1E-384", .toNearestOrAwayFromZero)
    /* ddqua714 */ self.quantize64("0.01E-383", "5e-385", "1E-385", .toNearestOrAwayFromZero)
    /* ddqua715 */ self.quantize64("0.999E-383", "1e-383", "1E-383", .toNearestOrAwayFromZero, .isInexact)
    /* ddqua716 */ self.quantize64("0.099E-383", "10e-384", "1E-384", .toNearestOrAwayFromZero, .isInexact)
    /* ddqua717 */ self.quantize64("0.009E-383", "1e-385", "1E-385", .toNearestOrAwayFromZero, .isInexact)
    /* ddqua718 */ self.quantize64("0.001E-383", "1e-385", "0E-385", .toNearestOrAwayFromZero, .isInexact)
    /* ddqua719 */ self.quantize64("0.0009E-383", "1e-385", "0E-385", .toNearestOrAwayFromZero, .isInexact)
    /* ddqua720 */ self.quantize64("0.0001E-383", "1e-385", "0E-385", .toNearestOrAwayFromZero, .isInexact)
    /* ddqua730 */ self.quantize64("-1.00E-383", "1e-383", "-1E-383", .toNearestOrAwayFromZero)
    /* ddqua731 */ self.quantize64("-0.1E-383", "1e-383", "-0E-383", .toNearestOrAwayFromZero, .isInexact)
    /* ddqua732 */ self.quantize64("-0.10E-383", "1e-383", "-0E-383", .toNearestOrAwayFromZero, .isInexact)
    /* ddqua733 */ self.quantize64("-0.100E-383", "1e-383", "-0E-383", .toNearestOrAwayFromZero, .isInexact)
    /* ddqua734 */ self.quantize64("-0.01E-383", "1e-383", "-0E-383", .toNearestOrAwayFromZero, .isInexact)
    /* ddqua735 */ self.quantize64("-0.999E-383", "90e-383", "-1E-383", .toNearestOrAwayFromZero, .isInexact)
    /* ddqua736 */ self.quantize64("-0.099E-383", "-1e-383", "-0E-383", .toNearestOrAwayFromZero, .isInexact)
    /* ddqua737 */ self.quantize64("-0.009E-383", "-1e-383", "-0E-383", .toNearestOrAwayFromZero, .isInexact)
    /* ddqua738 */ self.quantize64("-0.001E-383", "-0e-383", "-0E-383", .toNearestOrAwayFromZero, .isInexact)
    /* ddqua739 */ self.quantize64("-0.0001E-383", "0e-383", "-0E-383", .toNearestOrAwayFromZero, .isInexact)
    /* ddqua740 */ self.quantize64("-1.00E-383", "1e-384", "-1.0E-383", .toNearestOrAwayFromZero)
    /* ddqua741 */ self.quantize64("-0.1E-383", "1e-384", "-1E-384", .toNearestOrAwayFromZero)
    /* ddqua742 */ self.quantize64("-0.10E-383", "1e-384", "-1E-384", .toNearestOrAwayFromZero)
    /* ddqua743 */ self.quantize64("-0.100E-383", "1e-384", "-1E-384", .toNearestOrAwayFromZero)
    /* ddqua744 */ self.quantize64("-0.01E-383", "1e-384", "-0E-384", .toNearestOrAwayFromZero, .isInexact)
    /* ddqua745 */ self.quantize64("-0.999E-383", "1e-384", "-1.0E-383", .toNearestOrAwayFromZero, .isInexact)
    /* ddqua746 */ self.quantize64("-0.099E-383", "1e-384", "-1E-384", .toNearestOrAwayFromZero, .isInexact)
    /* ddqua747 */ self.quantize64("-0.009E-383", "1e-384", "-0E-384", .toNearestOrAwayFromZero, .isInexact)
    /* ddqua748 */ self.quantize64("-0.001E-383", "1e-384", "-0E-384", .toNearestOrAwayFromZero, .isInexact)
    /* ddqua749 */ self.quantize64("-0.0001E-383", "1e-384", "-0E-384", .toNearestOrAwayFromZero, .isInexact)
    /* ddqua750 */ self.quantize64("-1.00E-383", "1e-385", "-1.00E-383", .toNearestOrAwayFromZero)
    /* ddqua751 */ self.quantize64("-0.1E-383", "1e-385", "-1.0E-384", .toNearestOrAwayFromZero)
    /* ddqua752 */ self.quantize64("-0.10E-383", "1e-385", "-1.0E-384", .toNearestOrAwayFromZero)
    /* ddqua753 */ self.quantize64("-0.100E-383", "1e-385", "-1.0E-384", .toNearestOrAwayFromZero)
    /* ddqua754 */ self.quantize64("-0.01E-383", "1e-385", "-1E-385", .toNearestOrAwayFromZero)
    /* ddqua755 */ self.quantize64("-0.999E-383", "1e-385", "-1.00E-383", .toNearestOrAwayFromZero, .isInexact)
    /* ddqua756 */ self.quantize64("-0.099E-383", "1e-385", "-1.0E-384", .toNearestOrAwayFromZero, .isInexact)
    /* ddqua757 */ self.quantize64("-0.009E-383", "1e-385", "-1E-385", .toNearestOrAwayFromZero, .isInexact)
    /* ddqua758 */ self.quantize64("-0.001E-383", "1e-385", "-0E-385", .toNearestOrAwayFromZero, .isInexact)
    /* ddqua759 */ self.quantize64("-0.0001E-383", "1e-385", "-0E-385", .toNearestOrAwayFromZero, .isInexact)
    /* ddqua760 */ self.quantize64("-1.00E-383", "1e-386", "-1.000E-383", .toNearestOrAwayFromZero)
    /* ddqua761 */ self.quantize64("-0.1E-383", "1e-386", "-1.00E-384", .toNearestOrAwayFromZero)
    /* ddqua762 */ self.quantize64("-0.10E-383", "1e-386", "-1.00E-384", .toNearestOrAwayFromZero)
    /* ddqua763 */ self.quantize64("-0.100E-383", "1e-386", "-1.00E-384", .toNearestOrAwayFromZero)
    /* ddqua764 */ self.quantize64("-0.01E-383", "1e-386", "-1.0E-385", .toNearestOrAwayFromZero)
    /* ddqua765 */ self.quantize64("-0.999E-383", "1e-386", "-9.99E-384", .toNearestOrAwayFromZero)
    /* ddqua766 */ self.quantize64("-0.099E-383", "1e-386", "-9.9E-385", .toNearestOrAwayFromZero)
    /* ddqua767 */ self.quantize64("-0.009E-383", "1e-386", "-9E-386", .toNearestOrAwayFromZero)
    /* ddqua768 */ self.quantize64("-0.001E-383", "1e-386", "-1E-386", .toNearestOrAwayFromZero)
    /* ddqua769 */ self.quantize64("-0.0001E-383", "1e-386", "-0E-386", .toNearestOrAwayFromZero, .isInexact)
  }

  private func quantize64(
    _ _arg0: String,
    _ _arg1: String,
    _ _expected: String,
    _ rounding: DecimalFloatingPointRoundingRule,
    _ _expectedStatus: DecimalStatus? = nil,
    file: StaticString = #file,
    line: UInt = #line
  ) {
    guard let arg0 = self.parseDecimal64(_arg0, file, line) else { return }
    guard let arg1 = self.parseDecimal64(_arg1, file, line) else { return }
    guard let expected = self.parseDecimal64(_expected, file, line) else { return }
    let expectedStatus = _expectedStatus ?? DecimalStatus()

    var status = DecimalStatus()
    let result = arg0.quantized(to: arg1, rounding: rounding, status: &status)
    let speleotroveResult = self.toSpeleotrove_quantize(arg0, arg1, result: result)
    self.assertEqual(speleotroveResult, expected, file, line)
    self.assertStatus(status, expectedStatus, file, line)
  }

  func test_quantize128() {
    /* dqcan401 */ self.quantize128("#ee080ff3fcff3fcff3fffffffff3fcff", "0", "#ee080ff3fcff3fcff3fcff3fcff3fcff", .toNearestOrEven)
    /* dqcan402 */ self.quantize128("#ee080ff3fffffffffffcff3fcff3fcff", "0", "#ee080ff3fcff3fcff3fcff3fcff3fcff", .toNearestOrEven)
    /* dqcan403 */ self.quantize128("#78800000000000000000000000000000", "Inf", "#78000000000000000000000000000000", .toNearestOrEven)
    /* dqcan404 */ self.quantize128("#78020000000000000000000000000000", "-Inf", "#78000000000000000000000000000000", .toNearestOrEven)
    /* dqcan410 */ self.quantize128("#7c080ff3fcff3fcff3fcff3fcff3fcff", "1", "#7c000ff3fcff3fcff3fcff3fcff3fcff", .toNearestOrEven)
    /* dqcan411 */ self.quantize128("#fc000ff3fcfffffff3fcff3fcff3fcff", "1", "#fc000ff3fcff3fcff3fcff3fcff3fcff", .toNearestOrEven)
    /* dqcan412 */ self.quantize128("#7e100ff3fcff3fcff3fcff3fcff3fcff", "1", "#7c000ff3fcff3fcff3fcff3fcff3fcff", .toNearestOrEven, .isInvalidOperation)
    /* dqcan413 */ self.quantize128("#fe000ff3fcff3fcff3ffffffcff3fcff", "1", "#fc000ff3fcff3fcff3fcff3fcff3fcff", .toNearestOrEven, .isInvalidOperation)
    /* dqqua001 */ self.quantize128("0", "1e0", "0", .toNearestOrEven)
    /* dqqua002 */ self.quantize128("1", "1e0", "1", .toNearestOrEven)
    /* dqqua003 */ self.quantize128("0.1", "1e+2", "0E+2", .toNearestOrEven, .isInexact)
    /* dqqua005 */ self.quantize128("0.1", "1e+1", "0E+1", .toNearestOrEven, .isInexact)
    /* dqqua006 */ self.quantize128("0.1", "1e0", "0", .toNearestOrEven, .isInexact)
    /* dqqua007 */ self.quantize128("0.1", "1e-1", "0.1", .toNearestOrEven)
    /* dqqua008 */ self.quantize128("0.1", "1e-2", "0.10", .toNearestOrEven)
    /* dqqua009 */ self.quantize128("0.1", "1e-3", "0.100", .toNearestOrEven)
    /* dqqua010 */ self.quantize128("0.9", "1e+2", "0E+2", .toNearestOrEven, .isInexact)
    /* dqqua011 */ self.quantize128("0.9", "1e+1", "0E+1", .toNearestOrEven, .isInexact)
    /* dqqua012 */ self.quantize128("0.9", "1e+0", "1", .toNearestOrEven, .isInexact)
    /* dqqua013 */ self.quantize128("0.9", "1e-1", "0.9", .toNearestOrEven)
    /* dqqua014 */ self.quantize128("0.9", "1e-2", "0.90", .toNearestOrEven)
    /* dqqua015 */ self.quantize128("0.9", "1e-3", "0.900", .toNearestOrEven)
    /* dqqua021 */ self.quantize128("-0", "1e0", "-0", .toNearestOrEven)
    /* dqqua022 */ self.quantize128("-1", "1e0", "-1", .toNearestOrEven)
    /* dqqua023 */ self.quantize128("-0.1", "1e+2", "-0E+2", .toNearestOrEven, .isInexact)
    /* dqqua025 */ self.quantize128("-0.1", "1e+1", "-0E+1", .toNearestOrEven, .isInexact)
    /* dqqua026 */ self.quantize128("-0.1", "1e0", "-0", .toNearestOrEven, .isInexact)
    /* dqqua027 */ self.quantize128("-0.1", "1e-1", "-0.1", .toNearestOrEven)
    /* dqqua028 */ self.quantize128("-0.1", "1e-2", "-0.10", .toNearestOrEven)
    /* dqqua029 */ self.quantize128("-0.1", "1e-3", "-0.100", .toNearestOrEven)
    /* dqqua030 */ self.quantize128("-0.9", "1e+2", "-0E+2", .toNearestOrEven, .isInexact)
    /* dqqua031 */ self.quantize128("-0.9", "1e+1", "-0E+1", .toNearestOrEven, .isInexact)
    /* dqqua032 */ self.quantize128("-0.9", "1e+0", "-1", .toNearestOrEven, .isInexact)
    /* dqqua033 */ self.quantize128("-0.9", "1e-1", "-0.9", .toNearestOrEven)
    /* dqqua034 */ self.quantize128("-0.9", "1e-2", "-0.90", .toNearestOrEven)
    /* dqqua035 */ self.quantize128("-0.9", "1e-3", "-0.900", .toNearestOrEven)
    /* dqqua036 */ self.quantize128("-0.5", "1e+2", "-0E+2", .toNearestOrEven, .isInexact)
    /* dqqua037 */ self.quantize128("-0.5", "1e+1", "-0E+1", .toNearestOrEven, .isInexact)
    /* dqqua038 */ self.quantize128("-0.5", "1e+0", "-0", .toNearestOrEven, .isInexact)
    /* dqqua039 */ self.quantize128("-0.5", "1e-1", "-0.5", .toNearestOrEven)
    /* dqqua040 */ self.quantize128("-0.5", "1e-2", "-0.50", .toNearestOrEven)
    /* dqqua041 */ self.quantize128("-0.5", "1e-3", "-0.500", .toNearestOrEven)
    /* dqqua042 */ self.quantize128("-0.9", "1e+2", "-0E+2", .toNearestOrEven, .isInexact)
    /* dqqua043 */ self.quantize128("-0.9", "1e+1", "-0E+1", .toNearestOrEven, .isInexact)
    /* dqqua044 */ self.quantize128("-0.9", "1e+0", "-1", .toNearestOrEven, .isInexact)
    /* dqqua045 */ self.quantize128("-0.9", "1e-1", "-0.9", .toNearestOrEven)
    /* dqqua046 */ self.quantize128("-0.9", "1e-2", "-0.90", .toNearestOrEven)
    /* dqqua047 */ self.quantize128("-0.9", "1e-3", "-0.900", .toNearestOrEven)
    /* dqqua060 */ self.quantize128("2.17", "0.001", "2.170", .toNearestOrEven)
    /* dqqua061 */ self.quantize128("2.17", "0.01", "2.17", .toNearestOrEven)
    /* dqqua062 */ self.quantize128("2.17", "0.1", "2.2", .toNearestOrEven, .isInexact)
    /* dqqua063 */ self.quantize128("2.17", "1e+0", "2", .toNearestOrEven, .isInexact)
    /* dqqua064 */ self.quantize128("2.17", "1e+1", "0E+1", .toNearestOrEven, .isInexact)
    /* dqqua065 */ self.quantize128("-Inf", "Inf", "-Infinity", .toNearestOrEven)
    /* dqqua066 */ self.quantize128("2", "Inf", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqqua067 */ self.quantize128("-0.1", "1", "-0", .toNearestOrEven, .isInexact)
    /* dqqua068 */ self.quantize128("-0", "1e+5", "-0E+5", .toNearestOrEven)
    /* dqqua069 */ self.quantize128("+123451234567899876543216789012345.6", "1e-2", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqqua070 */ self.quantize128("-987651234567899876543214335236450.6", "1e-2", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqqua071 */ self.quantize128("217", "1e-1", "217.0", .toNearestOrEven)
    /* dqqua072 */ self.quantize128("217", "1e+0", "217", .toNearestOrEven)
    /* dqqua073 */ self.quantize128("217", "1e+1", "2.2E+2", .toNearestOrEven, .isInexact)
    /* dqqua074 */ self.quantize128("217", "1e+2", "2E+2", .toNearestOrEven, .isInexact)
    /* dqqua089 */ self.quantize128("12", "1e+4", "0E+4", .toNearestOrEven, .isInexact)
    /* dqqua090 */ self.quantize128("12", "1e+3", "0E+3", .toNearestOrEven, .isInexact)
    /* dqqua091 */ self.quantize128("12", "1e+2", "0E+2", .toNearestOrEven, .isInexact)
    /* dqqua092 */ self.quantize128("12", "1e+1", "1E+1", .toNearestOrEven, .isInexact)
    /* dqqua093 */ self.quantize128("1.2345", "1e-2", "1.23", .toNearestOrEven, .isInexact)
    /* dqqua094 */ self.quantize128("1.2355", "1e-2", "1.24", .toNearestOrEven, .isInexact)
    /* dqqua095 */ self.quantize128("1.2345", "1e-6", "1.234500", .toNearestOrEven)
    /* dqqua096 */ self.quantize128("9.9999", "1e-2", "10.00", .toNearestOrEven, .isInexact)
    /* dqqua097 */ self.quantize128("0.0001", "1e-2", "0.00", .toNearestOrEven, .isInexact)
    /* dqqua098 */ self.quantize128("0.001", "1e-2", "0.00", .toNearestOrEven, .isInexact)
    /* dqqua099 */ self.quantize128("0.009", "1e-2", "0.01", .toNearestOrEven, .isInexact)
    /* dqqua100 */ self.quantize128("92", "1e+2", "1E+2", .toNearestOrEven, .isInexact)
    /* dqqua1001 */ self.quantize128("0.000", "0.001", "0.000", .toNearestOrAwayFromZero)
    /* dqqua1002 */ self.quantize128("0.001", "0.001", "0.001", .toNearestOrAwayFromZero)
    /* dqqua1003 */ self.quantize128("0.0012", "0.001", "0.001", .toNearestOrAwayFromZero, .isInexact)
    /* dqqua1004 */ self.quantize128("0.0018", "0.001", "0.002", .toNearestOrAwayFromZero, .isInexact)
    /* dqqua1005 */ self.quantize128("0.501", "0.001", "0.501", .toNearestOrAwayFromZero)
    /* dqqua1006 */ self.quantize128("0.5012", "0.001", "0.501", .toNearestOrAwayFromZero, .isInexact)
    /* dqqua1007 */ self.quantize128("0.5018", "0.001", "0.502", .toNearestOrAwayFromZero, .isInexact)
    /* dqqua1008 */ self.quantize128("0.999", "0.001", "0.999", .toNearestOrAwayFromZero)
    /* dqqua101 */ self.quantize128("-1", "1e0", "-1", .toNearestOrEven)
    /* dqqua102 */ self.quantize128("-1", "1e-1", "-1.0", .toNearestOrEven)
    /* dqqua103 */ self.quantize128("-1", "1e-2", "-1.00", .toNearestOrEven)
    /* dqqua104 */ self.quantize128("0", "1e0", "0", .toNearestOrEven)
    /* dqqua1040 */ self.quantize128("-2147483646", "0", "-2147483646", .toNearestOrAwayFromZero)
    /* dqqua1041 */ self.quantize128("-2147483647", "0", "-2147483647", .toNearestOrAwayFromZero)
    /* dqqua1042 */ self.quantize128("-2147483648", "0", "-2147483648", .toNearestOrAwayFromZero)
    /* dqqua1043 */ self.quantize128("-2147483649", "0", "-2147483649", .toNearestOrAwayFromZero)
    /* dqqua1044 */ self.quantize128("2147483646", "0", "2147483646", .toNearestOrAwayFromZero)
    /* dqqua1045 */ self.quantize128("2147483647", "0", "2147483647", .toNearestOrAwayFromZero)
    /* dqqua1046 */ self.quantize128("2147483648", "0", "2147483648", .toNearestOrAwayFromZero)
    /* dqqua1047 */ self.quantize128("2147483649", "0", "2147483649", .toNearestOrAwayFromZero)
    /* dqqua1048 */ self.quantize128("4294967294", "0", "4294967294", .toNearestOrAwayFromZero)
    /* dqqua1049 */ self.quantize128("4294967295", "0", "4294967295", .toNearestOrAwayFromZero)
    /* dqqua105 */ self.quantize128("0", "1e-1", "0.0", .toNearestOrEven)
    /* dqqua1050 */ self.quantize128("4294967296", "0", "4294967296", .toNearestOrAwayFromZero)
    /* dqqua1051 */ self.quantize128("4294967297", "0", "4294967297", .toNearestOrAwayFromZero)
    /* dqqua106 */ self.quantize128("0", "1e-2", "0.00", .toNearestOrEven)
    /* dqqua107 */ self.quantize128("0.00", "1e0", "0", .toNearestOrEven)
    /* dqqua108 */ self.quantize128("0", "1e+1", "0E+1", .toNearestOrEven)
    /* dqqua109 */ self.quantize128("0", "1e+2", "0E+2", .toNearestOrEven)
    /* dqqua110 */ self.quantize128("+1", "1e0", "1", .toNearestOrEven)
    /* dqqua1100 */ self.quantize128("1.2300", "1.00", "1.23", .toNearestOrEven)
    /* dqqua1101 */ self.quantize128("1.2301", "1.00", "1.23", .toNearestOrEven, .isInexact)
    /* dqqua1102 */ self.quantize128("1.2310", "1.00", "1.23", .toNearestOrEven, .isInexact)
    /* dqqua1103 */ self.quantize128("1.2350", "1.00", "1.24", .toNearestOrEven, .isInexact)
    /* dqqua1104 */ self.quantize128("1.2351", "1.00", "1.24", .toNearestOrEven, .isInexact)
    /* dqqua1105 */ self.quantize128("1.2450", "1.00", "1.24", .toNearestOrEven, .isInexact)
    /* dqqua1106 */ self.quantize128("1.2451", "1.00", "1.25", .toNearestOrEven, .isInexact)
    /* dqqua1107 */ self.quantize128("1.2360", "1.00", "1.24", .toNearestOrEven, .isInexact)
    /* dqqua1108 */ self.quantize128("1.2370", "1.00", "1.24", .toNearestOrEven, .isInexact)
    /* dqqua1109 */ self.quantize128("1.2399", "1.00", "1.24", .toNearestOrEven, .isInexact)
    /* dqqua111 */ self.quantize128("+1", "1e-1", "1.0", .toNearestOrEven)
    /* dqqua112 */ self.quantize128("+1", "1e-2", "1.00", .toNearestOrEven)
    /* dqqua120 */ self.quantize128("1.04", "1e-3", "1.040", .toNearestOrEven)
    /* dqqua1200 */ self.quantize128("1.2300", "1.00", "1.23", .toNearestOrAwayFromZero)
    /* dqqua1201 */ self.quantize128("1.2301", "1.00", "1.23", .toNearestOrAwayFromZero, .isInexact)
    /* dqqua1202 */ self.quantize128("1.2310", "1.00", "1.23", .toNearestOrAwayFromZero, .isInexact)
    /* dqqua1203 */ self.quantize128("1.2350", "1.00", "1.24", .toNearestOrAwayFromZero, .isInexact)
    /* dqqua1204 */ self.quantize128("1.2351", "1.00", "1.24", .toNearestOrAwayFromZero, .isInexact)
    /* dqqua1205 */ self.quantize128("1.2450", "1.00", "1.25", .toNearestOrAwayFromZero, .isInexact)
    /* dqqua1206 */ self.quantize128("1.2451", "1.00", "1.25", .toNearestOrAwayFromZero, .isInexact)
    /* dqqua1207 */ self.quantize128("1.2360", "1.00", "1.24", .toNearestOrAwayFromZero, .isInexact)
    /* dqqua1208 */ self.quantize128("1.2370", "1.00", "1.24", .toNearestOrAwayFromZero, .isInexact)
    /* dqqua1209 */ self.quantize128("1.2399", "1.00", "1.24", .toNearestOrAwayFromZero, .isInexact)
    /* dqqua121 */ self.quantize128("1.04", "1e-2", "1.04", .toNearestOrEven)
    /* dqqua122 */ self.quantize128("1.04", "1e-1", "1.0", .toNearestOrEven, .isInexact)
    /* dqqua123 */ self.quantize128("1.04", "1e0", "1", .toNearestOrEven, .isInexact)
    /* dqqua124 */ self.quantize128("1.05", "1e-3", "1.050", .toNearestOrEven)
    /* dqqua125 */ self.quantize128("1.05", "1e-2", "1.05", .toNearestOrEven)
    /* dqqua126 */ self.quantize128("1.05", "1e-1", "1.0", .toNearestOrEven, .isInexact)
    /* dqqua131 */ self.quantize128("1.05", "1e0", "1", .toNearestOrEven, .isInexact)
    /* dqqua132 */ self.quantize128("1.06", "1e-3", "1.060", .toNearestOrEven)
    /* dqqua133 */ self.quantize128("1.06", "1e-2", "1.06", .toNearestOrEven)
    /* dqqua134 */ self.quantize128("1.06", "1e-1", "1.1", .toNearestOrEven, .isInexact)
    /* dqqua135 */ self.quantize128("1.06", "1e0", "1", .toNearestOrEven, .isInexact)
    /* dqqua140 */ self.quantize128("-10", "1e-2", "-10.00", .toNearestOrEven)
    /* dqqua141 */ self.quantize128("+1", "1e-2", "1.00", .toNearestOrEven)
    /* dqqua142 */ self.quantize128("+10", "1e-2", "10.00", .toNearestOrEven)
    /* dqqua143 */ self.quantize128("1E+37", "1e-2", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqqua144 */ self.quantize128("1E-37", "1e-2", "0.00", .toNearestOrEven, .isInexact)
    /* dqqua145 */ self.quantize128("1E-3", "1e-2", "0.00", .toNearestOrEven, .isInexact)
    /* dqqua146 */ self.quantize128("1E-2", "1e-2", "0.01", .toNearestOrEven)
    /* dqqua147 */ self.quantize128("1E-1", "1e-2", "0.10", .toNearestOrEven)
    /* dqqua148 */ self.quantize128("0E-37", "1e-2", "0.00", .toNearestOrEven)
    /* dqqua150 */ self.quantize128("1.0600", "1e-5", "1.06000", .toNearestOrEven)
    /* dqqua1500 */ self.quantize128("1.2300", "1.00", "1.23", .towardZero)
    /* dqqua1501 */ self.quantize128("1.2301", "1.00", "1.23", .towardZero, .isInexact)
    /* dqqua1502 */ self.quantize128("1.2310", "1.00", "1.23", .towardZero, .isInexact)
    /* dqqua1503 */ self.quantize128("1.2350", "1.00", "1.23", .towardZero, .isInexact)
    /* dqqua1504 */ self.quantize128("1.2351", "1.00", "1.23", .towardZero, .isInexact)
    /* dqqua1505 */ self.quantize128("1.2450", "1.00", "1.24", .towardZero, .isInexact)
    /* dqqua1506 */ self.quantize128("1.2451", "1.00", "1.24", .towardZero, .isInexact)
    /* dqqua1507 */ self.quantize128("1.2360", "1.00", "1.23", .towardZero, .isInexact)
    /* dqqua1508 */ self.quantize128("1.2370", "1.00", "1.23", .towardZero, .isInexact)
    /* dqqua1509 */ self.quantize128("1.2399", "1.00", "1.23", .towardZero, .isInexact)
    /* dqqua151 */ self.quantize128("1.0600", "1e-4", "1.0600", .toNearestOrEven)
    /* dqqua1511 */ self.quantize128("-1.2399", "1.00", "-1.23", .towardZero, .isInexact)
    /* dqqua152 */ self.quantize128("1.0600", "1e-3", "1.060", .toNearestOrEven)
    /* dqqua153 */ self.quantize128("1.0600", "1e-2", "1.06", .toNearestOrEven)
    /* dqqua154 */ self.quantize128("1.0600", "1e-1", "1.1", .toNearestOrEven, .isInexact)
    /* dqqua155 */ self.quantize128("1.0600", "1e0", "1", .toNearestOrEven, .isInexact)
    /* dqqua157 */ self.quantize128("-0.5", "1e+0", "-1", .toNearestOrAwayFromZero, .isInexact)
    /* dqqua158 */ self.quantize128("1.05", "1e-1", "1.1", .toNearestOrAwayFromZero, .isInexact)
    /* dqqua159 */ self.quantize128("1.06", "1e0", "1", .toNearestOrAwayFromZero, .isInexact)
    /* dqqua1600 */ self.quantize128("1.2300", "1.00", "1.23", .up)
    /* dqqua1601 */ self.quantize128("1.2301", "1.00", "1.24", .up, .isInexact)
    /* dqqua1602 */ self.quantize128("1.2310", "1.00", "1.24", .up, .isInexact)
    /* dqqua1603 */ self.quantize128("1.2350", "1.00", "1.24", .up, .isInexact)
    /* dqqua1604 */ self.quantize128("1.2351", "1.00", "1.24", .up, .isInexact)
    /* dqqua1605 */ self.quantize128("1.2450", "1.00", "1.25", .up, .isInexact)
    /* dqqua1606 */ self.quantize128("1.2451", "1.00", "1.25", .up, .isInexact)
    /* dqqua1607 */ self.quantize128("1.2360", "1.00", "1.24", .up, .isInexact)
    /* dqqua1608 */ self.quantize128("1.2370", "1.00", "1.24", .up, .isInexact)
    /* dqqua1609 */ self.quantize128("1.2399", "1.00", "1.24", .up, .isInexact)
    /* dqqua161 */ self.quantize128("0", "-9e0", "0", .toNearestOrEven)
    /* dqqua1611 */ self.quantize128("-1.2399", "1.00", "-1.23", .up, .isInexact)
    /* dqqua162 */ self.quantize128("1", "-7e0", "1", .toNearestOrEven)
    /* dqqua163 */ self.quantize128("0.1", "-1e+2", "0E+2", .toNearestOrEven, .isInexact)
    /* dqqua165 */ self.quantize128("0.1", "0e+1", "0E+1", .toNearestOrEven, .isInexact)
    /* dqqua166 */ self.quantize128("0.1", "2e0", "0", .toNearestOrEven, .isInexact)
    /* dqqua167 */ self.quantize128("0.1", "3e-1", "0.1", .toNearestOrEven)
    /* dqqua168 */ self.quantize128("0.1", "44e-2", "0.10", .toNearestOrEven)
    /* dqqua169 */ self.quantize128("0.1", "555e-3", "0.100", .toNearestOrEven)
    /* dqqua170 */ self.quantize128("0.9", "6666e+2", "0E+2", .toNearestOrEven, .isInexact)
    /* dqqua1700 */ self.quantize128("1.2300", "1.00", "1.23", .down)
    /* dqqua1701 */ self.quantize128("1.2301", "1.00", "1.23", .down, .isInexact)
    /* dqqua1702 */ self.quantize128("1.2310", "1.00", "1.23", .down, .isInexact)
    /* dqqua1703 */ self.quantize128("1.2350", "1.00", "1.23", .down, .isInexact)
    /* dqqua1704 */ self.quantize128("1.2351", "1.00", "1.23", .down, .isInexact)
    /* dqqua1705 */ self.quantize128("1.2450", "1.00", "1.24", .down, .isInexact)
    /* dqqua1706 */ self.quantize128("1.2451", "1.00", "1.24", .down, .isInexact)
    /* dqqua1707 */ self.quantize128("1.2360", "1.00", "1.23", .down, .isInexact)
    /* dqqua1708 */ self.quantize128("1.2370", "1.00", "1.23", .down, .isInexact)
    /* dqqua1709 */ self.quantize128("1.2399", "1.00", "1.23", .down, .isInexact)
    /* dqqua171 */ self.quantize128("0.9", "-777e+1", "0E+1", .toNearestOrEven, .isInexact)
    /* dqqua1711 */ self.quantize128("-1.2399", "1.00", "-1.24", .down, .isInexact)
    /* dqqua172 */ self.quantize128("0.9", "-88e+0", "1", .toNearestOrEven, .isInexact)
    /* dqqua173 */ self.quantize128("0.9", "-9e-1", "0.9", .toNearestOrEven)
    /* dqqua174 */ self.quantize128("0.9", "0e-2", "0.90", .toNearestOrEven)
    /* dqqua175 */ self.quantize128("0.9", "1.1e-3", "0.9000", .toNearestOrEven)
    /* dqqua181 */ self.quantize128("-0", "1.1e0", "-0.0", .toNearestOrEven)
    /* dqqua182 */ self.quantize128("-1", "-1e0", "-1", .toNearestOrEven)
    /* dqqua183 */ self.quantize128("-0.1", "11e+2", "-0E+2", .toNearestOrEven, .isInexact)
    /* dqqua185 */ self.quantize128("-0.1", "111e+1", "-0E+1", .toNearestOrEven, .isInexact)
    /* dqqua186 */ self.quantize128("-0.1", "71e0", "-0", .toNearestOrEven, .isInexact)
    /* dqqua187 */ self.quantize128("-0.1", "-91e-1", "-0.1", .toNearestOrEven)
    /* dqqua188 */ self.quantize128("-0.1", "-.1e-2", "-0.100", .toNearestOrEven)
    /* dqqua189 */ self.quantize128("-0.1", "-1e-3", "-0.100", .toNearestOrEven)
    /* dqqua190 */ self.quantize128("-0.9", "0e+2", "-0E+2", .toNearestOrEven, .isInexact)
    /* dqqua191 */ self.quantize128("-0.9", "-0e+1", "-0E+1", .toNearestOrEven, .isInexact)
    /* dqqua192 */ self.quantize128("-0.9", "-10e+0", "-1", .toNearestOrEven, .isInexact)
    /* dqqua193 */ self.quantize128("-0.9", "100e-1", "-0.9", .toNearestOrEven)
    /* dqqua194 */ self.quantize128("-0.9", "999e-2", "-0.90", .toNearestOrEven)
    /* dqqua201 */ self.quantize128("-1", "1e+0", "-1", .toNearestOrEven)
    /* dqqua202 */ self.quantize128("-1", "1e+1", "-0E+1", .toNearestOrEven, .isInexact)
    /* dqqua203 */ self.quantize128("-1", "1e+2", "-0E+2", .toNearestOrEven, .isInexact)
    /* dqqua204 */ self.quantize128("0", "1e+0", "0", .toNearestOrEven)
    /* dqqua205 */ self.quantize128("0", "1e+1", "0E+1", .toNearestOrEven)
    /* dqqua206 */ self.quantize128("0", "1e+2", "0E+2", .toNearestOrEven)
    /* dqqua207 */ self.quantize128("+1", "1e+0", "1", .toNearestOrEven)
    /* dqqua208 */ self.quantize128("+1", "1e+1", "0E+1", .toNearestOrEven, .isInexact)
    /* dqqua209 */ self.quantize128("+1", "1e+2", "0E+2", .toNearestOrEven, .isInexact)
    /* dqqua220 */ self.quantize128("1.04", "1e+3", "0E+3", .toNearestOrEven, .isInexact)
    /* dqqua221 */ self.quantize128("1.04", "1e+2", "0E+2", .toNearestOrEven, .isInexact)
    /* dqqua222 */ self.quantize128("1.04", "1e+1", "0E+1", .toNearestOrEven, .isInexact)
    /* dqqua223 */ self.quantize128("1.04", "1e+0", "1", .toNearestOrEven, .isInexact)
    /* dqqua224 */ self.quantize128("1.05", "1e+3", "0E+3", .toNearestOrEven, .isInexact)
    /* dqqua225 */ self.quantize128("1.05", "1e+2", "0E+2", .toNearestOrEven, .isInexact)
    /* dqqua226 */ self.quantize128("1.05", "1e+1", "0E+1", .toNearestOrEven, .isInexact)
    /* dqqua227 */ self.quantize128("1.05", "1e+0", "1", .toNearestOrEven, .isInexact)
    /* dqqua228 */ self.quantize128("1.05", "1e+3", "0E+3", .toNearestOrEven, .isInexact)
    /* dqqua229 */ self.quantize128("1.05", "1e+2", "0E+2", .toNearestOrEven, .isInexact)
    /* dqqua230 */ self.quantize128("1.05", "1e+1", "0E+1", .toNearestOrEven, .isInexact)
    /* dqqua231 */ self.quantize128("1.05", "1e+0", "1", .toNearestOrEven, .isInexact)
    /* dqqua232 */ self.quantize128("1.06", "1e+3", "0E+3", .toNearestOrEven, .isInexact)
    /* dqqua233 */ self.quantize128("1.06", "1e+2", "0E+2", .toNearestOrEven, .isInexact)
    /* dqqua234 */ self.quantize128("1.06", "1e+1", "0E+1", .toNearestOrEven, .isInexact)
    /* dqqua235 */ self.quantize128("1.06", "1e+0", "1", .toNearestOrEven, .isInexact)
    /* dqqua240 */ self.quantize128("-10", "1e+1", "-1E+1", .toNearestOrEven)
    /* dqqua241 */ self.quantize128("+1", "1e+1", "0E+1", .toNearestOrEven, .isInexact)
    /* dqqua242 */ self.quantize128("+10", "1e+1", "1E+1", .toNearestOrEven)
    /* dqqua243 */ self.quantize128("1E+1", "1e+1", "1E+1", .toNearestOrEven)
    /* dqqua244 */ self.quantize128("1E+2", "1e+1", "1.0E+2", .toNearestOrEven)
    /* dqqua245 */ self.quantize128("1E+3", "1e+1", "1.00E+3", .toNearestOrEven)
    /* dqqua246 */ self.quantize128("1E+4", "1e+1", "1.000E+4", .toNearestOrEven)
    /* dqqua247 */ self.quantize128("1E+5", "1e+1", "1.0000E+5", .toNearestOrEven)
    /* dqqua248 */ self.quantize128("1E+6", "1e+1", "1.00000E+6", .toNearestOrEven)
    /* dqqua249 */ self.quantize128("1E+7", "1e+1", "1.000000E+7", .toNearestOrEven)
    /* dqqua250 */ self.quantize128("1E+8", "1e+1", "1.0000000E+8", .toNearestOrEven)
    /* dqqua251 */ self.quantize128("1E+9", "1e+1", "1.00000000E+9", .toNearestOrEven)
    /* dqqua252 */ self.quantize128("1E+37", "1e+1", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqqua253 */ self.quantize128("1E-37", "1e+1", "0E+1", .toNearestOrEven, .isInexact)
    /* dqqua254 */ self.quantize128("1E-2", "1e+1", "0E+1", .toNearestOrEven, .isInexact)
    /* dqqua255 */ self.quantize128("0E-37", "1e+1", "0E+1", .toNearestOrEven)
    /* dqqua256 */ self.quantize128("-0E-37", "1e+1", "-0E+1", .toNearestOrEven)
    /* dqqua257 */ self.quantize128("-0E-1", "1e+1", "-0E+1", .toNearestOrEven)
    /* dqqua258 */ self.quantize128("-0", "1e+1", "-0E+1", .toNearestOrEven)
    /* dqqua259 */ self.quantize128("-0E+1", "1e+1", "-0E+1", .toNearestOrEven)
    /* dqqua260 */ self.quantize128("-10", "1e+2", "-0E+2", .toNearestOrEven, .isInexact)
    /* dqqua261 */ self.quantize128("+1", "1e+2", "0E+2", .toNearestOrEven, .isInexact)
    /* dqqua262 */ self.quantize128("+10", "1e+2", "0E+2", .toNearestOrEven, .isInexact)
    /* dqqua263 */ self.quantize128("1E+1", "1e+2", "0E+2", .toNearestOrEven, .isInexact)
    /* dqqua264 */ self.quantize128("1E+2", "1e+2", "1E+2", .toNearestOrEven)
    /* dqqua265 */ self.quantize128("1E+3", "1e+2", "1.0E+3", .toNearestOrEven)
    /* dqqua266 */ self.quantize128("1E+4", "1e+2", "1.00E+4", .toNearestOrEven)
    /* dqqua267 */ self.quantize128("1E+5", "1e+2", "1.000E+5", .toNearestOrEven)
    /* dqqua268 */ self.quantize128("1E+6", "1e+2", "1.0000E+6", .toNearestOrEven)
    /* dqqua269 */ self.quantize128("1E+7", "1e+2", "1.00000E+7", .toNearestOrEven)
    /* dqqua270 */ self.quantize128("1E+8", "1e+2", "1.000000E+8", .toNearestOrEven)
    /* dqqua271 */ self.quantize128("1E+9", "1e+2", "1.0000000E+9", .toNearestOrEven)
    /* dqqua272 */ self.quantize128("1E+10", "1e+2", "1.00000000E+10", .toNearestOrEven)
    /* dqqua273 */ self.quantize128("1E-10", "1e+2", "0E+2", .toNearestOrEven, .isInexact)
    /* dqqua274 */ self.quantize128("1E-2", "1e+2", "0E+2", .toNearestOrEven, .isInexact)
    /* dqqua275 */ self.quantize128("0E-10", "1e+2", "0E+2", .toNearestOrEven)
    /* dqqua280 */ self.quantize128("-10", "1e+3", "-0E+3", .toNearestOrEven, .isInexact)
    /* dqqua281 */ self.quantize128("+1", "1e+3", "0E+3", .toNearestOrEven, .isInexact)
    /* dqqua282 */ self.quantize128("+10", "1e+3", "0E+3", .toNearestOrEven, .isInexact)
    /* dqqua283 */ self.quantize128("1E+1", "1e+3", "0E+3", .toNearestOrEven, .isInexact)
    /* dqqua284 */ self.quantize128("1E+2", "1e+3", "0E+3", .toNearestOrEven, .isInexact)
    /* dqqua285 */ self.quantize128("1E+3", "1e+3", "1E+3", .toNearestOrEven)
    /* dqqua286 */ self.quantize128("1E+4", "1e+3", "1.0E+4", .toNearestOrEven)
    /* dqqua287 */ self.quantize128("1E+5", "1e+3", "1.00E+5", .toNearestOrEven)
    /* dqqua288 */ self.quantize128("1E+6", "1e+3", "1.000E+6", .toNearestOrEven)
    /* dqqua289 */ self.quantize128("1E+7", "1e+3", "1.0000E+7", .toNearestOrEven)
    /* dqqua290 */ self.quantize128("1E+8", "1e+3", "1.00000E+8", .toNearestOrEven)
    /* dqqua291 */ self.quantize128("1E+9", "1e+3", "1.000000E+9", .toNearestOrEven)
    /* dqqua292 */ self.quantize128("1E+10", "1e+3", "1.0000000E+10", .toNearestOrEven)
    /* dqqua293 */ self.quantize128("1E-10", "1e+3", "0E+3", .toNearestOrEven, .isInexact)
    /* dqqua294 */ self.quantize128("1E-2", "1e+3", "0E+3", .toNearestOrEven, .isInexact)
    /* dqqua295 */ self.quantize128("0E-10", "1e+3", "0E+3", .toNearestOrEven)
    /* dqqua300 */ self.quantize128("0.0078", "1e-5", "0.00780", .toNearestOrEven)
    /* dqqua301 */ self.quantize128("0.0078", "1e-4", "0.0078", .toNearestOrEven)
    /* dqqua302 */ self.quantize128("0.0078", "1e-3", "0.008", .toNearestOrEven, .isInexact)
    /* dqqua303 */ self.quantize128("0.0078", "1e-2", "0.01", .toNearestOrEven, .isInexact)
    /* dqqua304 */ self.quantize128("0.0078", "1e-1", "0.0", .toNearestOrEven, .isInexact)
    /* dqqua305 */ self.quantize128("0.0078", "1e0", "0", .toNearestOrEven, .isInexact)
    /* dqqua306 */ self.quantize128("0.0078", "1e+1", "0E+1", .toNearestOrEven, .isInexact)
    /* dqqua307 */ self.quantize128("0.0078", "1e+2", "0E+2", .toNearestOrEven, .isInexact)
    /* dqqua310 */ self.quantize128("-0.0078", "1e-5", "-0.00780", .toNearestOrEven)
    /* dqqua311 */ self.quantize128("-0.0078", "1e-4", "-0.0078", .toNearestOrEven)
    /* dqqua312 */ self.quantize128("-0.0078", "1e-3", "-0.008", .toNearestOrEven, .isInexact)
    /* dqqua313 */ self.quantize128("-0.0078", "1e-2", "-0.01", .toNearestOrEven, .isInexact)
    /* dqqua314 */ self.quantize128("-0.0078", "1e-1", "-0.0", .toNearestOrEven, .isInexact)
    /* dqqua315 */ self.quantize128("-0.0078", "1e0", "-0", .toNearestOrEven, .isInexact)
    /* dqqua316 */ self.quantize128("-0.0078", "1e+1", "-0E+1", .toNearestOrEven, .isInexact)
    /* dqqua317 */ self.quantize128("-0.0078", "1e+2", "-0E+2", .toNearestOrEven, .isInexact)
    /* dqqua320 */ self.quantize128("0.078", "1e-5", "0.07800", .toNearestOrEven)
    /* dqqua321 */ self.quantize128("0.078", "1e-4", "0.0780", .toNearestOrEven)
    /* dqqua322 */ self.quantize128("0.078", "1e-3", "0.078", .toNearestOrEven)
    /* dqqua323 */ self.quantize128("0.078", "1e-2", "0.08", .toNearestOrEven, .isInexact)
    /* dqqua324 */ self.quantize128("0.078", "1e-1", "0.1", .toNearestOrEven, .isInexact)
    /* dqqua325 */ self.quantize128("0.078", "1e0", "0", .toNearestOrEven, .isInexact)
    /* dqqua326 */ self.quantize128("0.078", "1e+1", "0E+1", .toNearestOrEven, .isInexact)
    /* dqqua327 */ self.quantize128("0.078", "1e+2", "0E+2", .toNearestOrEven, .isInexact)
    /* dqqua330 */ self.quantize128("-0.078", "1e-5", "-0.07800", .toNearestOrEven)
    /* dqqua331 */ self.quantize128("-0.078", "1e-4", "-0.0780", .toNearestOrEven)
    /* dqqua332 */ self.quantize128("-0.078", "1e-3", "-0.078", .toNearestOrEven)
    /* dqqua333 */ self.quantize128("-0.078", "1e-2", "-0.08", .toNearestOrEven, .isInexact)
    /* dqqua334 */ self.quantize128("-0.078", "1e-1", "-0.1", .toNearestOrEven, .isInexact)
    /* dqqua335 */ self.quantize128("-0.078", "1e0", "-0", .toNearestOrEven, .isInexact)
    /* dqqua336 */ self.quantize128("-0.078", "1e+1", "-0E+1", .toNearestOrEven, .isInexact)
    /* dqqua337 */ self.quantize128("-0.078", "1e+2", "-0E+2", .toNearestOrEven, .isInexact)
    /* dqqua340 */ self.quantize128("0.78", "1e-5", "0.78000", .toNearestOrEven)
    /* dqqua341 */ self.quantize128("0.78", "1e-4", "0.7800", .toNearestOrEven)
    /* dqqua342 */ self.quantize128("0.78", "1e-3", "0.780", .toNearestOrEven)
    /* dqqua343 */ self.quantize128("0.78", "1e-2", "0.78", .toNearestOrEven)
    /* dqqua344 */ self.quantize128("0.78", "1e-1", "0.8", .toNearestOrEven, .isInexact)
    /* dqqua345 */ self.quantize128("0.78", "1e0", "1", .toNearestOrEven, .isInexact)
    /* dqqua346 */ self.quantize128("0.78", "1e+1", "0E+1", .toNearestOrEven, .isInexact)
    /* dqqua347 */ self.quantize128("0.78", "1e+2", "0E+2", .toNearestOrEven, .isInexact)
    /* dqqua350 */ self.quantize128("-0.78", "1e-5", "-0.78000", .toNearestOrEven)
    /* dqqua351 */ self.quantize128("-0.78", "1e-4", "-0.7800", .toNearestOrEven)
    /* dqqua352 */ self.quantize128("-0.78", "1e-3", "-0.780", .toNearestOrEven)
    /* dqqua353 */ self.quantize128("-0.78", "1e-2", "-0.78", .toNearestOrEven)
    /* dqqua354 */ self.quantize128("-0.78", "1e-1", "-0.8", .toNearestOrEven, .isInexact)
    /* dqqua355 */ self.quantize128("-0.78", "1e0", "-1", .toNearestOrEven, .isInexact)
    /* dqqua356 */ self.quantize128("-0.78", "1e+1", "-0E+1", .toNearestOrEven, .isInexact)
    /* dqqua357 */ self.quantize128("-0.78", "1e+2", "-0E+2", .toNearestOrEven, .isInexact)
    /* dqqua360 */ self.quantize128("7.8", "1e-5", "7.80000", .toNearestOrEven)
    /* dqqua361 */ self.quantize128("7.8", "1e-4", "7.8000", .toNearestOrEven)
    /* dqqua362 */ self.quantize128("7.8", "1e-3", "7.800", .toNearestOrEven)
    /* dqqua363 */ self.quantize128("7.8", "1e-2", "7.80", .toNearestOrEven)
    /* dqqua364 */ self.quantize128("7.8", "1e-1", "7.8", .toNearestOrEven)
    /* dqqua365 */ self.quantize128("7.8", "1e0", "8", .toNearestOrEven, .isInexact)
    /* dqqua366 */ self.quantize128("7.8", "1e+1", "1E+1", .toNearestOrEven, .isInexact)
    /* dqqua367 */ self.quantize128("7.8", "1e+2", "0E+2", .toNearestOrEven, .isInexact)
    /* dqqua368 */ self.quantize128("7.8", "1e+3", "0E+3", .toNearestOrEven, .isInexact)
    /* dqqua370 */ self.quantize128("-7.8", "1e-5", "-7.80000", .toNearestOrEven)
    /* dqqua371 */ self.quantize128("-7.8", "1e-4", "-7.8000", .toNearestOrEven)
    /* dqqua372 */ self.quantize128("-7.8", "1e-3", "-7.800", .toNearestOrEven)
    /* dqqua373 */ self.quantize128("-7.8", "1e-2", "-7.80", .toNearestOrEven)
    /* dqqua374 */ self.quantize128("-7.8", "1e-1", "-7.8", .toNearestOrEven)
    /* dqqua375 */ self.quantize128("-7.8", "1e0", "-8", .toNearestOrEven, .isInexact)
    /* dqqua376 */ self.quantize128("-7.8", "1e+1", "-1E+1", .toNearestOrEven, .isInexact)
    /* dqqua377 */ self.quantize128("-7.8", "1e+2", "-0E+2", .toNearestOrEven, .isInexact)
    /* dqqua378 */ self.quantize128("-7.8", "1e+3", "-0E+3", .toNearestOrEven, .isInexact)
    /* dqqua380 */ self.quantize128("1122334455667788991234567352364.506", "1e-2", "1122334455667788991234567352364.51", .toNearestOrEven, .isInexact)
    /* dqqua381 */ self.quantize128("11223344556677889912345673523645.06", "1e-2", "11223344556677889912345673523645.06", .toNearestOrEven)
    /* dqqua382 */ self.quantize128("112233445566778899123456735236450.6", "1e-2", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqqua383 */ self.quantize128("1122334455667788991234567352364506", "1e-2", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqqua384 */ self.quantize128("-1122334455667788991234567352364.506", "1e-2", "-1122334455667788991234567352364.51", .toNearestOrEven, .isInexact)
    /* dqqua385 */ self.quantize128("-11223344556677889912345673523645.06", "1e-2", "-11223344556677889912345673523645.06", .toNearestOrEven)
    /* dqqua386 */ self.quantize128("-112233445566778899123456735236450.6", "1e-2", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqqua387 */ self.quantize128("-1122334455667788991234567352364506", "1e-2", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqqua389 */ self.quantize128("112233445566778899123456735236450.6", "1e-2", "NaN", .towardZero, .isInvalidOperation)
    /* dqqua391 */ self.quantize128("11223344556677889912345678912.34567", "1e-3", "11223344556677889912345678912.346", .toNearestOrAwayFromZero, .isInexact)
    /* dqqua392 */ self.quantize128("112233445566778899123456789123.4567", "1e-3", "112233445566778899123456789123.457", .toNearestOrAwayFromZero, .isInexact)
    /* dqqua393 */ self.quantize128("1122334455667788991234567891234567.", "1e-3", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* dqqua400 */ self.quantize128("9.999", "1e-5", "9.99900", .toNearestOrAwayFromZero)
    /* dqqua401 */ self.quantize128("9.999", "1e-4", "9.9990", .toNearestOrAwayFromZero)
    /* dqqua402 */ self.quantize128("9.999", "1e-3", "9.999", .toNearestOrAwayFromZero)
    /* dqqua403 */ self.quantize128("9.999", "1e-2", "10.00", .toNearestOrAwayFromZero, .isInexact)
    /* dqqua404 */ self.quantize128("9.999", "1e-1", "10.0", .toNearestOrAwayFromZero, .isInexact)
    /* dqqua405 */ self.quantize128("9.999", "1e0", "10", .toNearestOrAwayFromZero, .isInexact)
    /* dqqua406 */ self.quantize128("9.999", "1e1", "1E+1", .toNearestOrAwayFromZero, .isInexact)
    /* dqqua407 */ self.quantize128("9.999", "1e2", "0E+2", .toNearestOrAwayFromZero, .isInexact)
    /* dqqua410 */ self.quantize128("0.999", "1e-5", "0.99900", .toNearestOrAwayFromZero)
    /* dqqua411 */ self.quantize128("0.999", "1e-4", "0.9990", .toNearestOrAwayFromZero)
    /* dqqua412 */ self.quantize128("0.999", "1e-3", "0.999", .toNearestOrAwayFromZero)
    /* dqqua413 */ self.quantize128("0.999", "1e-2", "1.00", .toNearestOrAwayFromZero, .isInexact)
    /* dqqua414 */ self.quantize128("0.999", "1e-1", "1.0", .toNearestOrAwayFromZero, .isInexact)
    /* dqqua415 */ self.quantize128("0.999", "1e0", "1", .toNearestOrAwayFromZero, .isInexact)
    /* dqqua416 */ self.quantize128("0.999", "1e1", "0E+1", .toNearestOrAwayFromZero, .isInexact)
    /* dqqua420 */ self.quantize128("0.0999", "1e-5", "0.09990", .toNearestOrAwayFromZero)
    /* dqqua421 */ self.quantize128("0.0999", "1e-4", "0.0999", .toNearestOrAwayFromZero)
    /* dqqua422 */ self.quantize128("0.0999", "1e-3", "0.100", .toNearestOrAwayFromZero, .isInexact)
    /* dqqua423 */ self.quantize128("0.0999", "1e-2", "0.10", .toNearestOrAwayFromZero, .isInexact)
    /* dqqua424 */ self.quantize128("0.0999", "1e-1", "0.1", .toNearestOrAwayFromZero, .isInexact)
    /* dqqua425 */ self.quantize128("0.0999", "1e0", "0", .toNearestOrAwayFromZero, .isInexact)
    /* dqqua426 */ self.quantize128("0.0999", "1e1", "0E+1", .toNearestOrAwayFromZero, .isInexact)
    /* dqqua430 */ self.quantize128("0.00999", "1e-5", "0.00999", .toNearestOrAwayFromZero)
    /* dqqua431 */ self.quantize128("0.00999", "1e-4", "0.0100", .toNearestOrAwayFromZero, .isInexact)
    /* dqqua432 */ self.quantize128("0.00999", "1e-3", "0.010", .toNearestOrAwayFromZero, .isInexact)
    /* dqqua433 */ self.quantize128("0.00999", "1e-2", "0.01", .toNearestOrAwayFromZero, .isInexact)
    /* dqqua434 */ self.quantize128("0.00999", "1e-1", "0.0", .toNearestOrAwayFromZero, .isInexact)
    /* dqqua435 */ self.quantize128("0.00999", "1e0", "0", .toNearestOrAwayFromZero, .isInexact)
    /* dqqua436 */ self.quantize128("0.00999", "1e1", "0E+1", .toNearestOrAwayFromZero, .isInexact)
    /* dqqua440 */ self.quantize128("0.000999", "1e-5", "0.00100", .toNearestOrAwayFromZero, .isInexact)
    /* dqqua441 */ self.quantize128("0.000999", "1e-4", "0.0010", .toNearestOrAwayFromZero, .isInexact)
    /* dqqua442 */ self.quantize128("0.000999", "1e-3", "0.001", .toNearestOrAwayFromZero, .isInexact)
    /* dqqua443 */ self.quantize128("0.000999", "1e-2", "0.00", .toNearestOrAwayFromZero, .isInexact)
    /* dqqua444 */ self.quantize128("0.000999", "1e-1", "0.0", .toNearestOrAwayFromZero, .isInexact)
    /* dqqua445 */ self.quantize128("0.000999", "1e0", "0", .toNearestOrAwayFromZero, .isInexact)
    /* dqqua446 */ self.quantize128("0.000999", "1e1", "0E+1", .toNearestOrAwayFromZero, .isInexact)
    /* dqqua481 */ self.quantize128("12345678000", "1e+3", "1.2345678E+10", .toNearestOrAwayFromZero)
    /* dqqua482 */ self.quantize128("1234567800", "1e+1", "1.23456780E+9", .toNearestOrAwayFromZero)
    /* dqqua483 */ self.quantize128("1234567890", "1e+1", "1.23456789E+9", .toNearestOrAwayFromZero)
    /* dqqua484 */ self.quantize128("1234567891", "1e+1", "1.23456789E+9", .toNearestOrAwayFromZero, .isInexact)
    /* dqqua485 */ self.quantize128("12345678901", "1e+2", "1.23456789E+10", .toNearestOrAwayFromZero, .isInexact)
    /* dqqua486 */ self.quantize128("1234567896", "1e+1", "1.23456790E+9", .toNearestOrAwayFromZero, .isInexact)
    /* dqqua487 */ self.quantize128("1234.987643", "1e-4", "1234.9876", .toNearestOrAwayFromZero, .isInexact)
    /* dqqua488 */ self.quantize128("1234.987647", "1e-4", "1234.9876", .toNearestOrAwayFromZero, .isInexact)
    /* dqqua491 */ self.quantize128("12345678000", "1e+3", "1.2345678E+10", .toNearestOrAwayFromZero)
    /* dqqua492 */ self.quantize128("1234567800", "1e+1", "1.23456780E+9", .toNearestOrAwayFromZero)
    /* dqqua493 */ self.quantize128("1234567890", "1e+1", "1.23456789E+9", .toNearestOrAwayFromZero)
    /* dqqua494 */ self.quantize128("1234567891", "1e+1", "1.23456789E+9", .toNearestOrAwayFromZero, .isInexact)
    /* dqqua495 */ self.quantize128("12345678901", "1e+2", "1.23456789E+10", .toNearestOrAwayFromZero, .isInexact)
    /* dqqua496 */ self.quantize128("1234567896", "1e+1", "1.23456790E+9", .toNearestOrAwayFromZero, .isInexact)
    /* dqqua497 */ self.quantize128("1234.987643", "1e-4", "1234.9876", .toNearestOrAwayFromZero, .isInexact)
    /* dqqua498 */ self.quantize128("1234.987647", "1e-4", "1234.9876", .toNearestOrAwayFromZero, .isInexact)
    /* dqqua500 */ self.quantize128("0", "1e1", "0E+1", .toNearestOrAwayFromZero)
    /* dqqua501 */ self.quantize128("0", "1e0", "0", .toNearestOrAwayFromZero)
    /* dqqua502 */ self.quantize128("0", "1e-1", "0.0", .toNearestOrAwayFromZero)
    /* dqqua503 */ self.quantize128("0.0", "1e-1", "0.0", .toNearestOrAwayFromZero)
    /* dqqua504 */ self.quantize128("0.0", "1e0", "0", .toNearestOrAwayFromZero)
    /* dqqua505 */ self.quantize128("0.0", "1e+1", "0E+1", .toNearestOrAwayFromZero)
    /* dqqua506 */ self.quantize128("0E+1", "1e-1", "0.0", .toNearestOrAwayFromZero)
    /* dqqua507 */ self.quantize128("0E+1", "1e0", "0", .toNearestOrAwayFromZero)
    /* dqqua508 */ self.quantize128("0E+1", "1e+1", "0E+1", .toNearestOrAwayFromZero)
    /* dqqua509 */ self.quantize128("-0", "1e1", "-0E+1", .toNearestOrAwayFromZero)
    /* dqqua510 */ self.quantize128("-0", "1e0", "-0", .toNearestOrAwayFromZero)
    /* dqqua511 */ self.quantize128("-0", "1e-1", "-0.0", .toNearestOrAwayFromZero)
    /* dqqua512 */ self.quantize128("-0.0", "1e-1", "-0.0", .toNearestOrAwayFromZero)
    /* dqqua513 */ self.quantize128("-0.0", "1e0", "-0", .toNearestOrAwayFromZero)
    /* dqqua514 */ self.quantize128("-0.0", "1e+1", "-0E+1", .toNearestOrAwayFromZero)
    /* dqqua515 */ self.quantize128("-0E+1", "1e-1", "-0.0", .toNearestOrAwayFromZero)
    /* dqqua516 */ self.quantize128("-0E+1", "1e0", "-0", .toNearestOrAwayFromZero)
    /* dqqua517 */ self.quantize128("-0E+1", "1e+1", "-0E+1", .toNearestOrAwayFromZero)
    /* dqqua518 */ self.quantize128("0", "0E-3", "0.000", .toNearestOrAwayFromZero)
    /* dqqua519 */ self.quantize128("0", "0E-33", "0E-33", .toNearestOrAwayFromZero)
    /* dqqua520 */ self.quantize128("0.00000000000000000000000000000000", "0E-33", "0E-33", .toNearestOrAwayFromZero)
    /* dqqua521 */ self.quantize128("0.000000000000000000000000000000000", "0E-33", "0E-33", .toNearestOrAwayFromZero)
    /* dqqua523 */ self.quantize128("1", "0E-33", "1.000000000000000000000000000000000", .toNearestOrAwayFromZero)
    /* dqqua524 */ self.quantize128("12", "0E-32", "12.00000000000000000000000000000000", .toNearestOrAwayFromZero)
    /* dqqua525 */ self.quantize128("123", "0E-31", "123.0000000000000000000000000000000", .toNearestOrAwayFromZero)
    /* dqqua526 */ self.quantize128("123", "0E-32", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* dqqua527 */ self.quantize128("123.4", "0E-31", "123.4000000000000000000000000000000", .toNearestOrAwayFromZero)
    /* dqqua528 */ self.quantize128("123.4", "0E-32", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* dqqua530 */ self.quantize128("1.234", "1e359", "0E+359", .toNearestOrAwayFromZero, .isInexact)
    /* dqqua531 */ self.quantize128("123.456", "1e359", "0E+359", .toNearestOrAwayFromZero, .isInexact)
    /* dqqua532 */ self.quantize128("1.234", "1e359", "0E+359", .toNearestOrAwayFromZero, .isInexact)
    /* dqqua533 */ self.quantize128("123.456", "1e359", "0E+359", .toNearestOrAwayFromZero, .isInexact)
    /* dqqua536 */ self.quantize128("1.234", "1e-299", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* dqqua537 */ self.quantize128("123.456", "1e-299", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* dqqua538 */ self.quantize128("1.234", "1e-299", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* dqqua539 */ self.quantize128("123.456", "1e-299", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* dqqua542 */ self.quantize128("1.234E+299", "1e299", "1E+299", .toNearestOrAwayFromZero, .isInexact)
    /* dqqua543 */ self.quantize128("1.234E+298", "1e299", "0E+299", .toNearestOrAwayFromZero, .isInexact)
    /* dqqua544 */ self.quantize128("1.234", "1e299", "0E+299", .toNearestOrAwayFromZero, .isInexact)
    /* dqqua547 */ self.quantize128("0", "1e-299", "0E-299", .toNearestOrAwayFromZero)
    /* dqqua548 */ self.quantize128("1.234", "1e-299", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* dqqua549 */ self.quantize128("1.234", "1e-300", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* dqqua580 */ self.quantize128("Inf", "-Inf", "Infinity", .toNearestOrAwayFromZero)
    /* dqqua581 */ self.quantize128("Inf", "1e-299", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* dqqua582 */ self.quantize128("Inf", "1e-1", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* dqqua583 */ self.quantize128("Inf", "1e0", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* dqqua584 */ self.quantize128("Inf", "1e1", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* dqqua585 */ self.quantize128("Inf", "1e299", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* dqqua586 */ self.quantize128("Inf", "Inf", "Infinity", .toNearestOrAwayFromZero)
    /* dqqua587 */ self.quantize128("-1000", "Inf", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* dqqua588 */ self.quantize128("-Inf", "Inf", "-Infinity", .toNearestOrAwayFromZero)
    /* dqqua589 */ self.quantize128("-1", "Inf", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* dqqua590 */ self.quantize128("0", "Inf", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* dqqua591 */ self.quantize128("1", "Inf", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* dqqua592 */ self.quantize128("1000", "Inf", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* dqqua593 */ self.quantize128("Inf", "Inf", "Infinity", .toNearestOrAwayFromZero)
    /* dqqua594 */ self.quantize128("Inf", "1e-0", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* dqqua595 */ self.quantize128("-0", "Inf", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* dqqua600 */ self.quantize128("-Inf", "-Inf", "-Infinity", .toNearestOrAwayFromZero)
    /* dqqua601 */ self.quantize128("-Inf", "1e-299", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* dqqua602 */ self.quantize128("-Inf", "1e-1", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* dqqua603 */ self.quantize128("-Inf", "1e0", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* dqqua604 */ self.quantize128("-Inf", "1e1", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* dqqua605 */ self.quantize128("-Inf", "1e299", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* dqqua606 */ self.quantize128("-Inf", "Inf", "-Infinity", .toNearestOrAwayFromZero)
    /* dqqua607 */ self.quantize128("-1000", "Inf", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* dqqua608 */ self.quantize128("-Inf", "-Inf", "-Infinity", .toNearestOrAwayFromZero)
    /* dqqua609 */ self.quantize128("-1", "-Inf", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* dqqua610 */ self.quantize128("0", "-Inf", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* dqqua611 */ self.quantize128("1", "-Inf", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* dqqua612 */ self.quantize128("1000", "-Inf", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* dqqua613 */ self.quantize128("Inf", "-Inf", "Infinity", .toNearestOrAwayFromZero)
    /* dqqua614 */ self.quantize128("-Inf", "1e-0", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* dqqua615 */ self.quantize128("-0", "-Inf", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* dqqua621 */ self.quantize128("NaN", "-Inf", "NaN", .toNearestOrAwayFromZero)
    /* dqqua622 */ self.quantize128("NaN", "1e-299", "NaN", .toNearestOrAwayFromZero)
    /* dqqua623 */ self.quantize128("NaN", "1e-1", "NaN", .toNearestOrAwayFromZero)
    /* dqqua624 */ self.quantize128("NaN", "1e0", "NaN", .toNearestOrAwayFromZero)
    /* dqqua625 */ self.quantize128("NaN", "1e1", "NaN", .toNearestOrAwayFromZero)
    /* dqqua626 */ self.quantize128("NaN", "1e299", "NaN", .toNearestOrAwayFromZero)
    /* dqqua627 */ self.quantize128("NaN", "Inf", "NaN", .toNearestOrAwayFromZero)
    /* dqqua628 */ self.quantize128("NaN", "NaN", "NaN", .toNearestOrAwayFromZero)
    /* dqqua629 */ self.quantize128("-Inf", "NaN", "NaN", .toNearestOrAwayFromZero)
    /* dqqua630 */ self.quantize128("-1000", "NaN", "NaN", .toNearestOrAwayFromZero)
    /* dqqua631 */ self.quantize128("-1", "NaN", "NaN", .toNearestOrAwayFromZero)
    /* dqqua632 */ self.quantize128("0", "NaN", "NaN", .toNearestOrAwayFromZero)
    /* dqqua633 */ self.quantize128("1", "NaN", "NaN", .toNearestOrAwayFromZero)
    /* dqqua634 */ self.quantize128("1000", "NaN", "NaN", .toNearestOrAwayFromZero)
    /* dqqua635 */ self.quantize128("Inf", "NaN", "NaN", .toNearestOrAwayFromZero)
    /* dqqua636 */ self.quantize128("NaN", "1e-0", "NaN", .toNearestOrAwayFromZero)
    /* dqqua637 */ self.quantize128("-0", "NaN", "NaN", .toNearestOrAwayFromZero)
    /* dqqua641 */ self.quantize128("sNaN", "-Inf", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* dqqua642 */ self.quantize128("sNaN", "1e-299", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* dqqua643 */ self.quantize128("sNaN", "1e-1", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* dqqua644 */ self.quantize128("sNaN", "1e0", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* dqqua645 */ self.quantize128("sNaN", "1e1", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* dqqua646 */ self.quantize128("sNaN", "1e299", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* dqqua647 */ self.quantize128("sNaN", "NaN", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* dqqua648 */ self.quantize128("sNaN", "sNaN", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* dqqua649 */ self.quantize128("NaN", "sNaN", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* dqqua650 */ self.quantize128("-Inf", "sNaN", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* dqqua651 */ self.quantize128("-1000", "sNaN", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* dqqua652 */ self.quantize128("-1", "sNaN", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* dqqua653 */ self.quantize128("0", "sNaN", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* dqqua654 */ self.quantize128("1", "sNaN", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* dqqua655 */ self.quantize128("1000", "sNaN", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* dqqua656 */ self.quantize128("Inf", "sNaN", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* dqqua657 */ self.quantize128("NaN", "sNaN", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* dqqua658 */ self.quantize128("sNaN", "1e-0", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* dqqua659 */ self.quantize128("-0", "sNaN", "NaN", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* dqqua661 */ self.quantize128("NaN(0x9)", "-Inf", "NaN(0x9)", .toNearestOrAwayFromZero)
    /* dqqua662 */ self.quantize128("NaN(0x8)", "919", "NaN(0x8)", .toNearestOrAwayFromZero)
    /* dqqua663 */ self.quantize128("NaN(0x47)", "Inf", "NaN(0x47)", .toNearestOrAwayFromZero)
    /* dqqua664 */ self.quantize128("NaN(0x6)", "NaN(0x5)", "NaN(0x6)", .toNearestOrAwayFromZero)
    /* dqqua665 */ self.quantize128("-Inf", "NaN(0x4)", "NaN(0x4)", .toNearestOrAwayFromZero)
    /* dqqua666 */ self.quantize128("-919", "NaN(0x1f)", "NaN(0x1f)", .toNearestOrAwayFromZero)
    /* dqqua667 */ self.quantize128("Inf", "NaN(0x2)", "NaN(0x2)", .toNearestOrAwayFromZero)
    /* dqqua671 */ self.quantize128("sNaN(0x63)", "-Inf", "NaN(0x63)", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* dqqua672 */ self.quantize128("sNaN(0x62)", "-11", "NaN(0x62)", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* dqqua673 */ self.quantize128("sNaN(0x61)", "NaN", "NaN(0x61)", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* dqqua674 */ self.quantize128("sNaN(0x10)", "sNaN(0x5e)", "NaN(0x10)", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* dqqua675 */ self.quantize128("NaN(0x5f)", "sNaN(0x5d)", "NaN(0x5d)", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* dqqua676 */ self.quantize128("-Inf", "sNaN(0x5c)", "NaN(0x5c)", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* dqqua677 */ self.quantize128("088", "sNaN(0x5b)", "NaN(0x5b)", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* dqqua678 */ self.quantize128("Inf", "sNaN(0x5a)", "NaN(0x5a)", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* dqqua679 */ self.quantize128("NaN", "sNaN(0x58)", "NaN(0x58)", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* dqqua681 */ self.quantize128("-NaN(0x9)", "-Inf", "-NaN(0x9)", .toNearestOrAwayFromZero)
    /* dqqua682 */ self.quantize128("-NaN(0x8)", "919", "-NaN(0x8)", .toNearestOrAwayFromZero)
    /* dqqua683 */ self.quantize128("-NaN(0x47)", "Inf", "-NaN(0x47)", .toNearestOrAwayFromZero)
    /* dqqua684 */ self.quantize128("-NaN(0x6)", "-NaN(0x5)", "-NaN(0x6)", .toNearestOrAwayFromZero)
    /* dqqua685 */ self.quantize128("-Inf", "-NaN(0x4)", "-NaN(0x4)", .toNearestOrAwayFromZero)
    /* dqqua686 */ self.quantize128("-919", "-NaN(0x1f)", "-NaN(0x1f)", .toNearestOrAwayFromZero)
    /* dqqua687 */ self.quantize128("Inf", "-NaN(0x2)", "-NaN(0x2)", .toNearestOrAwayFromZero)
    /* dqqua691 */ self.quantize128("-sNaN(0x63)", "-Inf", "-NaN(0x63)", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* dqqua692 */ self.quantize128("-sNaN(0x62)", "-11", "-NaN(0x62)", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* dqqua693 */ self.quantize128("-sNaN(0x61)", "NaN", "-NaN(0x61)", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* dqqua694 */ self.quantize128("-sNaN(0x10)", "sNaN(0x5e)", "-NaN(0x10)", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* dqqua695 */ self.quantize128("-NaN(0x5f)", "-sNaN(0x5d)", "-NaN(0x5d)", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* dqqua696 */ self.quantize128("-Inf", "-sNaN(0x5c)", "-NaN(0x5c)", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* dqqua697 */ self.quantize128("088", "-sNaN(0x5b)", "-NaN(0x5b)", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* dqqua698 */ self.quantize128("Inf", "-sNaN(0x5a)", "-NaN(0x5a)", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* dqqua699 */ self.quantize128("NaN", "-sNaN(0x58)", "-NaN(0x58)", .toNearestOrAwayFromZero, .isInvalidOperation)
    /* dqqua710 */ self.quantize128("1.00E-6143", "1e-6143", "1E-6143", .toNearestOrAwayFromZero)
    /* dqqua711 */ self.quantize128("0.1E-6143", "2e-6144", "1E-6144", .toNearestOrAwayFromZero)
    /* dqqua712 */ self.quantize128("0.10E-6143", "3e-6144", "1E-6144", .toNearestOrAwayFromZero)
    /* dqqua713 */ self.quantize128("0.100E-6143", "4e-6144", "1E-6144", .toNearestOrAwayFromZero)
    /* dqqua714 */ self.quantize128("0.01E-6143", "5e-6145", "1E-6145", .toNearestOrAwayFromZero)
    /* dqqua715 */ self.quantize128("0.999E-6143", "1e-6143", "1E-6143", .toNearestOrAwayFromZero, .isInexact)
    /* dqqua716 */ self.quantize128("0.099E-6143", "10e-6144", "1E-6144", .toNearestOrAwayFromZero, .isInexact)
    /* dqqua717 */ self.quantize128("0.009E-6143", "1e-6145", "1E-6145", .toNearestOrAwayFromZero, .isInexact)
    /* dqqua718 */ self.quantize128("0.001E-6143", "1e-6145", "0E-6145", .toNearestOrAwayFromZero, .isInexact)
    /* dqqua719 */ self.quantize128("0.0009E-6143", "1e-6145", "0E-6145", .toNearestOrAwayFromZero, .isInexact)
    /* dqqua720 */ self.quantize128("0.0001E-6143", "1e-6145", "0E-6145", .toNearestOrAwayFromZero, .isInexact)
    /* dqqua730 */ self.quantize128("-1.00E-6143", "1e-6143", "-1E-6143", .toNearestOrAwayFromZero)
    /* dqqua731 */ self.quantize128("-0.1E-6143", "1e-6143", "-0E-6143", .toNearestOrAwayFromZero, .isInexact)
    /* dqqua732 */ self.quantize128("-0.10E-6143", "1e-6143", "-0E-6143", .toNearestOrAwayFromZero, .isInexact)
    /* dqqua733 */ self.quantize128("-0.100E-6143", "1e-6143", "-0E-6143", .toNearestOrAwayFromZero, .isInexact)
    /* dqqua734 */ self.quantize128("-0.01E-6143", "1e-6143", "-0E-6143", .toNearestOrAwayFromZero, .isInexact)
    /* dqqua735 */ self.quantize128("-0.999E-6143", "90e-6143", "-1E-6143", .toNearestOrAwayFromZero, .isInexact)
    /* dqqua736 */ self.quantize128("-0.099E-6143", "-1e-6143", "-0E-6143", .toNearestOrAwayFromZero, .isInexact)
    /* dqqua737 */ self.quantize128("-0.009E-6143", "-1e-6143", "-0E-6143", .toNearestOrAwayFromZero, .isInexact)
    /* dqqua738 */ self.quantize128("-0.001E-6143", "-0e-6143", "-0E-6143", .toNearestOrAwayFromZero, .isInexact)
    /* dqqua739 */ self.quantize128("-0.0001E-6143", "0e-6143", "-0E-6143", .toNearestOrAwayFromZero, .isInexact)
    /* dqqua740 */ self.quantize128("-1.00E-6143", "1e-6144", "-1.0E-6143", .toNearestOrAwayFromZero)
    /* dqqua741 */ self.quantize128("-0.1E-6143", "1e-6144", "-1E-6144", .toNearestOrAwayFromZero)
    /* dqqua742 */ self.quantize128("-0.10E-6143", "1e-6144", "-1E-6144", .toNearestOrAwayFromZero)
    /* dqqua743 */ self.quantize128("-0.100E-6143", "1e-6144", "-1E-6144", .toNearestOrAwayFromZero)
    /* dqqua744 */ self.quantize128("-0.01E-6143", "1e-6144", "-0E-6144", .toNearestOrAwayFromZero, .isInexact)
    /* dqqua745 */ self.quantize128("-0.999E-6143", "1e-6144", "-1.0E-6143", .toNearestOrAwayFromZero, .isInexact)
    /* dqqua746 */ self.quantize128("-0.099E-6143", "1e-6144", "-1E-6144", .toNearestOrAwayFromZero, .isInexact)
    /* dqqua747 */ self.quantize128("-0.009E-6143", "1e-6144", "-0E-6144", .toNearestOrAwayFromZero, .isInexact)
    /* dqqua748 */ self.quantize128("-0.001E-6143", "1e-6144", "-0E-6144", .toNearestOrAwayFromZero, .isInexact)
    /* dqqua749 */ self.quantize128("-0.0001E-6143", "1e-6144", "-0E-6144", .toNearestOrAwayFromZero, .isInexact)
    /* dqqua750 */ self.quantize128("-1.00E-6143", "1e-6145", "-1.00E-6143", .toNearestOrAwayFromZero)
    /* dqqua751 */ self.quantize128("-0.1E-6143", "1e-6145", "-1.0E-6144", .toNearestOrAwayFromZero)
    /* dqqua752 */ self.quantize128("-0.10E-6143", "1e-6145", "-1.0E-6144", .toNearestOrAwayFromZero)
    /* dqqua753 */ self.quantize128("-0.100E-6143", "1e-6145", "-1.0E-6144", .toNearestOrAwayFromZero)
    /* dqqua754 */ self.quantize128("-0.01E-6143", "1e-6145", "-1E-6145", .toNearestOrAwayFromZero)
    /* dqqua755 */ self.quantize128("-0.999E-6143", "1e-6145", "-1.00E-6143", .toNearestOrAwayFromZero, .isInexact)
    /* dqqua756 */ self.quantize128("-0.099E-6143", "1e-6145", "-1.0E-6144", .toNearestOrAwayFromZero, .isInexact)
    /* dqqua757 */ self.quantize128("-0.009E-6143", "1e-6145", "-1E-6145", .toNearestOrAwayFromZero, .isInexact)
    /* dqqua758 */ self.quantize128("-0.001E-6143", "1e-6145", "-0E-6145", .toNearestOrAwayFromZero, .isInexact)
    /* dqqua759 */ self.quantize128("-0.0001E-6143", "1e-6145", "-0E-6145", .toNearestOrAwayFromZero, .isInexact)
    /* dqqua760 */ self.quantize128("-1.00E-6143", "1e-6146", "-1.000E-6143", .toNearestOrAwayFromZero)
    /* dqqua761 */ self.quantize128("-0.1E-6143", "1e-6146", "-1.00E-6144", .toNearestOrAwayFromZero)
    /* dqqua762 */ self.quantize128("-0.10E-6143", "1e-6146", "-1.00E-6144", .toNearestOrAwayFromZero)
    /* dqqua763 */ self.quantize128("-0.100E-6143", "1e-6146", "-1.00E-6144", .toNearestOrAwayFromZero)
    /* dqqua764 */ self.quantize128("-0.01E-6143", "1e-6146", "-1.0E-6145", .toNearestOrAwayFromZero)
    /* dqqua765 */ self.quantize128("-0.999E-6143", "1e-6146", "-9.99E-6144", .toNearestOrAwayFromZero)
    /* dqqua766 */ self.quantize128("-0.099E-6143", "1e-6146", "-9.9E-6145", .toNearestOrAwayFromZero)
    /* dqqua767 */ self.quantize128("-0.009E-6143", "1e-6146", "-9E-6146", .toNearestOrAwayFromZero)
    /* dqqua768 */ self.quantize128("-0.001E-6143", "1e-6146", "-1E-6146", .toNearestOrAwayFromZero)
    /* dqqua769 */ self.quantize128("-0.0001E-6143", "1e-6146", "-0E-6146", .toNearestOrAwayFromZero, .isInexact)
  }

  private func quantize128(
    _ _arg0: String,
    _ _arg1: String,
    _ _expected: String,
    _ rounding: DecimalFloatingPointRoundingRule,
    _ _expectedStatus: DecimalStatus? = nil,
    file: StaticString = #file,
    line: UInt = #line
  ) {
    guard let arg0 = self.parseDecimal128(_arg0, file, line) else { return }
    guard let arg1 = self.parseDecimal128(_arg1, file, line) else { return }
    guard let expected = self.parseDecimal128(_expected, file, line) else { return }
    let expectedStatus = _expectedStatus ?? DecimalStatus()

    var status = DecimalStatus()
    let result = arg0.quantized(to: arg1, rounding: rounding, status: &status)
    let speleotroveResult = self.toSpeleotrove_quantize(arg0, arg1, result: result)
    self.assertEqual(speleotroveResult, expected, file, line)
    self.assertStatus(status, expectedStatus, file, line)
  }

  // MARK: - Samequantum

  func test_samequantum64() {
    /* ddsamq001 */ self.samequantum64("0", "0", true, .toNearestOrEven)
    /* ddsamq002 */ self.samequantum64("0", "1", true, .toNearestOrEven)
    /* ddsamq003 */ self.samequantum64("1", "0", true, .toNearestOrEven)
    /* ddsamq004 */ self.samequantum64("1", "1", true, .toNearestOrEven)
    /* ddsamq011 */ self.samequantum64("10", "1E+1", false, .toNearestOrEven)
    /* ddsamq0110 */ self.samequantum64("-Inf", "-Inf", true, .toNearestOrEven)
    /* ddsamq0111 */ self.samequantum64("-Inf", "Inf", true, .toNearestOrEven)
    /* ddsamq0112 */ self.samequantum64("-Inf", "NaN", false, .toNearestOrEven)
    /* ddsamq0113 */ self.samequantum64("-Inf", "-7E+3", false, .toNearestOrEven)
    /* ddsamq0114 */ self.samequantum64("-Inf", "-7", false, .toNearestOrEven)
    /* ddsamq0115 */ self.samequantum64("-Inf", "-7E-3", false, .toNearestOrEven)
    /* ddsamq0116 */ self.samequantum64("-Inf", "-0E-3", false, .toNearestOrEven)
    /* ddsamq0117 */ self.samequantum64("-Inf", "-0", false, .toNearestOrEven)
    /* ddsamq0118 */ self.samequantum64("-Inf", "-0E+3", false, .toNearestOrEven)
    /* ddsamq0119 */ self.samequantum64("-Inf", "0E-3", false, .toNearestOrEven)
    /* ddsamq012 */ self.samequantum64("10E+1", "10E+1", true, .toNearestOrEven)
    /* ddsamq0120 */ self.samequantum64("-Inf", "0", false, .toNearestOrEven)
    /* ddsamq0121 */ self.samequantum64("-Inf", "0E+3", false, .toNearestOrEven)
    /* ddsamq0122 */ self.samequantum64("-Inf", "7E-3", false, .toNearestOrEven)
    /* ddsamq0123 */ self.samequantum64("-Inf", "7", false, .toNearestOrEven)
    /* ddsamq0124 */ self.samequantum64("-Inf", "7E+3", false, .toNearestOrEven)
    /* ddsamq0125 */ self.samequantum64("-Inf", "sNaN", false, .toNearestOrEven)
    /* ddsamq013 */ self.samequantum64("100", "10E+1", false, .toNearestOrEven)
    /* ddsamq014 */ self.samequantum64("100", "1E+2", false, .toNearestOrEven)
    /* ddsamq015 */ self.samequantum64("0.1", "1E-2", false, .toNearestOrEven)
    /* ddsamq016 */ self.samequantum64("0.1", "1E-1", true, .toNearestOrEven)
    /* ddsamq017 */ self.samequantum64("0.1", "1E-0", false, .toNearestOrEven)
    /* ddsamq018 */ self.samequantum64("999", "999", true, .toNearestOrEven)
    /* ddsamq019 */ self.samequantum64("999E-1", "99.9", true, .toNearestOrEven)
    /* ddsamq020 */ self.samequantum64("111E-1", "22.2", true, .toNearestOrEven)
    /* ddsamq021 */ self.samequantum64("111E-1", "1234.2", true, .toNearestOrEven)
    /* ddsamq0210 */ self.samequantum64("Inf", "-Inf", true, .toNearestOrEven)
    /* ddsamq0211 */ self.samequantum64("Inf", "Inf", true, .toNearestOrEven)
    /* ddsamq0212 */ self.samequantum64("Inf", "NaN", false, .toNearestOrEven)
    /* ddsamq0213 */ self.samequantum64("Inf", "-7E+3", false, .toNearestOrEven)
    /* ddsamq0214 */ self.samequantum64("Inf", "-7", false, .toNearestOrEven)
    /* ddsamq0215 */ self.samequantum64("Inf", "-7E-3", false, .toNearestOrEven)
    /* ddsamq0216 */ self.samequantum64("Inf", "-0E-3", false, .toNearestOrEven)
    /* ddsamq0217 */ self.samequantum64("Inf", "-0", false, .toNearestOrEven)
    /* ddsamq0218 */ self.samequantum64("Inf", "-0E+3", false, .toNearestOrEven)
    /* ddsamq0219 */ self.samequantum64("Inf", "0E-3", false, .toNearestOrEven)
    /* ddsamq0220 */ self.samequantum64("Inf", "0", false, .toNearestOrEven)
    /* ddsamq0221 */ self.samequantum64("Inf", "0E+3", false, .toNearestOrEven)
    /* ddsamq0222 */ self.samequantum64("Inf", "7E-3", false, .toNearestOrEven)
    /* ddsamq0223 */ self.samequantum64("Inf", "7", false, .toNearestOrEven)
    /* ddsamq0224 */ self.samequantum64("Inf", "7E+3", false, .toNearestOrEven)
    /* ddsamq0225 */ self.samequantum64("Inf", "sNaN", false, .toNearestOrEven)
    /* ddsamq030 */ self.samequantum64("0.0", "1.1", true, .toNearestOrEven)
    /* ddsamq031 */ self.samequantum64("0.0", "1.11", false, .toNearestOrEven)
    /* ddsamq0310 */ self.samequantum64("NaN", "-Inf", false, .toNearestOrEven)
    /* ddsamq0311 */ self.samequantum64("NaN", "Inf", false, .toNearestOrEven)
    /* ddsamq0312 */ self.samequantum64("NaN", "NaN", true, .toNearestOrEven)
    /* ddsamq0313 */ self.samequantum64("NaN", "-7E+3", false, .toNearestOrEven)
    /* ddsamq0314 */ self.samequantum64("NaN", "-7", false, .toNearestOrEven)
    /* ddsamq0315 */ self.samequantum64("NaN", "-7E-3", false, .toNearestOrEven)
    /* ddsamq0316 */ self.samequantum64("NaN", "-0E-3", false, .toNearestOrEven)
    /* ddsamq0317 */ self.samequantum64("NaN", "-0", false, .toNearestOrEven)
    /* ddsamq0318 */ self.samequantum64("NaN", "-0E+3", false, .toNearestOrEven)
    /* ddsamq0319 */ self.samequantum64("NaN", "0E-3", false, .toNearestOrEven)
    /* ddsamq032 */ self.samequantum64("0.0", "0", false, .toNearestOrEven)
    /* ddsamq0320 */ self.samequantum64("NaN", "0", false, .toNearestOrEven)
    /* ddsamq0321 */ self.samequantum64("NaN", "0E+3", false, .toNearestOrEven)
    /* ddsamq0322 */ self.samequantum64("NaN", "7E-3", false, .toNearestOrEven)
    /* ddsamq0323 */ self.samequantum64("NaN", "7", false, .toNearestOrEven)
    /* ddsamq0324 */ self.samequantum64("NaN", "7E+3", false, .toNearestOrEven)
    /* ddsamq0325 */ self.samequantum64("NaN", "sNaN", true, .toNearestOrEven)
    /* ddsamq033 */ self.samequantum64("0.0", "0.0", true, .toNearestOrEven)
    /* ddsamq034 */ self.samequantum64("0.0", "0.00", false, .toNearestOrEven)
    /* ddsamq035 */ self.samequantum64("0E+1", "0E+0", false, .toNearestOrEven)
    /* ddsamq036 */ self.samequantum64("0E+1", "0E+1", true, .toNearestOrEven)
    /* ddsamq037 */ self.samequantum64("0E+1", "0E+2", false, .toNearestOrEven)
    /* ddsamq038 */ self.samequantum64("0E-17", "0E-16", false, .toNearestOrEven)
    /* ddsamq039 */ self.samequantum64("0E-17", "0E-17", true, .toNearestOrEven)
    /* ddsamq040 */ self.samequantum64("0E-17", "0E-18", false, .toNearestOrEven)
    /* ddsamq041 */ self.samequantum64("0E-17", "0.0E-15", false, .toNearestOrEven)
    /* ddsamq0410 */ self.samequantum64("-7E+3", "-Inf", false, .toNearestOrEven)
    /* ddsamq0411 */ self.samequantum64("-7E+3", "Inf", false, .toNearestOrEven)
    /* ddsamq0412 */ self.samequantum64("-7E+3", "NaN", false, .toNearestOrEven)
    /* ddsamq0413 */ self.samequantum64("-7E+3", "-7E+3", true, .toNearestOrEven)
    /* ddsamq0414 */ self.samequantum64("-7E+3", "-7", false, .toNearestOrEven)
    /* ddsamq0415 */ self.samequantum64("-7E+3", "-7E-3", false, .toNearestOrEven)
    /* ddsamq0416 */ self.samequantum64("-7E+3", "-0E-3", false, .toNearestOrEven)
    /* ddsamq0417 */ self.samequantum64("-7E+3", "-0", false, .toNearestOrEven)
    /* ddsamq0418 */ self.samequantum64("-7E+3", "-0E+3", true, .toNearestOrEven)
    /* ddsamq0419 */ self.samequantum64("-7E+3", "0E-3", false, .toNearestOrEven)
    /* ddsamq042 */ self.samequantum64("0E-17", "0.0E-16", true, .toNearestOrEven)
    /* ddsamq0420 */ self.samequantum64("-7E+3", "0", false, .toNearestOrEven)
    /* ddsamq0421 */ self.samequantum64("-7E+3", "0E+3", true, .toNearestOrEven)
    /* ddsamq0422 */ self.samequantum64("-7E+3", "7E-3", false, .toNearestOrEven)
    /* ddsamq0423 */ self.samequantum64("-7E+3", "7", false, .toNearestOrEven)
    /* ddsamq0424 */ self.samequantum64("-7E+3", "7E+3", true, .toNearestOrEven)
    /* ddsamq0425 */ self.samequantum64("-7E+3", "sNaN", false, .toNearestOrEven)
    /* ddsamq043 */ self.samequantum64("0E-17", "0.0E-17", false, .toNearestOrEven)
    /* ddsamq044 */ self.samequantum64("-0E-17", "0.0E-16", true, .toNearestOrEven)
    /* ddsamq045 */ self.samequantum64("0E-17", "-0.0E-17", false, .toNearestOrEven)
    /* ddsamq046 */ self.samequantum64("0E-17", "-0.0E-16", true, .toNearestOrEven)
    /* ddsamq047 */ self.samequantum64("-0E-17", "0.0E-17", false, .toNearestOrEven)
    /* ddsamq048 */ self.samequantum64("-0E-17", "-0.0E-16", true, .toNearestOrEven)
    /* ddsamq049 */ self.samequantum64("-0E-17", "-0.0E-17", false, .toNearestOrEven)
    /* ddsamq051 */ self.samequantum64("9.999999999999999E+384", "9.999999999999999E+384", true, .toNearestOrEven)
    /* ddsamq0510 */ self.samequantum64("-7", "-Inf", false, .toNearestOrEven)
    /* ddsamq0511 */ self.samequantum64("-7", "Inf", false, .toNearestOrEven)
    /* ddsamq0512 */ self.samequantum64("-7", "NaN", false, .toNearestOrEven)
    /* ddsamq0513 */ self.samequantum64("-7", "-7E+3", false, .toNearestOrEven)
    /* ddsamq0514 */ self.samequantum64("-7", "-7", true, .toNearestOrEven)
    /* ddsamq0515 */ self.samequantum64("-7", "-7E-3", false, .toNearestOrEven)
    /* ddsamq0516 */ self.samequantum64("-7", "-0E-3", false, .toNearestOrEven)
    /* ddsamq0517 */ self.samequantum64("-7", "-0", true, .toNearestOrEven)
    /* ddsamq0518 */ self.samequantum64("-7", "-0E+3", false, .toNearestOrEven)
    /* ddsamq0519 */ self.samequantum64("-7", "0E-3", false, .toNearestOrEven)
    /* ddsamq052 */ self.samequantum64("1E-383", "1E-383", true, .toNearestOrEven)
    /* ddsamq0520 */ self.samequantum64("-7", "0", true, .toNearestOrEven)
    /* ddsamq0521 */ self.samequantum64("-7", "0E+3", false, .toNearestOrEven)
    /* ddsamq0522 */ self.samequantum64("-7", "7E-3", false, .toNearestOrEven)
    /* ddsamq0523 */ self.samequantum64("-7", "7", true, .toNearestOrEven)
    /* ddsamq0524 */ self.samequantum64("-7", "7E+3", false, .toNearestOrEven)
    /* ddsamq0525 */ self.samequantum64("-7", "sNaN", false, .toNearestOrEven)
    /* ddsamq053 */ self.samequantum64("1.000000000000000E-383", "1.000000000000000E-383", true, .toNearestOrEven)
    /* ddsamq054 */ self.samequantum64("1E-398", "1E-398", true, .toNearestOrEven)
    /* ddsamq055 */ self.samequantum64("9.999999999999999E+384", "9.999999999999999E+384", true, .toNearestOrEven)
    /* ddsamq056 */ self.samequantum64("1E-383", "1E-383", true, .toNearestOrEven)
    /* ddsamq057 */ self.samequantum64("1.000000000000000E-383", "1.000000000000000E-383", true, .toNearestOrEven)
    /* ddsamq058 */ self.samequantum64("1E-398", "1E-398", true, .toNearestOrEven)
    /* ddsamq061 */ self.samequantum64("-1E-398", "-1E-398", true, .toNearestOrEven)
    /* ddsamq0610 */ self.samequantum64("-7E-3", "-Inf", false, .toNearestOrEven)
    /* ddsamq0611 */ self.samequantum64("-7E-3", "Inf", false, .toNearestOrEven)
    /* ddsamq0612 */ self.samequantum64("-7E-3", "NaN", false, .toNearestOrEven)
    /* ddsamq0613 */ self.samequantum64("-7E-3", "-7E+3", false, .toNearestOrEven)
    /* ddsamq0614 */ self.samequantum64("-7E-3", "-7", false, .toNearestOrEven)
    /* ddsamq0615 */ self.samequantum64("-7E-3", "-7E-3", true, .toNearestOrEven)
    /* ddsamq0616 */ self.samequantum64("-7E-3", "-0E-3", true, .toNearestOrEven)
    /* ddsamq0617 */ self.samequantum64("-7E-3", "-0", false, .toNearestOrEven)
    /* ddsamq0618 */ self.samequantum64("-7E-3", "-0E+3", false, .toNearestOrEven)
    /* ddsamq0619 */ self.samequantum64("-7E-3", "0E-3", true, .toNearestOrEven)
    /* ddsamq062 */ self.samequantum64("-1.000000000000000E-383", "-1.000000000000000E-383", true, .toNearestOrEven)
    /* ddsamq0620 */ self.samequantum64("-7E-3", "0", false, .toNearestOrEven)
    /* ddsamq0621 */ self.samequantum64("-7E-3", "0E+3", false, .toNearestOrEven)
    /* ddsamq0622 */ self.samequantum64("-7E-3", "7E-3", true, .toNearestOrEven)
    /* ddsamq0623 */ self.samequantum64("-7E-3", "7", false, .toNearestOrEven)
    /* ddsamq0624 */ self.samequantum64("-7E-3", "7E+3", false, .toNearestOrEven)
    /* ddsamq0625 */ self.samequantum64("-7E-3", "sNaN", false, .toNearestOrEven)
    /* ddsamq063 */ self.samequantum64("-1E-383", "-1E-383", true, .toNearestOrEven)
    /* ddsamq064 */ self.samequantum64("-9.999999999999999E+384", "-9.999999999999999E+384", true, .toNearestOrEven)
    /* ddsamq065 */ self.samequantum64("-1E-398", "-1E-398", true, .toNearestOrEven)
    /* ddsamq066 */ self.samequantum64("-1.000000000000000E-383", "-1.000000000000000E-383", true, .toNearestOrEven)
    /* ddsamq067 */ self.samequantum64("-1E-383", "-1E-383", true, .toNearestOrEven)
    /* ddsamq068 */ self.samequantum64("-9.999999999999999E+384", "-9.999999999999999E+384", true, .toNearestOrEven)
    /* ddsamq071 */ self.samequantum64("-4E-398", "-1E-398", true, .toNearestOrEven)
    /* ddsamq0710 */ self.samequantum64("-0E-3", "-Inf", false, .toNearestOrEven)
    /* ddsamq0711 */ self.samequantum64("-0E-3", "Inf", false, .toNearestOrEven)
    /* ddsamq0712 */ self.samequantum64("-0E-3", "NaN", false, .toNearestOrEven)
    /* ddsamq0713 */ self.samequantum64("-0E-3", "-7E+3", false, .toNearestOrEven)
    /* ddsamq0714 */ self.samequantum64("-0E-3", "-7", false, .toNearestOrEven)
    /* ddsamq0715 */ self.samequantum64("-0E-3", "-7E-3", true, .toNearestOrEven)
    /* ddsamq0716 */ self.samequantum64("-0E-3", "-0E-3", true, .toNearestOrEven)
    /* ddsamq0717 */ self.samequantum64("-0E-3", "-0", false, .toNearestOrEven)
    /* ddsamq0718 */ self.samequantum64("-0E-3", "-0E+3", false, .toNearestOrEven)
    /* ddsamq0719 */ self.samequantum64("-0E-3", "0E-3", true, .toNearestOrEven)
    /* ddsamq072 */ self.samequantum64("-4.000000000000000E-383", "-1.000040000000000E-383", true, .toNearestOrEven)
    /* ddsamq0720 */ self.samequantum64("-0E-3", "0", false, .toNearestOrEven)
    /* ddsamq0721 */ self.samequantum64("-0E-3", "0E+3", false, .toNearestOrEven)
    /* ddsamq0722 */ self.samequantum64("-0E-3", "7E-3", true, .toNearestOrEven)
    /* ddsamq0723 */ self.samequantum64("-0E-3", "7", false, .toNearestOrEven)
    /* ddsamq0724 */ self.samequantum64("-0E-3", "7E+3", false, .toNearestOrEven)
    /* ddsamq0725 */ self.samequantum64("-0E-3", "sNaN", false, .toNearestOrEven)
    /* ddsamq073 */ self.samequantum64("-4E-383", "-1E-383", true, .toNearestOrEven)
    /* ddsamq074 */ self.samequantum64("-4.999999999999999E+384", "-9.999999999949999E+384", true, .toNearestOrEven)
    /* ddsamq075 */ self.samequantum64("-4E-398", "-1E-398", true, .toNearestOrEven)
    /* ddsamq076 */ self.samequantum64("-4.000000000000000E-383", "-1.004000000000000E-383", true, .toNearestOrEven)
    /* ddsamq077 */ self.samequantum64("-4E-383", "-1E-383", true, .toNearestOrEven)
    /* ddsamq078 */ self.samequantum64("-4.999999999999999E+384", "-9.949999999999999E+384", true, .toNearestOrEven)
    /* ddsamq081 */ self.samequantum64("-4E-397", "-1E-398", false, .toNearestOrEven)
    /* ddsamq0810 */ self.samequantum64("-0", "-Inf", false, .toNearestOrEven)
    /* ddsamq0811 */ self.samequantum64("-0", "Inf", false, .toNearestOrEven)
    /* ddsamq0812 */ self.samequantum64("-0", "NaN", false, .toNearestOrEven)
    /* ddsamq0813 */ self.samequantum64("-0", "-7E+3", false, .toNearestOrEven)
    /* ddsamq0814 */ self.samequantum64("-0", "-7", true, .toNearestOrEven)
    /* ddsamq0815 */ self.samequantum64("-0", "-7E-3", false, .toNearestOrEven)
    /* ddsamq0816 */ self.samequantum64("-0", "-0E-3", false, .toNearestOrEven)
    /* ddsamq0817 */ self.samequantum64("-0", "-0", true, .toNearestOrEven)
    /* ddsamq0818 */ self.samequantum64("-0", "-0E+3", false, .toNearestOrEven)
    /* ddsamq0819 */ self.samequantum64("-0", "0E-3", false, .toNearestOrEven)
    /* ddsamq082 */ self.samequantum64("-4.000000000000000E-383", "-1.000040000000000E-336", false, .toNearestOrEven)
    /* ddsamq0820 */ self.samequantum64("-0", "0", true, .toNearestOrEven)
    /* ddsamq0821 */ self.samequantum64("-0", "0E+3", false, .toNearestOrEven)
    /* ddsamq0822 */ self.samequantum64("-0", "7E-3", false, .toNearestOrEven)
    /* ddsamq0823 */ self.samequantum64("-0", "7", true, .toNearestOrEven)
    /* ddsamq0824 */ self.samequantum64("-0", "7E+3", false, .toNearestOrEven)
    /* ddsamq0825 */ self.samequantum64("-0", "sNaN", false, .toNearestOrEven)
    /* ddsamq083 */ self.samequantum64("-4E-346", "-1E-383", false, .toNearestOrEven)
    /* ddsamq084 */ self.samequantum64("-4.999999999999999E+384", "-9.999499999999999E+336", false, .toNearestOrEven)
    /* ddsamq085 */ self.samequantum64("-4E-397", "-1E-398", false, .toNearestOrEven)
    /* ddsamq086 */ self.samequantum64("-4.000000000000000E-383", "-1.004000000000000E-336", false, .toNearestOrEven)
    /* ddsamq087 */ self.samequantum64("-4E-346", "-1E-383", false, .toNearestOrEven)
    /* ddsamq088 */ self.samequantum64("-4.999999999999999E+384", "-9.949999999999999E+336", false, .toNearestOrEven)
    /* ddsamq0910 */ self.samequantum64("-0E+3", "-Inf", false, .toNearestOrEven)
    /* ddsamq0911 */ self.samequantum64("-0E+3", "Inf", false, .toNearestOrEven)
    /* ddsamq0912 */ self.samequantum64("-0E+3", "NaN", false, .toNearestOrEven)
    /* ddsamq0913 */ self.samequantum64("-0E+3", "-7E+3", true, .toNearestOrEven)
    /* ddsamq0914 */ self.samequantum64("-0E+3", "-7", false, .toNearestOrEven)
    /* ddsamq0915 */ self.samequantum64("-0E+3", "-7E-3", false, .toNearestOrEven)
    /* ddsamq0916 */ self.samequantum64("-0E+3", "-0E-3", false, .toNearestOrEven)
    /* ddsamq0917 */ self.samequantum64("-0E+3", "-0", false, .toNearestOrEven)
    /* ddsamq0918 */ self.samequantum64("-0E+3", "-0E+3", true, .toNearestOrEven)
    /* ddsamq0919 */ self.samequantum64("-0E+3", "0E-3", false, .toNearestOrEven)
    /* ddsamq0920 */ self.samequantum64("-0E+3", "0", false, .toNearestOrEven)
    /* ddsamq0921 */ self.samequantum64("-0E+3", "0E+3", true, .toNearestOrEven)
    /* ddsamq0922 */ self.samequantum64("-0E+3", "7E-3", false, .toNearestOrEven)
    /* ddsamq0923 */ self.samequantum64("-0E+3", "7", false, .toNearestOrEven)
    /* ddsamq0924 */ self.samequantum64("-0E+3", "7E+3", true, .toNearestOrEven)
    /* ddsamq0925 */ self.samequantum64("-0E+3", "sNaN", false, .toNearestOrEven)
    /* ddsamq1110 */ self.samequantum64("0E-3", "-Inf", false, .toNearestOrEven)
    /* ddsamq1111 */ self.samequantum64("0E-3", "Inf", false, .toNearestOrEven)
    /* ddsamq1112 */ self.samequantum64("0E-3", "NaN", false, .toNearestOrEven)
    /* ddsamq1113 */ self.samequantum64("0E-3", "-7E+3", false, .toNearestOrEven)
    /* ddsamq1114 */ self.samequantum64("0E-3", "-7", false, .toNearestOrEven)
    /* ddsamq1115 */ self.samequantum64("0E-3", "-7E-3", true, .toNearestOrEven)
    /* ddsamq1116 */ self.samequantum64("0E-3", "-0E-3", true, .toNearestOrEven)
    /* ddsamq1117 */ self.samequantum64("0E-3", "-0", false, .toNearestOrEven)
    /* ddsamq1118 */ self.samequantum64("0E-3", "-0E+3", false, .toNearestOrEven)
    /* ddsamq1119 */ self.samequantum64("0E-3", "0E-3", true, .toNearestOrEven)
    /* ddsamq1120 */ self.samequantum64("0E-3", "0", false, .toNearestOrEven)
    /* ddsamq1121 */ self.samequantum64("0E-3", "0E+3", false, .toNearestOrEven)
    /* ddsamq1122 */ self.samequantum64("0E-3", "7E-3", true, .toNearestOrEven)
    /* ddsamq1123 */ self.samequantum64("0E-3", "7", false, .toNearestOrEven)
    /* ddsamq1124 */ self.samequantum64("0E-3", "7E+3", false, .toNearestOrEven)
    /* ddsamq1125 */ self.samequantum64("0E-3", "sNaN", false, .toNearestOrEven)
    /* ddsamq1210 */ self.samequantum64("0", "-Inf", false, .toNearestOrEven)
    /* ddsamq1211 */ self.samequantum64("0", "Inf", false, .toNearestOrEven)
    /* ddsamq1212 */ self.samequantum64("0", "NaN", false, .toNearestOrEven)
    /* ddsamq1213 */ self.samequantum64("0", "-7E+3", false, .toNearestOrEven)
    /* ddsamq1214 */ self.samequantum64("0", "-7", true, .toNearestOrEven)
    /* ddsamq1215 */ self.samequantum64("0", "-7E-3", false, .toNearestOrEven)
    /* ddsamq1216 */ self.samequantum64("0", "-0E-3", false, .toNearestOrEven)
    /* ddsamq1217 */ self.samequantum64("0", "-0", true, .toNearestOrEven)
    /* ddsamq1218 */ self.samequantum64("0", "-0E+3", false, .toNearestOrEven)
    /* ddsamq1219 */ self.samequantum64("0", "0E-3", false, .toNearestOrEven)
    /* ddsamq1220 */ self.samequantum64("0", "0", true, .toNearestOrEven)
    /* ddsamq1221 */ self.samequantum64("0", "0E+3", false, .toNearestOrEven)
    /* ddsamq1222 */ self.samequantum64("0", "7E-3", false, .toNearestOrEven)
    /* ddsamq1223 */ self.samequantum64("0", "7", true, .toNearestOrEven)
    /* ddsamq1224 */ self.samequantum64("0", "7E+3", false, .toNearestOrEven)
    /* ddsamq1225 */ self.samequantum64("0", "sNaN", false, .toNearestOrEven)
    /* ddsamq1310 */ self.samequantum64("0E+3", "-Inf", false, .toNearestOrEven)
    /* ddsamq1311 */ self.samequantum64("0E+3", "Inf", false, .toNearestOrEven)
    /* ddsamq1312 */ self.samequantum64("0E+3", "NaN", false, .toNearestOrEven)
    /* ddsamq1313 */ self.samequantum64("0E+3", "-7E+3", true, .toNearestOrEven)
    /* ddsamq1314 */ self.samequantum64("0E+3", "-7", false, .toNearestOrEven)
    /* ddsamq1315 */ self.samequantum64("0E+3", "-7E-3", false, .toNearestOrEven)
    /* ddsamq1316 */ self.samequantum64("0E+3", "-0E-3", false, .toNearestOrEven)
    /* ddsamq1317 */ self.samequantum64("0E+3", "-0", false, .toNearestOrEven)
    /* ddsamq1318 */ self.samequantum64("0E+3", "-0E+3", true, .toNearestOrEven)
    /* ddsamq1319 */ self.samequantum64("0E+3", "0E-3", false, .toNearestOrEven)
    /* ddsamq1320 */ self.samequantum64("0E+3", "0", false, .toNearestOrEven)
    /* ddsamq1321 */ self.samequantum64("0E+3", "0E+3", true, .toNearestOrEven)
    /* ddsamq1322 */ self.samequantum64("0E+3", "7E-3", false, .toNearestOrEven)
    /* ddsamq1323 */ self.samequantum64("0E+3", "7", false, .toNearestOrEven)
    /* ddsamq1324 */ self.samequantum64("0E+3", "7E+3", true, .toNearestOrEven)
    /* ddsamq1325 */ self.samequantum64("0E+3", "sNaN", false, .toNearestOrEven)
    /* ddsamq1410 */ self.samequantum64("7E-3", "-Inf", false, .toNearestOrEven)
    /* ddsamq1411 */ self.samequantum64("7E-3", "Inf", false, .toNearestOrEven)
    /* ddsamq1412 */ self.samequantum64("7E-3", "NaN", false, .toNearestOrEven)
    /* ddsamq1413 */ self.samequantum64("7E-3", "-7E+3", false, .toNearestOrEven)
    /* ddsamq1414 */ self.samequantum64("7E-3", "-7", false, .toNearestOrEven)
    /* ddsamq1415 */ self.samequantum64("7E-3", "-7E-3", true, .toNearestOrEven)
    /* ddsamq1416 */ self.samequantum64("7E-3", "-0E-3", true, .toNearestOrEven)
    /* ddsamq1417 */ self.samequantum64("7E-3", "-0", false, .toNearestOrEven)
    /* ddsamq1418 */ self.samequantum64("7E-3", "-0E+3", false, .toNearestOrEven)
    /* ddsamq1419 */ self.samequantum64("7E-3", "0E-3", true, .toNearestOrEven)
    /* ddsamq1420 */ self.samequantum64("7E-3", "0", false, .toNearestOrEven)
    /* ddsamq1421 */ self.samequantum64("7E-3", "0E+3", false, .toNearestOrEven)
    /* ddsamq1422 */ self.samequantum64("7E-3", "7E-3", true, .toNearestOrEven)
    /* ddsamq1423 */ self.samequantum64("7E-3", "7", false, .toNearestOrEven)
    /* ddsamq1424 */ self.samequantum64("7E-3", "7E+3", false, .toNearestOrEven)
    /* ddsamq1425 */ self.samequantum64("7E-3", "sNaN", false, .toNearestOrEven)
    /* ddsamq1510 */ self.samequantum64("7", "-Inf", false, .toNearestOrEven)
    /* ddsamq1511 */ self.samequantum64("7", "Inf", false, .toNearestOrEven)
    /* ddsamq1512 */ self.samequantum64("7", "NaN", false, .toNearestOrEven)
    /* ddsamq1513 */ self.samequantum64("7", "-7E+3", false, .toNearestOrEven)
    /* ddsamq1514 */ self.samequantum64("7", "-7", true, .toNearestOrEven)
    /* ddsamq1515 */ self.samequantum64("7", "-7E-3", false, .toNearestOrEven)
    /* ddsamq1516 */ self.samequantum64("7", "-0E-3", false, .toNearestOrEven)
    /* ddsamq1517 */ self.samequantum64("7", "-0", true, .toNearestOrEven)
    /* ddsamq1518 */ self.samequantum64("7", "-0E+3", false, .toNearestOrEven)
    /* ddsamq1519 */ self.samequantum64("7", "0E-3", false, .toNearestOrEven)
    /* ddsamq1520 */ self.samequantum64("7", "0", true, .toNearestOrEven)
    /* ddsamq1521 */ self.samequantum64("7", "0E+3", false, .toNearestOrEven)
    /* ddsamq1522 */ self.samequantum64("7", "7E-3", false, .toNearestOrEven)
    /* ddsamq1523 */ self.samequantum64("7", "7", true, .toNearestOrEven)
    /* ddsamq1524 */ self.samequantum64("7", "7E+3", false, .toNearestOrEven)
    /* ddsamq1525 */ self.samequantum64("7", "sNaN", false, .toNearestOrEven)
    /* ddsamq1610 */ self.samequantum64("7E+3", "-Inf", false, .toNearestOrEven)
    /* ddsamq1611 */ self.samequantum64("7E+3", "Inf", false, .toNearestOrEven)
    /* ddsamq1612 */ self.samequantum64("7E+3", "NaN", false, .toNearestOrEven)
    /* ddsamq1613 */ self.samequantum64("7E+3", "-7E+3", true, .toNearestOrEven)
    /* ddsamq1614 */ self.samequantum64("7E+3", "-7", false, .toNearestOrEven)
    /* ddsamq1615 */ self.samequantum64("7E+3", "-7E-3", false, .toNearestOrEven)
    /* ddsamq1616 */ self.samequantum64("7E+3", "-0E-3", false, .toNearestOrEven)
    /* ddsamq1617 */ self.samequantum64("7E+3", "-0", false, .toNearestOrEven)
    /* ddsamq1618 */ self.samequantum64("7E+3", "-0E+3", true, .toNearestOrEven)
    /* ddsamq1619 */ self.samequantum64("7E+3", "0E-3", false, .toNearestOrEven)
    /* ddsamq1620 */ self.samequantum64("7E+3", "0", false, .toNearestOrEven)
    /* ddsamq1621 */ self.samequantum64("7E+3", "0E+3", true, .toNearestOrEven)
    /* ddsamq1622 */ self.samequantum64("7E+3", "7E-3", false, .toNearestOrEven)
    /* ddsamq1623 */ self.samequantum64("7E+3", "7", false, .toNearestOrEven)
    /* ddsamq1624 */ self.samequantum64("7E+3", "7E+3", true, .toNearestOrEven)
    /* ddsamq1625 */ self.samequantum64("7E+3", "sNaN", false, .toNearestOrEven)
    /* ddsamq1710 */ self.samequantum64("sNaN", "-Inf", false, .toNearestOrEven)
    /* ddsamq1711 */ self.samequantum64("sNaN", "Inf", false, .toNearestOrEven)
    /* ddsamq1712 */ self.samequantum64("sNaN", "NaN", true, .toNearestOrEven)
    /* ddsamq1713 */ self.samequantum64("sNaN", "-7E+3", false, .toNearestOrEven)
    /* ddsamq1714 */ self.samequantum64("sNaN", "-7", false, .toNearestOrEven)
    /* ddsamq1715 */ self.samequantum64("sNaN", "-7E-3", false, .toNearestOrEven)
    /* ddsamq1716 */ self.samequantum64("sNaN", "-0E-3", false, .toNearestOrEven)
    /* ddsamq1717 */ self.samequantum64("sNaN", "-0", false, .toNearestOrEven)
    /* ddsamq1718 */ self.samequantum64("sNaN", "-0E+3", false, .toNearestOrEven)
    /* ddsamq1719 */ self.samequantum64("sNaN", "0E-3", false, .toNearestOrEven)
    /* ddsamq1720 */ self.samequantum64("sNaN", "0", false, .toNearestOrEven)
    /* ddsamq1721 */ self.samequantum64("sNaN", "0E+3", false, .toNearestOrEven)
    /* ddsamq1722 */ self.samequantum64("sNaN", "7E-3", false, .toNearestOrEven)
    /* ddsamq1723 */ self.samequantum64("sNaN", "7", false, .toNearestOrEven)
    /* ddsamq1724 */ self.samequantum64("sNaN", "7E+3", false, .toNearestOrEven)
    /* ddsamq1725 */ self.samequantum64("sNaN", "sNaN", true, .toNearestOrEven)
    /* ddsamq1730 */ self.samequantum64("sNaN(0x3)", "sNaN(0x3)", true, .toNearestOrEven)
    /* ddsamq1731 */ self.samequantum64("sNaN(0x3)", "sNaN(0x4)", true, .toNearestOrEven)
    /* ddsamq1732 */ self.samequantum64("NaN(0x3)", "NaN(0x3)", true, .toNearestOrEven)
    /* ddsamq1733 */ self.samequantum64("NaN(0x3)", "NaN(0x4)", true, .toNearestOrEven)
    /* ddsamq1734 */ self.samequantum64("sNaN(0x3)", "3", false, .toNearestOrEven)
    /* ddsamq1735 */ self.samequantum64("NaN(0x3)", "3", false, .toNearestOrEven)
    /* ddsamq1736 */ self.samequantum64("4", "sNaN(0x4)", false, .toNearestOrEven)
    /* ddsamq1737 */ self.samequantum64("3", "NaN(0x3)", false, .toNearestOrEven)
    /* ddsamq1738 */ self.samequantum64("Inf", "sNaN(0x4)", false, .toNearestOrEven)
    /* ddsamq1739 */ self.samequantum64("-Inf", "NaN(0x3)", false, .toNearestOrEven)
  }

  private func samequantum64(
    _ _arg0: String,
    _ _arg1: String,
    _ expected: Bool,
    _ rounding: DecimalFloatingPointRoundingRule,
    _ _expectedStatus: DecimalStatus? = nil,
    file: StaticString = #file,
    line: UInt = #line
  ) {
    guard let arg0 = self.parseDecimal64(_arg0, file, line) else { return }
    guard let arg1 = self.parseDecimal64(_arg1, file, line) else { return }

    let result = arg0.sameQuantum(as: arg1)
    self.assertBool(result, expected, file, line)
  }

  func test_samequantum128() {
    /* dqsamq001 */ self.samequantum128("0", "0", true, .toNearestOrEven)
    /* dqsamq002 */ self.samequantum128("0", "1", true, .toNearestOrEven)
    /* dqsamq003 */ self.samequantum128("1", "0", true, .toNearestOrEven)
    /* dqsamq004 */ self.samequantum128("1", "1", true, .toNearestOrEven)
    /* dqsamq011 */ self.samequantum128("10", "1E+1", false, .toNearestOrEven)
    /* dqsamq0110 */ self.samequantum128("-Inf", "-Inf", true, .toNearestOrEven)
    /* dqsamq0111 */ self.samequantum128("-Inf", "Inf", true, .toNearestOrEven)
    /* dqsamq0112 */ self.samequantum128("-Inf", "NaN", false, .toNearestOrEven)
    /* dqsamq0113 */ self.samequantum128("-Inf", "-7E+3", false, .toNearestOrEven)
    /* dqsamq0114 */ self.samequantum128("-Inf", "-7", false, .toNearestOrEven)
    /* dqsamq0115 */ self.samequantum128("-Inf", "-7E-3", false, .toNearestOrEven)
    /* dqsamq0116 */ self.samequantum128("-Inf", "-0E-3", false, .toNearestOrEven)
    /* dqsamq0117 */ self.samequantum128("-Inf", "-0", false, .toNearestOrEven)
    /* dqsamq0118 */ self.samequantum128("-Inf", "-0E+3", false, .toNearestOrEven)
    /* dqsamq0119 */ self.samequantum128("-Inf", "0E-3", false, .toNearestOrEven)
    /* dqsamq012 */ self.samequantum128("10E+1", "10E+1", true, .toNearestOrEven)
    /* dqsamq0120 */ self.samequantum128("-Inf", "0", false, .toNearestOrEven)
    /* dqsamq0121 */ self.samequantum128("-Inf", "0E+3", false, .toNearestOrEven)
    /* dqsamq0122 */ self.samequantum128("-Inf", "7E-3", false, .toNearestOrEven)
    /* dqsamq0123 */ self.samequantum128("-Inf", "7", false, .toNearestOrEven)
    /* dqsamq0124 */ self.samequantum128("-Inf", "7E+3", false, .toNearestOrEven)
    /* dqsamq0125 */ self.samequantum128("-Inf", "sNaN", false, .toNearestOrEven)
    /* dqsamq013 */ self.samequantum128("100", "10E+1", false, .toNearestOrEven)
    /* dqsamq014 */ self.samequantum128("100", "1E+2", false, .toNearestOrEven)
    /* dqsamq015 */ self.samequantum128("0.1", "1E-2", false, .toNearestOrEven)
    /* dqsamq016 */ self.samequantum128("0.1", "1E-1", true, .toNearestOrEven)
    /* dqsamq017 */ self.samequantum128("0.1", "1E-0", false, .toNearestOrEven)
    /* dqsamq018 */ self.samequantum128("999", "999", true, .toNearestOrEven)
    /* dqsamq019 */ self.samequantum128("999E-1", "99.9", true, .toNearestOrEven)
    /* dqsamq020 */ self.samequantum128("111E-1", "22.2", true, .toNearestOrEven)
    /* dqsamq021 */ self.samequantum128("111E-1", "1234.2", true, .toNearestOrEven)
    /* dqsamq0210 */ self.samequantum128("Inf", "-Inf", true, .toNearestOrEven)
    /* dqsamq0211 */ self.samequantum128("Inf", "Inf", true, .toNearestOrEven)
    /* dqsamq0212 */ self.samequantum128("Inf", "NaN", false, .toNearestOrEven)
    /* dqsamq0213 */ self.samequantum128("Inf", "-7E+3", false, .toNearestOrEven)
    /* dqsamq0214 */ self.samequantum128("Inf", "-7", false, .toNearestOrEven)
    /* dqsamq0215 */ self.samequantum128("Inf", "-7E-3", false, .toNearestOrEven)
    /* dqsamq0216 */ self.samequantum128("Inf", "-0E-3", false, .toNearestOrEven)
    /* dqsamq0217 */ self.samequantum128("Inf", "-0", false, .toNearestOrEven)
    /* dqsamq0218 */ self.samequantum128("Inf", "-0E+3", false, .toNearestOrEven)
    /* dqsamq0219 */ self.samequantum128("Inf", "0E-3", false, .toNearestOrEven)
    /* dqsamq0220 */ self.samequantum128("Inf", "0", false, .toNearestOrEven)
    /* dqsamq0221 */ self.samequantum128("Inf", "0E+3", false, .toNearestOrEven)
    /* dqsamq0222 */ self.samequantum128("Inf", "7E-3", false, .toNearestOrEven)
    /* dqsamq0223 */ self.samequantum128("Inf", "7", false, .toNearestOrEven)
    /* dqsamq0224 */ self.samequantum128("Inf", "7E+3", false, .toNearestOrEven)
    /* dqsamq0225 */ self.samequantum128("Inf", "sNaN", false, .toNearestOrEven)
    /* dqsamq030 */ self.samequantum128("0.0", "1.1", true, .toNearestOrEven)
    /* dqsamq031 */ self.samequantum128("0.0", "1.11", false, .toNearestOrEven)
    /* dqsamq0310 */ self.samequantum128("NaN", "-Inf", false, .toNearestOrEven)
    /* dqsamq0311 */ self.samequantum128("NaN", "Inf", false, .toNearestOrEven)
    /* dqsamq0312 */ self.samequantum128("NaN", "NaN", true, .toNearestOrEven)
    /* dqsamq0313 */ self.samequantum128("NaN", "-7E+3", false, .toNearestOrEven)
    /* dqsamq0314 */ self.samequantum128("NaN", "-7", false, .toNearestOrEven)
    /* dqsamq0315 */ self.samequantum128("NaN", "-7E-3", false, .toNearestOrEven)
    /* dqsamq0316 */ self.samequantum128("NaN", "-0E-3", false, .toNearestOrEven)
    /* dqsamq0317 */ self.samequantum128("NaN", "-0", false, .toNearestOrEven)
    /* dqsamq0318 */ self.samequantum128("NaN", "-0E+3", false, .toNearestOrEven)
    /* dqsamq0319 */ self.samequantum128("NaN", "0E-3", false, .toNearestOrEven)
    /* dqsamq032 */ self.samequantum128("0.0", "0", false, .toNearestOrEven)
    /* dqsamq0320 */ self.samequantum128("NaN", "0", false, .toNearestOrEven)
    /* dqsamq0321 */ self.samequantum128("NaN", "0E+3", false, .toNearestOrEven)
    /* dqsamq0322 */ self.samequantum128("NaN", "7E-3", false, .toNearestOrEven)
    /* dqsamq0323 */ self.samequantum128("NaN", "7", false, .toNearestOrEven)
    /* dqsamq0324 */ self.samequantum128("NaN", "7E+3", false, .toNearestOrEven)
    /* dqsamq0325 */ self.samequantum128("NaN", "sNaN", true, .toNearestOrEven)
    /* dqsamq033 */ self.samequantum128("0.0", "0.0", true, .toNearestOrEven)
    /* dqsamq034 */ self.samequantum128("0.0", "0.00", false, .toNearestOrEven)
    /* dqsamq035 */ self.samequantum128("0E+1", "0E+0", false, .toNearestOrEven)
    /* dqsamq036 */ self.samequantum128("0E+1", "0E+1", true, .toNearestOrEven)
    /* dqsamq037 */ self.samequantum128("0E+1", "0E+2", false, .toNearestOrEven)
    /* dqsamq038 */ self.samequantum128("0E-17", "0E-16", false, .toNearestOrEven)
    /* dqsamq039 */ self.samequantum128("0E-17", "0E-17", true, .toNearestOrEven)
    /* dqsamq040 */ self.samequantum128("0E-17", "0E-18", false, .toNearestOrEven)
    /* dqsamq041 */ self.samequantum128("0E-17", "0.0E-15", false, .toNearestOrEven)
    /* dqsamq0410 */ self.samequantum128("-7E+3", "-Inf", false, .toNearestOrEven)
    /* dqsamq0411 */ self.samequantum128("-7E+3", "Inf", false, .toNearestOrEven)
    /* dqsamq0412 */ self.samequantum128("-7E+3", "NaN", false, .toNearestOrEven)
    /* dqsamq0413 */ self.samequantum128("-7E+3", "-7E+3", true, .toNearestOrEven)
    /* dqsamq0414 */ self.samequantum128("-7E+3", "-7", false, .toNearestOrEven)
    /* dqsamq0415 */ self.samequantum128("-7E+3", "-7E-3", false, .toNearestOrEven)
    /* dqsamq0416 */ self.samequantum128("-7E+3", "-0E-3", false, .toNearestOrEven)
    /* dqsamq0417 */ self.samequantum128("-7E+3", "-0", false, .toNearestOrEven)
    /* dqsamq0418 */ self.samequantum128("-7E+3", "-0E+3", true, .toNearestOrEven)
    /* dqsamq0419 */ self.samequantum128("-7E+3", "0E-3", false, .toNearestOrEven)
    /* dqsamq042 */ self.samequantum128("0E-17", "0.0E-16", true, .toNearestOrEven)
    /* dqsamq0420 */ self.samequantum128("-7E+3", "0", false, .toNearestOrEven)
    /* dqsamq0421 */ self.samequantum128("-7E+3", "0E+3", true, .toNearestOrEven)
    /* dqsamq0422 */ self.samequantum128("-7E+3", "7E-3", false, .toNearestOrEven)
    /* dqsamq0423 */ self.samequantum128("-7E+3", "7", false, .toNearestOrEven)
    /* dqsamq0424 */ self.samequantum128("-7E+3", "7E+3", true, .toNearestOrEven)
    /* dqsamq0425 */ self.samequantum128("-7E+3", "sNaN", false, .toNearestOrEven)
    /* dqsamq043 */ self.samequantum128("0E-17", "0.0E-17", false, .toNearestOrEven)
    /* dqsamq044 */ self.samequantum128("-0E-17", "0.0E-16", true, .toNearestOrEven)
    /* dqsamq045 */ self.samequantum128("0E-17", "-0.0E-17", false, .toNearestOrEven)
    /* dqsamq046 */ self.samequantum128("0E-17", "-0.0E-16", true, .toNearestOrEven)
    /* dqsamq047 */ self.samequantum128("-0E-17", "0.0E-17", false, .toNearestOrEven)
    /* dqsamq048 */ self.samequantum128("-0E-17", "-0.0E-16", true, .toNearestOrEven)
    /* dqsamq049 */ self.samequantum128("-0E-17", "-0.0E-17", false, .toNearestOrEven)
    /* dqsamq051 */ self.samequantum128("9.99999999999999999999999999999999E+6144", "9.99999999999999999999999999999999E+6144", true, .toNearestOrEven)
    /* dqsamq0510 */ self.samequantum128("-7", "-Inf", false, .toNearestOrEven)
    /* dqsamq0511 */ self.samequantum128("-7", "Inf", false, .toNearestOrEven)
    /* dqsamq0512 */ self.samequantum128("-7", "NaN", false, .toNearestOrEven)
    /* dqsamq0513 */ self.samequantum128("-7", "-7E+3", false, .toNearestOrEven)
    /* dqsamq0514 */ self.samequantum128("-7", "-7", true, .toNearestOrEven)
    /* dqsamq0515 */ self.samequantum128("-7", "-7E-3", false, .toNearestOrEven)
    /* dqsamq0516 */ self.samequantum128("-7", "-0E-3", false, .toNearestOrEven)
    /* dqsamq0517 */ self.samequantum128("-7", "-0", true, .toNearestOrEven)
    /* dqsamq0518 */ self.samequantum128("-7", "-0E+3", false, .toNearestOrEven)
    /* dqsamq0519 */ self.samequantum128("-7", "0E-3", false, .toNearestOrEven)
    /* dqsamq052 */ self.samequantum128("1E-6143", "1E-6143", true, .toNearestOrEven)
    /* dqsamq0520 */ self.samequantum128("-7", "0", true, .toNearestOrEven)
    /* dqsamq0521 */ self.samequantum128("-7", "0E+3", false, .toNearestOrEven)
    /* dqsamq0522 */ self.samequantum128("-7", "7E-3", false, .toNearestOrEven)
    /* dqsamq0523 */ self.samequantum128("-7", "7", true, .toNearestOrEven)
    /* dqsamq0524 */ self.samequantum128("-7", "7E+3", false, .toNearestOrEven)
    /* dqsamq0525 */ self.samequantum128("-7", "sNaN", false, .toNearestOrEven)
    /* dqsamq053 */ self.samequantum128("1.00000000000000000000000000000000E-6143", "1.00000000000000000000000000000000E-6143", true, .toNearestOrEven)
    /* dqsamq054 */ self.samequantum128("1E-6176", "1E-6176", true, .toNearestOrEven)
    /* dqsamq055 */ self.samequantum128("9.99999999999999999999999999999999E+6144", "9.99999999999999999999999999999999E+6144", true, .toNearestOrEven)
    /* dqsamq056 */ self.samequantum128("1E-6143", "1E-6143", true, .toNearestOrEven)
    /* dqsamq057 */ self.samequantum128("1.00000000000000000000000000000000E-6143", "1.00000000000000000000000000000000E-6143", true, .toNearestOrEven)
    /* dqsamq058 */ self.samequantum128("1E-6176", "1E-6176", true, .toNearestOrEven)
    /* dqsamq061 */ self.samequantum128("-1E-6176", "-1E-6176", true, .toNearestOrEven)
    /* dqsamq0610 */ self.samequantum128("-7E-3", "-Inf", false, .toNearestOrEven)
    /* dqsamq0611 */ self.samequantum128("-7E-3", "Inf", false, .toNearestOrEven)
    /* dqsamq0612 */ self.samequantum128("-7E-3", "NaN", false, .toNearestOrEven)
    /* dqsamq0613 */ self.samequantum128("-7E-3", "-7E+3", false, .toNearestOrEven)
    /* dqsamq0614 */ self.samequantum128("-7E-3", "-7", false, .toNearestOrEven)
    /* dqsamq0615 */ self.samequantum128("-7E-3", "-7E-3", true, .toNearestOrEven)
    /* dqsamq0616 */ self.samequantum128("-7E-3", "-0E-3", true, .toNearestOrEven)
    /* dqsamq0617 */ self.samequantum128("-7E-3", "-0", false, .toNearestOrEven)
    /* dqsamq0618 */ self.samequantum128("-7E-3", "-0E+3", false, .toNearestOrEven)
    /* dqsamq0619 */ self.samequantum128("-7E-3", "0E-3", true, .toNearestOrEven)
    /* dqsamq062 */ self.samequantum128("-1.00000000000000000000000000000000E-6143", "-1.00000000000000000000000000000000E-6143", true, .toNearestOrEven)
    /* dqsamq0620 */ self.samequantum128("-7E-3", "0", false, .toNearestOrEven)
    /* dqsamq0621 */ self.samequantum128("-7E-3", "0E+3", false, .toNearestOrEven)
    /* dqsamq0622 */ self.samequantum128("-7E-3", "7E-3", true, .toNearestOrEven)
    /* dqsamq0623 */ self.samequantum128("-7E-3", "7", false, .toNearestOrEven)
    /* dqsamq0624 */ self.samequantum128("-7E-3", "7E+3", false, .toNearestOrEven)
    /* dqsamq0625 */ self.samequantum128("-7E-3", "sNaN", false, .toNearestOrEven)
    /* dqsamq063 */ self.samequantum128("-1E-6143", "-1E-6143", true, .toNearestOrEven)
    /* dqsamq064 */ self.samequantum128("-9.99999999999999999999999999999999E+6144", "-9.99999999999999999999999999999999E+6144", true, .toNearestOrEven)
    /* dqsamq065 */ self.samequantum128("-1E-6176", "-1E-6176", true, .toNearestOrEven)
    /* dqsamq066 */ self.samequantum128("-1.00000000000000000000000000000000E-6143", "-1.00000000000000000000000000000000E-6143", true, .toNearestOrEven)
    /* dqsamq067 */ self.samequantum128("-1E-6143", "-1E-6143", true, .toNearestOrEven)
    /* dqsamq068 */ self.samequantum128("-9.99999999999999999999999999999999E+6144", "-9.99999999999999999999999999999999E+6144", true, .toNearestOrEven)
    /* dqsamq071 */ self.samequantum128("-4E-6176", "-1E-6176", true, .toNearestOrEven)
    /* dqsamq0710 */ self.samequantum128("-0E-3", "-Inf", false, .toNearestOrEven)
    /* dqsamq0711 */ self.samequantum128("-0E-3", "Inf", false, .toNearestOrEven)
    /* dqsamq0712 */ self.samequantum128("-0E-3", "NaN", false, .toNearestOrEven)
    /* dqsamq0713 */ self.samequantum128("-0E-3", "-7E+3", false, .toNearestOrEven)
    /* dqsamq0714 */ self.samequantum128("-0E-3", "-7", false, .toNearestOrEven)
    /* dqsamq0715 */ self.samequantum128("-0E-3", "-7E-3", true, .toNearestOrEven)
    /* dqsamq0716 */ self.samequantum128("-0E-3", "-0E-3", true, .toNearestOrEven)
    /* dqsamq0717 */ self.samequantum128("-0E-3", "-0", false, .toNearestOrEven)
    /* dqsamq0718 */ self.samequantum128("-0E-3", "-0E+3", false, .toNearestOrEven)
    /* dqsamq0719 */ self.samequantum128("-0E-3", "0E-3", true, .toNearestOrEven)
    /* dqsamq072 */ self.samequantum128("-4.00000000000000000000000000000000E-6143", "-1.00000000000000000000000000004000E-6143", true, .toNearestOrEven)
    /* dqsamq0720 */ self.samequantum128("-0E-3", "0", false, .toNearestOrEven)
    /* dqsamq0721 */ self.samequantum128("-0E-3", "0E+3", false, .toNearestOrEven)
    /* dqsamq0722 */ self.samequantum128("-0E-3", "7E-3", true, .toNearestOrEven)
    /* dqsamq0723 */ self.samequantum128("-0E-3", "7", false, .toNearestOrEven)
    /* dqsamq0724 */ self.samequantum128("-0E-3", "7E+3", false, .toNearestOrEven)
    /* dqsamq0725 */ self.samequantum128("-0E-3", "sNaN", false, .toNearestOrEven)
    /* dqsamq073 */ self.samequantum128("-4E-6143", "-1E-6143", true, .toNearestOrEven)
    /* dqsamq074 */ self.samequantum128("-4.99999999999999999999999999999999E+6144", "-9.99949999999999999999999999999999E+6144", true, .toNearestOrEven)
    /* dqsamq075 */ self.samequantum128("-4E-6176", "-1E-6176", true, .toNearestOrEven)
    /* dqsamq076 */ self.samequantum128("-4.00000000000000000000000000000000E-6143", "-1.00400000000000000000000000000000E-6143", true, .toNearestOrEven)
    /* dqsamq077 */ self.samequantum128("-4E-6143", "-1E-6143", true, .toNearestOrEven)
    /* dqsamq078 */ self.samequantum128("-4.99999999999999999999999999999999E+6144", "-9.94999999999999999999999999999999E+6144", true, .toNearestOrEven)
    /* dqsamq081 */ self.samequantum128("-4E-1006", "-1E-6176", false, .toNearestOrEven)
    /* dqsamq0810 */ self.samequantum128("-0", "-Inf", false, .toNearestOrEven)
    /* dqsamq0811 */ self.samequantum128("-0", "Inf", false, .toNearestOrEven)
    /* dqsamq0812 */ self.samequantum128("-0", "NaN", false, .toNearestOrEven)
    /* dqsamq0813 */ self.samequantum128("-0", "-7E+3", false, .toNearestOrEven)
    /* dqsamq0814 */ self.samequantum128("-0", "-7", true, .toNearestOrEven)
    /* dqsamq0815 */ self.samequantum128("-0", "-7E-3", false, .toNearestOrEven)
    /* dqsamq0816 */ self.samequantum128("-0", "-0E-3", false, .toNearestOrEven)
    /* dqsamq0817 */ self.samequantum128("-0", "-0", true, .toNearestOrEven)
    /* dqsamq0818 */ self.samequantum128("-0", "-0E+3", false, .toNearestOrEven)
    /* dqsamq0819 */ self.samequantum128("-0", "0E-3", false, .toNearestOrEven)
    /* dqsamq082 */ self.samequantum128("-4.00000000000000000000000000000000E-6143", "-1.00004000000000000000000000000000E-6136", false, .toNearestOrEven)
    /* dqsamq0820 */ self.samequantum128("-0", "0", true, .toNearestOrEven)
    /* dqsamq0821 */ self.samequantum128("-0", "0E+3", false, .toNearestOrEven)
    /* dqsamq0822 */ self.samequantum128("-0", "7E-3", false, .toNearestOrEven)
    /* dqsamq0823 */ self.samequantum128("-0", "7", true, .toNearestOrEven)
    /* dqsamq0824 */ self.samequantum128("-0", "7E+3", false, .toNearestOrEven)
    /* dqsamq0825 */ self.samequantum128("-0", "sNaN", false, .toNearestOrEven)
    /* dqsamq083 */ self.samequantum128("-4E-6140", "-1E-6143", false, .toNearestOrEven)
    /* dqsamq084 */ self.samequantum128("-4.99999999999999999999999999999999E+6144", "-9.99949999999999999999999999999999E+6136", false, .toNearestOrEven)
    /* dqsamq085 */ self.samequantum128("-4E-1006", "-1E-6176", false, .toNearestOrEven)
    /* dqsamq086 */ self.samequantum128("-4.00000000000000000000000000000000E-6143", "-1.00400000000000000000000000000000E-6136", false, .toNearestOrEven)
    /* dqsamq087 */ self.samequantum128("-4E-6133", "-1E-6143", false, .toNearestOrEven)
    /* dqsamq088 */ self.samequantum128("-4.99999999999999999999999999999999E+6144", "-9.94999999999999999999999999999999E+6136", false, .toNearestOrEven)
    /* dqsamq0910 */ self.samequantum128("-0E+3", "-Inf", false, .toNearestOrEven)
    /* dqsamq0911 */ self.samequantum128("-0E+3", "Inf", false, .toNearestOrEven)
    /* dqsamq0912 */ self.samequantum128("-0E+3", "NaN", false, .toNearestOrEven)
    /* dqsamq0913 */ self.samequantum128("-0E+3", "-7E+3", true, .toNearestOrEven)
    /* dqsamq0914 */ self.samequantum128("-0E+3", "-7", false, .toNearestOrEven)
    /* dqsamq0915 */ self.samequantum128("-0E+3", "-7E-3", false, .toNearestOrEven)
    /* dqsamq0916 */ self.samequantum128("-0E+3", "-0E-3", false, .toNearestOrEven)
    /* dqsamq0917 */ self.samequantum128("-0E+3", "-0", false, .toNearestOrEven)
    /* dqsamq0918 */ self.samequantum128("-0E+3", "-0E+3", true, .toNearestOrEven)
    /* dqsamq0919 */ self.samequantum128("-0E+3", "0E-3", false, .toNearestOrEven)
    /* dqsamq0920 */ self.samequantum128("-0E+3", "0", false, .toNearestOrEven)
    /* dqsamq0921 */ self.samequantum128("-0E+3", "0E+3", true, .toNearestOrEven)
    /* dqsamq0922 */ self.samequantum128("-0E+3", "7E-3", false, .toNearestOrEven)
    /* dqsamq0923 */ self.samequantum128("-0E+3", "7", false, .toNearestOrEven)
    /* dqsamq0924 */ self.samequantum128("-0E+3", "7E+3", true, .toNearestOrEven)
    /* dqsamq0925 */ self.samequantum128("-0E+3", "sNaN", false, .toNearestOrEven)
    /* dqsamq1110 */ self.samequantum128("0E-3", "-Inf", false, .toNearestOrEven)
    /* dqsamq1111 */ self.samequantum128("0E-3", "Inf", false, .toNearestOrEven)
    /* dqsamq1112 */ self.samequantum128("0E-3", "NaN", false, .toNearestOrEven)
    /* dqsamq1113 */ self.samequantum128("0E-3", "-7E+3", false, .toNearestOrEven)
    /* dqsamq1114 */ self.samequantum128("0E-3", "-7", false, .toNearestOrEven)
    /* dqsamq1115 */ self.samequantum128("0E-3", "-7E-3", true, .toNearestOrEven)
    /* dqsamq1116 */ self.samequantum128("0E-3", "-0E-3", true, .toNearestOrEven)
    /* dqsamq1117 */ self.samequantum128("0E-3", "-0", false, .toNearestOrEven)
    /* dqsamq1118 */ self.samequantum128("0E-3", "-0E+3", false, .toNearestOrEven)
    /* dqsamq1119 */ self.samequantum128("0E-3", "0E-3", true, .toNearestOrEven)
    /* dqsamq1120 */ self.samequantum128("0E-3", "0", false, .toNearestOrEven)
    /* dqsamq1121 */ self.samequantum128("0E-3", "0E+3", false, .toNearestOrEven)
    /* dqsamq1122 */ self.samequantum128("0E-3", "7E-3", true, .toNearestOrEven)
    /* dqsamq1123 */ self.samequantum128("0E-3", "7", false, .toNearestOrEven)
    /* dqsamq1124 */ self.samequantum128("0E-3", "7E+3", false, .toNearestOrEven)
    /* dqsamq1125 */ self.samequantum128("0E-3", "sNaN", false, .toNearestOrEven)
    /* dqsamq1210 */ self.samequantum128("0", "-Inf", false, .toNearestOrEven)
    /* dqsamq1211 */ self.samequantum128("0", "Inf", false, .toNearestOrEven)
    /* dqsamq1212 */ self.samequantum128("0", "NaN", false, .toNearestOrEven)
    /* dqsamq1213 */ self.samequantum128("0", "-7E+3", false, .toNearestOrEven)
    /* dqsamq1214 */ self.samequantum128("0", "-7", true, .toNearestOrEven)
    /* dqsamq1215 */ self.samequantum128("0", "-7E-3", false, .toNearestOrEven)
    /* dqsamq1216 */ self.samequantum128("0", "-0E-3", false, .toNearestOrEven)
    /* dqsamq1217 */ self.samequantum128("0", "-0", true, .toNearestOrEven)
    /* dqsamq1218 */ self.samequantum128("0", "-0E+3", false, .toNearestOrEven)
    /* dqsamq1219 */ self.samequantum128("0", "0E-3", false, .toNearestOrEven)
    /* dqsamq1220 */ self.samequantum128("0", "0", true, .toNearestOrEven)
    /* dqsamq1221 */ self.samequantum128("0", "0E+3", false, .toNearestOrEven)
    /* dqsamq1222 */ self.samequantum128("0", "7E-3", false, .toNearestOrEven)
    /* dqsamq1223 */ self.samequantum128("0", "7", true, .toNearestOrEven)
    /* dqsamq1224 */ self.samequantum128("0", "7E+3", false, .toNearestOrEven)
    /* dqsamq1225 */ self.samequantum128("0", "sNaN", false, .toNearestOrEven)
    /* dqsamq1310 */ self.samequantum128("0E+3", "-Inf", false, .toNearestOrEven)
    /* dqsamq1311 */ self.samequantum128("0E+3", "Inf", false, .toNearestOrEven)
    /* dqsamq1312 */ self.samequantum128("0E+3", "NaN", false, .toNearestOrEven)
    /* dqsamq1313 */ self.samequantum128("0E+3", "-7E+3", true, .toNearestOrEven)
    /* dqsamq1314 */ self.samequantum128("0E+3", "-7", false, .toNearestOrEven)
    /* dqsamq1315 */ self.samequantum128("0E+3", "-7E-3", false, .toNearestOrEven)
    /* dqsamq1316 */ self.samequantum128("0E+3", "-0E-3", false, .toNearestOrEven)
    /* dqsamq1317 */ self.samequantum128("0E+3", "-0", false, .toNearestOrEven)
    /* dqsamq1318 */ self.samequantum128("0E+3", "-0E+3", true, .toNearestOrEven)
    /* dqsamq1319 */ self.samequantum128("0E+3", "0E-3", false, .toNearestOrEven)
    /* dqsamq1320 */ self.samequantum128("0E+3", "0", false, .toNearestOrEven)
    /* dqsamq1321 */ self.samequantum128("0E+3", "0E+3", true, .toNearestOrEven)
    /* dqsamq1322 */ self.samequantum128("0E+3", "7E-3", false, .toNearestOrEven)
    /* dqsamq1323 */ self.samequantum128("0E+3", "7", false, .toNearestOrEven)
    /* dqsamq1324 */ self.samequantum128("0E+3", "7E+3", true, .toNearestOrEven)
    /* dqsamq1325 */ self.samequantum128("0E+3", "sNaN", false, .toNearestOrEven)
    /* dqsamq1410 */ self.samequantum128("7E-3", "-Inf", false, .toNearestOrEven)
    /* dqsamq1411 */ self.samequantum128("7E-3", "Inf", false, .toNearestOrEven)
    /* dqsamq1412 */ self.samequantum128("7E-3", "NaN", false, .toNearestOrEven)
    /* dqsamq1413 */ self.samequantum128("7E-3", "-7E+3", false, .toNearestOrEven)
    /* dqsamq1414 */ self.samequantum128("7E-3", "-7", false, .toNearestOrEven)
    /* dqsamq1415 */ self.samequantum128("7E-3", "-7E-3", true, .toNearestOrEven)
    /* dqsamq1416 */ self.samequantum128("7E-3", "-0E-3", true, .toNearestOrEven)
    /* dqsamq1417 */ self.samequantum128("7E-3", "-0", false, .toNearestOrEven)
    /* dqsamq1418 */ self.samequantum128("7E-3", "-0E+3", false, .toNearestOrEven)
    /* dqsamq1419 */ self.samequantum128("7E-3", "0E-3", true, .toNearestOrEven)
    /* dqsamq1420 */ self.samequantum128("7E-3", "0", false, .toNearestOrEven)
    /* dqsamq1421 */ self.samequantum128("7E-3", "0E+3", false, .toNearestOrEven)
    /* dqsamq1422 */ self.samequantum128("7E-3", "7E-3", true, .toNearestOrEven)
    /* dqsamq1423 */ self.samequantum128("7E-3", "7", false, .toNearestOrEven)
    /* dqsamq1424 */ self.samequantum128("7E-3", "7E+3", false, .toNearestOrEven)
    /* dqsamq1425 */ self.samequantum128("7E-3", "sNaN", false, .toNearestOrEven)
    /* dqsamq1510 */ self.samequantum128("7", "-Inf", false, .toNearestOrEven)
    /* dqsamq1511 */ self.samequantum128("7", "Inf", false, .toNearestOrEven)
    /* dqsamq1512 */ self.samequantum128("7", "NaN", false, .toNearestOrEven)
    /* dqsamq1513 */ self.samequantum128("7", "-7E+3", false, .toNearestOrEven)
    /* dqsamq1514 */ self.samequantum128("7", "-7", true, .toNearestOrEven)
    /* dqsamq1515 */ self.samequantum128("7", "-7E-3", false, .toNearestOrEven)
    /* dqsamq1516 */ self.samequantum128("7", "-0E-3", false, .toNearestOrEven)
    /* dqsamq1517 */ self.samequantum128("7", "-0", true, .toNearestOrEven)
    /* dqsamq1518 */ self.samequantum128("7", "-0E+3", false, .toNearestOrEven)
    /* dqsamq1519 */ self.samequantum128("7", "0E-3", false, .toNearestOrEven)
    /* dqsamq1520 */ self.samequantum128("7", "0", true, .toNearestOrEven)
    /* dqsamq1521 */ self.samequantum128("7", "0E+3", false, .toNearestOrEven)
    /* dqsamq1522 */ self.samequantum128("7", "7E-3", false, .toNearestOrEven)
    /* dqsamq1523 */ self.samequantum128("7", "7", true, .toNearestOrEven)
    /* dqsamq1524 */ self.samequantum128("7", "7E+3", false, .toNearestOrEven)
    /* dqsamq1525 */ self.samequantum128("7", "sNaN", false, .toNearestOrEven)
    /* dqsamq1610 */ self.samequantum128("7E+3", "-Inf", false, .toNearestOrEven)
    /* dqsamq1611 */ self.samequantum128("7E+3", "Inf", false, .toNearestOrEven)
    /* dqsamq1612 */ self.samequantum128("7E+3", "NaN", false, .toNearestOrEven)
    /* dqsamq1613 */ self.samequantum128("7E+3", "-7E+3", true, .toNearestOrEven)
    /* dqsamq1614 */ self.samequantum128("7E+3", "-7", false, .toNearestOrEven)
    /* dqsamq1615 */ self.samequantum128("7E+3", "-7E-3", false, .toNearestOrEven)
    /* dqsamq1616 */ self.samequantum128("7E+3", "-0E-3", false, .toNearestOrEven)
    /* dqsamq1617 */ self.samequantum128("7E+3", "-0", false, .toNearestOrEven)
    /* dqsamq1618 */ self.samequantum128("7E+3", "-0E+3", true, .toNearestOrEven)
    /* dqsamq1619 */ self.samequantum128("7E+3", "0E-3", false, .toNearestOrEven)
    /* dqsamq1620 */ self.samequantum128("7E+3", "0", false, .toNearestOrEven)
    /* dqsamq1621 */ self.samequantum128("7E+3", "0E+3", true, .toNearestOrEven)
    /* dqsamq1622 */ self.samequantum128("7E+3", "7E-3", false, .toNearestOrEven)
    /* dqsamq1623 */ self.samequantum128("7E+3", "7", false, .toNearestOrEven)
    /* dqsamq1624 */ self.samequantum128("7E+3", "7E+3", true, .toNearestOrEven)
    /* dqsamq1625 */ self.samequantum128("7E+3", "sNaN", false, .toNearestOrEven)
    /* dqsamq1710 */ self.samequantum128("sNaN", "-Inf", false, .toNearestOrEven)
    /* dqsamq1711 */ self.samequantum128("sNaN", "Inf", false, .toNearestOrEven)
    /* dqsamq1712 */ self.samequantum128("sNaN", "NaN", true, .toNearestOrEven)
    /* dqsamq1713 */ self.samequantum128("sNaN", "-7E+3", false, .toNearestOrEven)
    /* dqsamq1714 */ self.samequantum128("sNaN", "-7", false, .toNearestOrEven)
    /* dqsamq1715 */ self.samequantum128("sNaN", "-7E-3", false, .toNearestOrEven)
    /* dqsamq1716 */ self.samequantum128("sNaN", "-0E-3", false, .toNearestOrEven)
    /* dqsamq1717 */ self.samequantum128("sNaN", "-0", false, .toNearestOrEven)
    /* dqsamq1718 */ self.samequantum128("sNaN", "-0E+3", false, .toNearestOrEven)
    /* dqsamq1719 */ self.samequantum128("sNaN", "0E-3", false, .toNearestOrEven)
    /* dqsamq1720 */ self.samequantum128("sNaN", "0", false, .toNearestOrEven)
    /* dqsamq1721 */ self.samequantum128("sNaN", "0E+3", false, .toNearestOrEven)
    /* dqsamq1722 */ self.samequantum128("sNaN", "7E-3", false, .toNearestOrEven)
    /* dqsamq1723 */ self.samequantum128("sNaN", "7", false, .toNearestOrEven)
    /* dqsamq1724 */ self.samequantum128("sNaN", "7E+3", false, .toNearestOrEven)
    /* dqsamq1725 */ self.samequantum128("sNaN", "sNaN", true, .toNearestOrEven)
    /* dqsamq1730 */ self.samequantum128("sNaN(0x3)", "sNaN(0x3)", true, .toNearestOrEven)
    /* dqsamq1731 */ self.samequantum128("sNaN(0x3)", "sNaN(0x4)", true, .toNearestOrEven)
    /* dqsamq1732 */ self.samequantum128("NaN(0x3)", "NaN(0x3)", true, .toNearestOrEven)
    /* dqsamq1733 */ self.samequantum128("NaN(0x3)", "NaN(0x4)", true, .toNearestOrEven)
    /* dqsamq1734 */ self.samequantum128("sNaN(0x3)", "3", false, .toNearestOrEven)
    /* dqsamq1735 */ self.samequantum128("NaN(0x3)", "3", false, .toNearestOrEven)
    /* dqsamq1736 */ self.samequantum128("4", "sNaN(0x4)", false, .toNearestOrEven)
    /* dqsamq1737 */ self.samequantum128("3", "NaN(0x3)", false, .toNearestOrEven)
    /* dqsamq1738 */ self.samequantum128("Inf", "sNaN(0x4)", false, .toNearestOrEven)
    /* dqsamq1739 */ self.samequantum128("-Inf", "NaN(0x3)", false, .toNearestOrEven)
  }

  private func samequantum128(
    _ _arg0: String,
    _ _arg1: String,
    _ expected: Bool,
    _ rounding: DecimalFloatingPointRoundingRule,
    _ _expectedStatus: DecimalStatus? = nil,
    file: StaticString = #file,
    line: UInt = #line
  ) {
    guard let arg0 = self.parseDecimal128(_arg0, file, line) else { return }
    guard let arg1 = self.parseDecimal128(_arg1, file, line) else { return }

    let result = arg0.sameQuantum(as: arg1)
    self.assertBool(result, expected, file, line)
  }
}
