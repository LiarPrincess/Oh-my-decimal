// =============================================================================
// Automatically generated. DO NOT EDIT!
// To regenerate: make gen
// =============================================================================

import XCTest
@testable import Decimal

class SpeleotroveRoundTests: XCTestCase, SpeleotroveMixin {

  func test_tointegralx64() {
    /* ddcan601 */ self.tointegralx64("#6e38ff3ffff3fcff", "#6e38ff3fcff3fcff", .toNearestOrEven)
    /* ddcan602 */ self.tointegralx64("#6e38ff3fcff3fdff", "#6e38ff3fcff3fcff", .toNearestOrEven)
    /* ddcan603 */ self.tointegralx64("#7880000000000000", "#7800000000000000", .toNearestOrEven)
    /* ddcan604 */ self.tointegralx64("#7802000000000000", "#7800000000000000", .toNearestOrEven)
    /* ddcan610 */ self.tointegralx64("#7c03ff3fcff3fcff", "#7c00ff3fcff3fcff", .toNearestOrEven)
    /* ddcan611 */ self.tointegralx64("#7c03ff3fcff3fcff", "#7c00ff3fcff3fcff", .toNearestOrEven)
    /* ddcan612 */ self.tointegralx64("#7c40ff3fcff3fcff", "#7c00ff3fcff3fcff", .toNearestOrEven)
    /* ddcan613 */ self.tointegralx64("#7c40ff3fcff3fcff", "#7c00ff3fcff3fcff", .toNearestOrEven)
    /* ddcan614 */ self.tointegralx64("#7e00ffffcff3fcff", "#7c00ff3fcff3fcff", .toNearestOrEven, .isInvalidOperation)
    /* ddcan615 */ self.tointegralx64("#7e00ffffcff3fcff", "#7c00ff3fcff3fcff", .toNearestOrEven, .isInvalidOperation)
    /* ddcan616 */ self.tointegralx64("#7e80ff3fcff3fcff", "#7c00ff3fcff3fcff", .toNearestOrEven, .isInvalidOperation)
    /* ddcan617 */ self.tointegralx64("#7e80ff3fcff3fcff", "#7c00ff3fcff3fcff", .toNearestOrEven, .isInvalidOperation)
    /* ddcan618 */ self.tointegralx64("#2238000000000fff", "#2238000000000cff", .toNearestOrEven)
    /* ddcan619 */ self.tointegralx64("#2230000000000fff", "#2238000000000040", .toNearestOrEven, .isInexact)
    /* ddcan620 */ self.tointegralx64("#222c000000000fff", "#2238000000000004", .toNearestOrEven, .isInexact)
    /* ddcan621 */ self.tointegralx64("#2228000000000fff", "#2238000000000000", .toNearestOrEven, .isInexact)
    /* ddcan622 */ self.tointegralx64("#a238000000000fff", "#a238000000000cff", .toNearestOrEven)
    /* ddcan623 */ self.tointegralx64("#a230000000000fff", "#a238000000000040", .toNearestOrEven, .isInexact)
    /* ddcan624 */ self.tointegralx64("#a22c000000000fff", "#a238000000000004", .toNearestOrEven, .isInexact)
    /* ddcan625 */ self.tointegralx64("#a228000000000fff", "#a238000000000000", .toNearestOrEven, .isInexact)
    /* ddintx001 */ self.tointegralx64("0", "0", .toNearestOrEven)
    /* ddintx002 */ self.tointegralx64("0.0", "0", .toNearestOrEven)
    /* ddintx003 */ self.tointegralx64("0.1", "0", .toNearestOrEven, .isInexact)
    /* ddintx004 */ self.tointegralx64("0.2", "0", .toNearestOrEven, .isInexact)
    /* ddintx005 */ self.tointegralx64("0.3", "0", .toNearestOrEven, .isInexact)
    /* ddintx006 */ self.tointegralx64("0.4", "0", .toNearestOrEven, .isInexact)
    /* ddintx007 */ self.tointegralx64("0.5", "0", .toNearestOrEven, .isInexact)
    /* ddintx008 */ self.tointegralx64("0.6", "1", .toNearestOrEven, .isInexact)
    /* ddintx009 */ self.tointegralx64("0.7", "1", .toNearestOrEven, .isInexact)
    /* ddintx010 */ self.tointegralx64("0.8", "1", .toNearestOrEven, .isInexact)
    /* ddintx011 */ self.tointegralx64("0.9", "1", .toNearestOrEven, .isInexact)
    /* ddintx012 */ self.tointegralx64("1", "1", .toNearestOrEven)
    /* ddintx013 */ self.tointegralx64("1.0", "1", .toNearestOrEven)
    /* ddintx014 */ self.tointegralx64("1.1", "1", .toNearestOrEven, .isInexact)
    /* ddintx015 */ self.tointegralx64("1.2", "1", .toNearestOrEven, .isInexact)
    /* ddintx016 */ self.tointegralx64("1.3", "1", .toNearestOrEven, .isInexact)
    /* ddintx017 */ self.tointegralx64("1.4", "1", .toNearestOrEven, .isInexact)
    /* ddintx018 */ self.tointegralx64("1.5", "2", .toNearestOrEven, .isInexact)
    /* ddintx019 */ self.tointegralx64("1.6", "2", .toNearestOrEven, .isInexact)
    /* ddintx020 */ self.tointegralx64("1.7", "2", .toNearestOrEven, .isInexact)
    /* ddintx021 */ self.tointegralx64("1.8", "2", .toNearestOrEven, .isInexact)
    /* ddintx022 */ self.tointegralx64("1.9", "2", .toNearestOrEven, .isInexact)
    /* ddintx031 */ self.tointegralx64("-0", "-0", .toNearestOrEven)
    /* ddintx032 */ self.tointegralx64("-0.0", "-0", .toNearestOrEven)
    /* ddintx033 */ self.tointegralx64("-0.1", "-0", .toNearestOrEven, .isInexact)
    /* ddintx034 */ self.tointegralx64("-0.2", "-0", .toNearestOrEven, .isInexact)
    /* ddintx035 */ self.tointegralx64("-0.3", "-0", .toNearestOrEven, .isInexact)
    /* ddintx036 */ self.tointegralx64("-0.4", "-0", .toNearestOrEven, .isInexact)
    /* ddintx037 */ self.tointegralx64("-0.5", "-0", .toNearestOrEven, .isInexact)
    /* ddintx038 */ self.tointegralx64("-0.6", "-1", .toNearestOrEven, .isInexact)
    /* ddintx039 */ self.tointegralx64("-0.7", "-1", .toNearestOrEven, .isInexact)
    /* ddintx040 */ self.tointegralx64("-0.8", "-1", .toNearestOrEven, .isInexact)
    /* ddintx041 */ self.tointegralx64("-0.9", "-1", .toNearestOrEven, .isInexact)
    /* ddintx042 */ self.tointegralx64("-1", "-1", .toNearestOrEven)
    /* ddintx043 */ self.tointegralx64("-1.0", "-1", .toNearestOrEven)
    /* ddintx044 */ self.tointegralx64("-1.1", "-1", .toNearestOrEven, .isInexact)
    /* ddintx045 */ self.tointegralx64("-1.2", "-1", .toNearestOrEven, .isInexact)
    /* ddintx046 */ self.tointegralx64("-1.3", "-1", .toNearestOrEven, .isInexact)
    /* ddintx047 */ self.tointegralx64("-1.4", "-1", .toNearestOrEven, .isInexact)
    /* ddintx048 */ self.tointegralx64("-1.5", "-2", .toNearestOrEven, .isInexact)
    /* ddintx049 */ self.tointegralx64("-1.6", "-2", .toNearestOrEven, .isInexact)
    /* ddintx050 */ self.tointegralx64("-1.7", "-2", .toNearestOrEven, .isInexact)
    /* ddintx051 */ self.tointegralx64("-1.8", "-2", .toNearestOrEven, .isInexact)
    /* ddintx052 */ self.tointegralx64("-1.9", "-2", .toNearestOrEven, .isInexact)
    /* ddintx053 */ self.tointegralx64("10E+60", "1.0E+61", .toNearestOrEven)
    /* ddintx054 */ self.tointegralx64("-10E+60", "-1.0E+61", .toNearestOrEven)
    /* ddintx060 */ self.tointegralx64("56267E-17", "0", .toNearestOrEven, .isInexact)
    /* ddintx061 */ self.tointegralx64("56267E-5", "1", .toNearestOrEven, .isInexact)
    /* ddintx062 */ self.tointegralx64("56267E-2", "563", .toNearestOrEven, .isInexact)
    /* ddintx063 */ self.tointegralx64("56267E-1", "5627", .toNearestOrEven, .isInexact)
    /* ddintx065 */ self.tointegralx64("56267E-0", "56267", .toNearestOrEven)
    /* ddintx066 */ self.tointegralx64("56267E+0", "56267", .toNearestOrEven)
    /* ddintx067 */ self.tointegralx64("56267E+1", "5.6267E+5", .toNearestOrEven)
    /* ddintx068 */ self.tointegralx64("56267E+9", "5.6267E+13", .toNearestOrEven)
    /* ddintx069 */ self.tointegralx64("56267E+10", "5.6267E+14", .toNearestOrEven)
    /* ddintx070 */ self.tointegralx64("56267E+11", "5.6267E+15", .toNearestOrEven)
    /* ddintx071 */ self.tointegralx64("56267E+12", "5.6267E+16", .toNearestOrEven)
    /* ddintx072 */ self.tointegralx64("56267E+13", "5.6267E+17", .toNearestOrEven)
    /* ddintx073 */ self.tointegralx64("1.23E+96", "1.23E+96", .toNearestOrEven)
    /* ddintx074 */ self.tointegralx64("1.23E+384", "#47fd300000000000", .toNearestOrEven)
    /* ddintx080 */ self.tointegralx64("-56267E-10", "-0", .toNearestOrEven, .isInexact)
    /* ddintx081 */ self.tointegralx64("-56267E-5", "-1", .toNearestOrEven, .isInexact)
    /* ddintx082 */ self.tointegralx64("-56267E-2", "-563", .toNearestOrEven, .isInexact)
    /* ddintx083 */ self.tointegralx64("-56267E-1", "-5627", .toNearestOrEven, .isInexact)
    /* ddintx085 */ self.tointegralx64("-56267E-0", "-56267", .toNearestOrEven)
    /* ddintx086 */ self.tointegralx64("-56267E+0", "-56267", .toNearestOrEven)
    /* ddintx087 */ self.tointegralx64("-56267E+1", "-5.6267E+5", .toNearestOrEven)
    /* ddintx088 */ self.tointegralx64("-56267E+9", "-5.6267E+13", .toNearestOrEven)
    /* ddintx089 */ self.tointegralx64("-56267E+10", "-5.6267E+14", .toNearestOrEven)
    /* ddintx090 */ self.tointegralx64("-56267E+11", "-5.6267E+15", .toNearestOrEven)
    /* ddintx091 */ self.tointegralx64("-56267E+12", "-5.6267E+16", .toNearestOrEven)
    /* ddintx092 */ self.tointegralx64("-56267E+13", "-5.6267E+17", .toNearestOrEven)
    /* ddintx093 */ self.tointegralx64("-1.23E+96", "-1.23E+96", .toNearestOrEven)
    /* ddintx094 */ self.tointegralx64("-1.23E+384", "#c7fd300000000000", .toNearestOrEven)
    /* ddintx100 */ self.tointegralx64("1E-299", "0", .toNearestOrEven, .isInexact)
    /* ddintx101 */ self.tointegralx64("0.1E-299", "0", .toNearestOrEven, .isInexact)
    /* ddintx102 */ self.tointegralx64("0.01E-299", "0", .toNearestOrEven, .isInexact)
    /* ddintx103 */ self.tointegralx64("0E-299", "0", .toNearestOrEven)
    /* ddintx120 */ self.tointegralx64("Inf", "Infinity", .toNearestOrEven)
    /* ddintx121 */ self.tointegralx64("-Inf", "-Infinity", .toNearestOrEven)
    /* ddintx122 */ self.tointegralx64("NaN", "NaN", .toNearestOrEven)
    /* ddintx123 */ self.tointegralx64("sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddintx124 */ self.tointegralx64("0", "0", .toNearestOrEven)
    /* ddintx125 */ self.tointegralx64("-0", "-0", .toNearestOrEven)
    /* ddintx126 */ self.tointegralx64("0.000", "0", .toNearestOrEven)
    /* ddintx127 */ self.tointegralx64("0.00", "0", .toNearestOrEven)
    /* ddintx128 */ self.tointegralx64("0.0", "0", .toNearestOrEven)
    /* ddintx129 */ self.tointegralx64("0", "0", .toNearestOrEven)
    /* ddintx130 */ self.tointegralx64("0E-3", "0", .toNearestOrEven)
    /* ddintx131 */ self.tointegralx64("0E-2", "0", .toNearestOrEven)
    /* ddintx132 */ self.tointegralx64("0E-1", "0", .toNearestOrEven)
    /* ddintx133 */ self.tointegralx64("0E-0", "0", .toNearestOrEven)
    /* ddintx134 */ self.tointegralx64("0E+1", "0E+1", .toNearestOrEven)
    /* ddintx135 */ self.tointegralx64("0E+2", "0E+2", .toNearestOrEven)
    /* ddintx136 */ self.tointegralx64("0E+3", "0E+3", .toNearestOrEven)
    /* ddintx137 */ self.tointegralx64("0E+4", "0E+4", .toNearestOrEven)
    /* ddintx138 */ self.tointegralx64("0E+5", "0E+5", .toNearestOrEven)
    /* ddintx139 */ self.tointegralx64("-0.000", "-0", .toNearestOrEven)
    /* ddintx140 */ self.tointegralx64("-0.00", "-0", .toNearestOrEven)
    /* ddintx141 */ self.tointegralx64("-0.0", "-0", .toNearestOrEven)
    /* ddintx142 */ self.tointegralx64("-0", "-0", .toNearestOrEven)
    /* ddintx143 */ self.tointegralx64("-0E-3", "-0", .toNearestOrEven)
    /* ddintx144 */ self.tointegralx64("-0E-2", "-0", .toNearestOrEven)
    /* ddintx145 */ self.tointegralx64("-0E-1", "-0", .toNearestOrEven)
    /* ddintx146 */ self.tointegralx64("-0E-0", "-0", .toNearestOrEven)
    /* ddintx147 */ self.tointegralx64("-0E+1", "-0E+1", .toNearestOrEven)
    /* ddintx148 */ self.tointegralx64("-0E+2", "-0E+2", .toNearestOrEven)
    /* ddintx149 */ self.tointegralx64("-0E+3", "-0E+3", .toNearestOrEven)
    /* ddintx150 */ self.tointegralx64("-0E+4", "-0E+4", .toNearestOrEven)
    /* ddintx151 */ self.tointegralx64("-0E+5", "-0E+5", .toNearestOrEven)
    /* ddintx152 */ self.tointegralx64("NaN(0x328)", "NaN(0x328)", .toNearestOrEven)
    /* ddintx153 */ self.tointegralx64("sNaN(0x50)", "NaN(0x50)", .toNearestOrEven, .isInvalidOperation)
    /* ddintx154 */ self.tointegralx64("-NaN(0x328)", "-NaN(0x328)", .toNearestOrEven)
    /* ddintx155 */ self.tointegralx64("-sNaN(0x50)", "-NaN(0x50)", .toNearestOrEven, .isInvalidOperation)
    /* ddintx156 */ self.tointegralx64("-NaN", "-NaN", .toNearestOrEven)
    /* ddintx157 */ self.tointegralx64("-sNaN", "-NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddintx200 */ self.tointegralx64("2.1", "2", .toNearestOrAwayFromZero, .isInexact)
    /* ddintx201 */ self.tointegralx64("100", "100", .toNearestOrAwayFromZero)
    /* ddintx202 */ self.tointegralx64("100.0", "100", .toNearestOrAwayFromZero)
    /* ddintx203 */ self.tointegralx64("101.5", "102", .toNearestOrAwayFromZero, .isInexact)
    /* ddintx204 */ self.tointegralx64("-101.5", "-102", .toNearestOrAwayFromZero, .isInexact)
    /* ddintx205 */ self.tointegralx64("10E+5", "1.0E+6", .toNearestOrAwayFromZero)
    /* ddintx206 */ self.tointegralx64("7.89E+77", "7.89E+77", .toNearestOrAwayFromZero)
    /* ddintx207 */ self.tointegralx64("-Inf", "-Infinity", .toNearestOrAwayFromZero)
    /* ddintx210 */ self.tointegralx64("55.5", "56", .toNearestOrEven, .isInexact)
    /* ddintx211 */ self.tointegralx64("56.5", "56", .toNearestOrEven, .isInexact)
    /* ddintx212 */ self.tointegralx64("57.5", "58", .toNearestOrEven, .isInexact)
    /* ddintx213 */ self.tointegralx64("-55.5", "-56", .toNearestOrEven, .isInexact)
    /* ddintx214 */ self.tointegralx64("-56.5", "-56", .toNearestOrEven, .isInexact)
    /* ddintx215 */ self.tointegralx64("-57.5", "-58", .toNearestOrEven, .isInexact)
    /* ddintx220 */ self.tointegralx64("55.5", "56", .toNearestOrAwayFromZero, .isInexact)
    /* ddintx221 */ self.tointegralx64("56.5", "57", .toNearestOrAwayFromZero, .isInexact)
    /* ddintx222 */ self.tointegralx64("57.5", "58", .toNearestOrAwayFromZero, .isInexact)
    /* ddintx223 */ self.tointegralx64("-55.5", "-56", .toNearestOrAwayFromZero, .isInexact)
    /* ddintx224 */ self.tointegralx64("-56.5", "-57", .toNearestOrAwayFromZero, .isInexact)
    /* ddintx225 */ self.tointegralx64("-57.5", "-58", .toNearestOrAwayFromZero, .isInexact)
    /* ddintx250 */ self.tointegralx64("55.7", "55", .towardZero, .isInexact)
    /* ddintx251 */ self.tointegralx64("56.7", "56", .towardZero, .isInexact)
    /* ddintx252 */ self.tointegralx64("57.7", "57", .towardZero, .isInexact)
    /* ddintx253 */ self.tointegralx64("-55.7", "-55", .towardZero, .isInexact)
    /* ddintx254 */ self.tointegralx64("-56.7", "-56", .towardZero, .isInexact)
    /* ddintx255 */ self.tointegralx64("-57.7", "-57", .towardZero, .isInexact)
    /* ddintx260 */ self.tointegralx64("55.3", "56", .up, .isInexact)
    /* ddintx261 */ self.tointegralx64("56.3", "57", .up, .isInexact)
    /* ddintx262 */ self.tointegralx64("57.3", "58", .up, .isInexact)
    /* ddintx263 */ self.tointegralx64("-55.3", "-55", .up, .isInexact)
    /* ddintx264 */ self.tointegralx64("-56.3", "-56", .up, .isInexact)
    /* ddintx265 */ self.tointegralx64("-57.3", "-57", .up, .isInexact)
    /* ddintx270 */ self.tointegralx64("55.7", "55", .down, .isInexact)
    /* ddintx271 */ self.tointegralx64("56.7", "56", .down, .isInexact)
    /* ddintx272 */ self.tointegralx64("57.7", "57", .down, .isInexact)
    /* ddintx273 */ self.tointegralx64("-55.7", "-56", .down, .isInexact)
    /* ddintx274 */ self.tointegralx64("-56.7", "-57", .down, .isInexact)
    /* ddintx275 */ self.tointegralx64("-57.7", "-58", .down, .isInexact)
    /* ddintx300 */ self.tointegralx64("-2147483646", "-2147483646", .down)
    /* ddintx301 */ self.tointegralx64("-2147483647", "-2147483647", .down)
    /* ddintx302 */ self.tointegralx64("-2147483648", "-2147483648", .down)
    /* ddintx303 */ self.tointegralx64("-2147483649", "-2147483649", .down)
    /* ddintx304 */ self.tointegralx64("2147483646", "2147483646", .down)
    /* ddintx305 */ self.tointegralx64("2147483647", "2147483647", .down)
    /* ddintx306 */ self.tointegralx64("2147483648", "2147483648", .down)
    /* ddintx307 */ self.tointegralx64("2147483649", "2147483649", .down)
    /* ddintx308 */ self.tointegralx64("4294967294", "4294967294", .down)
    /* ddintx309 */ self.tointegralx64("4294967295", "4294967295", .down)
    /* ddintx310 */ self.tointegralx64("4294967296", "4294967296", .down)
    /* ddintx311 */ self.tointegralx64("4294967297", "4294967297", .down)
  }

  private func tointegralx64(
    _ _arg0: String,
    _ _expected: String,
    _ rounding: DecimalFloatingPointRoundingRule,
    _ _expectedStatus: DecimalStatus? = nil,
    file: StaticString = #file,
    line: UInt = #line
  ) {
    guard let arg0 = self.parseDecimal64(_arg0, file, line) else { return }
    guard let expected = self.parseDecimal64(_expected, file, line) else { return }
    let expectedStatus = _expectedStatus ?? DecimalStatus()

    var status = DecimalStatus()
    let result = arg0.rounded(rounding, status: &status)
    self.assertEqual(result, expected, file, line)
    self.assertStatus(status, expectedStatus, file, line)
  }

  func test_tointegralx128() {
    /* dqcan601 */ self.tointegralx128("#6e080ff3fdff3fcff3fcff3fcff3fcff", "#6e080ff3fcff3fcff3fcff3fcff3fcff", .toNearestOrEven)
    /* dqcan602 */ self.tointegralx128("#ee080ff3fcff3ffff3fcff3fcff3fcff", "#ee080ff3fcff3fcff3fcff3fcff3fcff", .toNearestOrEven)
    /* dqcan603 */ self.tointegralx128("#78800000000000000000000000000000", "#78000000000000000000000000000000", .toNearestOrEven)
    /* dqcan604 */ self.tointegralx128("#78020000000000000000000000000000", "#78000000000000000000000000000000", .toNearestOrEven)
    /* dqcan614 */ self.tointegralx128("#7c100ff3fcff3fcff3fcff3fcff3fcff", "#7c000ff3fcff3fcff3fcff3fcff3fcff", .toNearestOrEven)
    /* dqcan615 */ self.tointegralx128("#fc000ff3fcff3fcff3fcffffcff3fcff", "#fc000ff3fcff3fcff3fcff3fcff3fcff", .toNearestOrEven)
    /* dqcan616 */ self.tointegralx128("#7e010ff3fcff3fcff3fcff3fcff3fcff", "#7c000ff3fcff3fcff3fcff3fcff3fcff", .toNearestOrEven, .isInvalidOperation)
    /* dqcan617 */ self.tointegralx128("#fe000ff3fcff3fcff3fdff3fcff3fcff", "#fc000ff3fcff3fcff3fcff3fcff3fcff", .toNearestOrEven, .isInvalidOperation)
    /* dqcan618 */ self.tointegralx128("#22080000000000000000000000000fff", "#22080000000000000000000000000cff", .toNearestOrEven)
    /* dqcan619 */ self.tointegralx128("#22078000000000000000000000000fff", "#22080000000000000000000000000040", .toNearestOrEven, .isInexact)
    /* dqcan620 */ self.tointegralx128("#22074000000000000000000000000fff", "#22080000000000000000000000000004", .toNearestOrEven, .isInexact)
    /* dqcan621 */ self.tointegralx128("#22070000000000000000000000000fff", "#22080000000000000000000000000000", .toNearestOrEven, .isInexact)
    /* dqcan622 */ self.tointegralx128("#a2080000000000000000000000000fff", "#a2080000000000000000000000000cff", .toNearestOrEven)
    /* dqcan623 */ self.tointegralx128("#a2078000000000000000000000000fff", "#a2080000000000000000000000000040", .toNearestOrEven, .isInexact)
    /* dqcan624 */ self.tointegralx128("#a2074000000000000000000000000fff", "#a2080000000000000000000000000004", .toNearestOrEven, .isInexact)
    /* dqcan625 */ self.tointegralx128("#a2070000000000000000000000000fff", "#a2080000000000000000000000000000", .toNearestOrEven, .isInexact)
    /* dqintx001 */ self.tointegralx128("0", "0", .toNearestOrEven)
    /* dqintx002 */ self.tointegralx128("0.0", "0", .toNearestOrEven)
    /* dqintx003 */ self.tointegralx128("0.1", "0", .toNearestOrEven, .isInexact)
    /* dqintx004 */ self.tointegralx128("0.2", "0", .toNearestOrEven, .isInexact)
    /* dqintx005 */ self.tointegralx128("0.3", "0", .toNearestOrEven, .isInexact)
    /* dqintx006 */ self.tointegralx128("0.4", "0", .toNearestOrEven, .isInexact)
    /* dqintx007 */ self.tointegralx128("0.5", "0", .toNearestOrEven, .isInexact)
    /* dqintx008 */ self.tointegralx128("0.6", "1", .toNearestOrEven, .isInexact)
    /* dqintx009 */ self.tointegralx128("0.7", "1", .toNearestOrEven, .isInexact)
    /* dqintx010 */ self.tointegralx128("0.8", "1", .toNearestOrEven, .isInexact)
    /* dqintx011 */ self.tointegralx128("0.9", "1", .toNearestOrEven, .isInexact)
    /* dqintx012 */ self.tointegralx128("1", "1", .toNearestOrEven)
    /* dqintx013 */ self.tointegralx128("1.0", "1", .toNearestOrEven)
    /* dqintx014 */ self.tointegralx128("1.1", "1", .toNearestOrEven, .isInexact)
    /* dqintx015 */ self.tointegralx128("1.2", "1", .toNearestOrEven, .isInexact)
    /* dqintx016 */ self.tointegralx128("1.3", "1", .toNearestOrEven, .isInexact)
    /* dqintx017 */ self.tointegralx128("1.4", "1", .toNearestOrEven, .isInexact)
    /* dqintx018 */ self.tointegralx128("1.5", "2", .toNearestOrEven, .isInexact)
    /* dqintx019 */ self.tointegralx128("1.6", "2", .toNearestOrEven, .isInexact)
    /* dqintx020 */ self.tointegralx128("1.7", "2", .toNearestOrEven, .isInexact)
    /* dqintx021 */ self.tointegralx128("1.8", "2", .toNearestOrEven, .isInexact)
    /* dqintx022 */ self.tointegralx128("1.9", "2", .toNearestOrEven, .isInexact)
    /* dqintx031 */ self.tointegralx128("-0", "-0", .toNearestOrEven)
    /* dqintx032 */ self.tointegralx128("-0.0", "-0", .toNearestOrEven)
    /* dqintx033 */ self.tointegralx128("-0.1", "-0", .toNearestOrEven, .isInexact)
    /* dqintx034 */ self.tointegralx128("-0.2", "-0", .toNearestOrEven, .isInexact)
    /* dqintx035 */ self.tointegralx128("-0.3", "-0", .toNearestOrEven, .isInexact)
    /* dqintx036 */ self.tointegralx128("-0.4", "-0", .toNearestOrEven, .isInexact)
    /* dqintx037 */ self.tointegralx128("-0.5", "-0", .toNearestOrEven, .isInexact)
    /* dqintx038 */ self.tointegralx128("-0.6", "-1", .toNearestOrEven, .isInexact)
    /* dqintx039 */ self.tointegralx128("-0.7", "-1", .toNearestOrEven, .isInexact)
    /* dqintx040 */ self.tointegralx128("-0.8", "-1", .toNearestOrEven, .isInexact)
    /* dqintx041 */ self.tointegralx128("-0.9", "-1", .toNearestOrEven, .isInexact)
    /* dqintx042 */ self.tointegralx128("-1", "-1", .toNearestOrEven)
    /* dqintx043 */ self.tointegralx128("-1.0", "-1", .toNearestOrEven)
    /* dqintx044 */ self.tointegralx128("-1.1", "-1", .toNearestOrEven, .isInexact)
    /* dqintx045 */ self.tointegralx128("-1.2", "-1", .toNearestOrEven, .isInexact)
    /* dqintx046 */ self.tointegralx128("-1.3", "-1", .toNearestOrEven, .isInexact)
    /* dqintx047 */ self.tointegralx128("-1.4", "-1", .toNearestOrEven, .isInexact)
    /* dqintx048 */ self.tointegralx128("-1.5", "-2", .toNearestOrEven, .isInexact)
    /* dqintx049 */ self.tointegralx128("-1.6", "-2", .toNearestOrEven, .isInexact)
    /* dqintx050 */ self.tointegralx128("-1.7", "-2", .toNearestOrEven, .isInexact)
    /* dqintx051 */ self.tointegralx128("-1.8", "-2", .toNearestOrEven, .isInexact)
    /* dqintx052 */ self.tointegralx128("-1.9", "-2", .toNearestOrEven, .isInexact)
    /* dqintx053 */ self.tointegralx128("10E+60", "1.0E+61", .toNearestOrEven)
    /* dqintx054 */ self.tointegralx128("-10E+60", "-1.0E+61", .toNearestOrEven)
    /* dqintx060 */ self.tointegralx128("56267E-17", "0", .toNearestOrEven, .isInexact)
    /* dqintx061 */ self.tointegralx128("56267E-5", "1", .toNearestOrEven, .isInexact)
    /* dqintx062 */ self.tointegralx128("56267E-2", "563", .toNearestOrEven, .isInexact)
    /* dqintx063 */ self.tointegralx128("56267E-1", "5627", .toNearestOrEven, .isInexact)
    /* dqintx065 */ self.tointegralx128("56267E-0", "56267", .toNearestOrEven)
    /* dqintx066 */ self.tointegralx128("56267E+0", "56267", .toNearestOrEven)
    /* dqintx067 */ self.tointegralx128("56267E+1", "5.6267E+5", .toNearestOrEven)
    /* dqintx068 */ self.tointegralx128("56267E+9", "5.6267E+13", .toNearestOrEven)
    /* dqintx069 */ self.tointegralx128("56267E+10", "5.6267E+14", .toNearestOrEven)
    /* dqintx070 */ self.tointegralx128("56267E+11", "5.6267E+15", .toNearestOrEven)
    /* dqintx071 */ self.tointegralx128("56267E+12", "5.6267E+16", .toNearestOrEven)
    /* dqintx072 */ self.tointegralx128("56267E+13", "5.6267E+17", .toNearestOrEven)
    /* dqintx073 */ self.tointegralx128("1.23E+96", "1.23E+96", .toNearestOrEven)
    /* dqintx074 */ self.tointegralx128("1.23E+6144", "#47ffd300000000000000000000000000", .toNearestOrEven)
    /* dqintx080 */ self.tointegralx128("-56267E-10", "-0", .toNearestOrEven, .isInexact)
    /* dqintx081 */ self.tointegralx128("-56267E-5", "-1", .toNearestOrEven, .isInexact)
    /* dqintx082 */ self.tointegralx128("-56267E-2", "-563", .toNearestOrEven, .isInexact)
    /* dqintx083 */ self.tointegralx128("-56267E-1", "-5627", .toNearestOrEven, .isInexact)
    /* dqintx085 */ self.tointegralx128("-56267E-0", "-56267", .toNearestOrEven)
    /* dqintx086 */ self.tointegralx128("-56267E+0", "-56267", .toNearestOrEven)
    /* dqintx087 */ self.tointegralx128("-56267E+1", "-5.6267E+5", .toNearestOrEven)
    /* dqintx088 */ self.tointegralx128("-56267E+9", "-5.6267E+13", .toNearestOrEven)
    /* dqintx089 */ self.tointegralx128("-56267E+10", "-5.6267E+14", .toNearestOrEven)
    /* dqintx090 */ self.tointegralx128("-56267E+11", "-5.6267E+15", .toNearestOrEven)
    /* dqintx091 */ self.tointegralx128("-56267E+12", "-5.6267E+16", .toNearestOrEven)
    /* dqintx092 */ self.tointegralx128("-56267E+13", "-5.6267E+17", .toNearestOrEven)
    /* dqintx093 */ self.tointegralx128("-1.23E+96", "-1.23E+96", .toNearestOrEven)
    /* dqintx094 */ self.tointegralx128("-1.23E+6144", "#c7ffd300000000000000000000000000", .toNearestOrEven)
    /* dqintx100 */ self.tointegralx128("1E-299", "0", .toNearestOrEven, .isInexact)
    /* dqintx101 */ self.tointegralx128("0.1E-299", "0", .toNearestOrEven, .isInexact)
    /* dqintx102 */ self.tointegralx128("0.01E-299", "0", .toNearestOrEven, .isInexact)
    /* dqintx103 */ self.tointegralx128("0E-299", "0", .toNearestOrEven)
    /* dqintx120 */ self.tointegralx128("Inf", "Infinity", .toNearestOrEven)
    /* dqintx121 */ self.tointegralx128("-Inf", "-Infinity", .toNearestOrEven)
    /* dqintx122 */ self.tointegralx128("NaN", "NaN", .toNearestOrEven)
    /* dqintx123 */ self.tointegralx128("sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqintx124 */ self.tointegralx128("0", "0", .toNearestOrEven)
    /* dqintx125 */ self.tointegralx128("-0", "-0", .toNearestOrEven)
    /* dqintx126 */ self.tointegralx128("0.000", "0", .toNearestOrEven)
    /* dqintx127 */ self.tointegralx128("0.00", "0", .toNearestOrEven)
    /* dqintx128 */ self.tointegralx128("0.0", "0", .toNearestOrEven)
    /* dqintx129 */ self.tointegralx128("0", "0", .toNearestOrEven)
    /* dqintx130 */ self.tointegralx128("0E-3", "0", .toNearestOrEven)
    /* dqintx131 */ self.tointegralx128("0E-2", "0", .toNearestOrEven)
    /* dqintx132 */ self.tointegralx128("0E-1", "0", .toNearestOrEven)
    /* dqintx133 */ self.tointegralx128("0E-0", "0", .toNearestOrEven)
    /* dqintx134 */ self.tointegralx128("0E+1", "0E+1", .toNearestOrEven)
    /* dqintx135 */ self.tointegralx128("0E+2", "0E+2", .toNearestOrEven)
    /* dqintx136 */ self.tointegralx128("0E+3", "0E+3", .toNearestOrEven)
    /* dqintx137 */ self.tointegralx128("0E+4", "0E+4", .toNearestOrEven)
    /* dqintx138 */ self.tointegralx128("0E+5", "0E+5", .toNearestOrEven)
    /* dqintx139 */ self.tointegralx128("-0.000", "-0", .toNearestOrEven)
    /* dqintx140 */ self.tointegralx128("-0.00", "-0", .toNearestOrEven)
    /* dqintx141 */ self.tointegralx128("-0.0", "-0", .toNearestOrEven)
    /* dqintx142 */ self.tointegralx128("-0", "-0", .toNearestOrEven)
    /* dqintx143 */ self.tointegralx128("-0E-3", "-0", .toNearestOrEven)
    /* dqintx144 */ self.tointegralx128("-0E-2", "-0", .toNearestOrEven)
    /* dqintx145 */ self.tointegralx128("-0E-1", "-0", .toNearestOrEven)
    /* dqintx146 */ self.tointegralx128("-0E-0", "-0", .toNearestOrEven)
    /* dqintx147 */ self.tointegralx128("-0E+1", "-0E+1", .toNearestOrEven)
    /* dqintx148 */ self.tointegralx128("-0E+2", "-0E+2", .toNearestOrEven)
    /* dqintx149 */ self.tointegralx128("-0E+3", "-0E+3", .toNearestOrEven)
    /* dqintx150 */ self.tointegralx128("-0E+4", "-0E+4", .toNearestOrEven)
    /* dqintx151 */ self.tointegralx128("-0E+5", "-0E+5", .toNearestOrEven)
    /* dqintx152 */ self.tointegralx128("NaN(0x328)", "NaN(0x328)", .toNearestOrEven)
    /* dqintx153 */ self.tointegralx128("sNaN(0x50)", "NaN(0x50)", .toNearestOrEven, .isInvalidOperation)
    /* dqintx154 */ self.tointegralx128("-NaN(0x328)", "-NaN(0x328)", .toNearestOrEven)
    /* dqintx155 */ self.tointegralx128("-sNaN(0x50)", "-NaN(0x50)", .toNearestOrEven, .isInvalidOperation)
    /* dqintx156 */ self.tointegralx128("-NaN", "-NaN", .toNearestOrEven)
    /* dqintx157 */ self.tointegralx128("-sNaN", "-NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqintx200 */ self.tointegralx128("2.1", "2", .toNearestOrAwayFromZero, .isInexact)
    /* dqintx201 */ self.tointegralx128("100", "100", .toNearestOrAwayFromZero)
    /* dqintx202 */ self.tointegralx128("100.0", "100", .toNearestOrAwayFromZero)
    /* dqintx203 */ self.tointegralx128("101.5", "102", .toNearestOrAwayFromZero, .isInexact)
    /* dqintx204 */ self.tointegralx128("-101.5", "-102", .toNearestOrAwayFromZero, .isInexact)
    /* dqintx205 */ self.tointegralx128("10E+5", "1.0E+6", .toNearestOrAwayFromZero)
    /* dqintx206 */ self.tointegralx128("7.89E+77", "7.89E+77", .toNearestOrAwayFromZero)
    /* dqintx207 */ self.tointegralx128("-Inf", "-Infinity", .toNearestOrAwayFromZero)
    /* dqintx210 */ self.tointegralx128("55.5", "56", .toNearestOrEven, .isInexact)
    /* dqintx211 */ self.tointegralx128("56.5", "56", .toNearestOrEven, .isInexact)
    /* dqintx212 */ self.tointegralx128("57.5", "58", .toNearestOrEven, .isInexact)
    /* dqintx213 */ self.tointegralx128("-55.5", "-56", .toNearestOrEven, .isInexact)
    /* dqintx214 */ self.tointegralx128("-56.5", "-56", .toNearestOrEven, .isInexact)
    /* dqintx215 */ self.tointegralx128("-57.5", "-58", .toNearestOrEven, .isInexact)
    /* dqintx220 */ self.tointegralx128("55.5", "56", .toNearestOrAwayFromZero, .isInexact)
    /* dqintx221 */ self.tointegralx128("56.5", "57", .toNearestOrAwayFromZero, .isInexact)
    /* dqintx222 */ self.tointegralx128("57.5", "58", .toNearestOrAwayFromZero, .isInexact)
    /* dqintx223 */ self.tointegralx128("-55.5", "-56", .toNearestOrAwayFromZero, .isInexact)
    /* dqintx224 */ self.tointegralx128("-56.5", "-57", .toNearestOrAwayFromZero, .isInexact)
    /* dqintx225 */ self.tointegralx128("-57.5", "-58", .toNearestOrAwayFromZero, .isInexact)
    /* dqintx250 */ self.tointegralx128("55.7", "55", .towardZero, .isInexact)
    /* dqintx251 */ self.tointegralx128("56.7", "56", .towardZero, .isInexact)
    /* dqintx252 */ self.tointegralx128("57.7", "57", .towardZero, .isInexact)
    /* dqintx253 */ self.tointegralx128("-55.7", "-55", .towardZero, .isInexact)
    /* dqintx254 */ self.tointegralx128("-56.7", "-56", .towardZero, .isInexact)
    /* dqintx255 */ self.tointegralx128("-57.7", "-57", .towardZero, .isInexact)
    /* dqintx260 */ self.tointegralx128("55.3", "56", .up, .isInexact)
    /* dqintx261 */ self.tointegralx128("56.3", "57", .up, .isInexact)
    /* dqintx262 */ self.tointegralx128("57.3", "58", .up, .isInexact)
    /* dqintx263 */ self.tointegralx128("-55.3", "-55", .up, .isInexact)
    /* dqintx264 */ self.tointegralx128("-56.3", "-56", .up, .isInexact)
    /* dqintx265 */ self.tointegralx128("-57.3", "-57", .up, .isInexact)
    /* dqintx270 */ self.tointegralx128("55.7", "55", .down, .isInexact)
    /* dqintx271 */ self.tointegralx128("56.7", "56", .down, .isInexact)
    /* dqintx272 */ self.tointegralx128("57.7", "57", .down, .isInexact)
    /* dqintx273 */ self.tointegralx128("-55.7", "-56", .down, .isInexact)
    /* dqintx274 */ self.tointegralx128("-56.7", "-57", .down, .isInexact)
    /* dqintx275 */ self.tointegralx128("-57.7", "-58", .down, .isInexact)
    /* dqintx300 */ self.tointegralx128("-2147483646", "-2147483646", .down)
    /* dqintx301 */ self.tointegralx128("-2147483647", "-2147483647", .down)
    /* dqintx302 */ self.tointegralx128("-2147483648", "-2147483648", .down)
    /* dqintx303 */ self.tointegralx128("-2147483649", "-2147483649", .down)
    /* dqintx304 */ self.tointegralx128("2147483646", "2147483646", .down)
    /* dqintx305 */ self.tointegralx128("2147483647", "2147483647", .down)
    /* dqintx306 */ self.tointegralx128("2147483648", "2147483648", .down)
    /* dqintx307 */ self.tointegralx128("2147483649", "2147483649", .down)
    /* dqintx308 */ self.tointegralx128("4294967294", "4294967294", .down)
    /* dqintx309 */ self.tointegralx128("4294967295", "4294967295", .down)
    /* dqintx310 */ self.tointegralx128("4294967296", "4294967296", .down)
    /* dqintx311 */ self.tointegralx128("4294967297", "4294967297", .down)
  }

  private func tointegralx128(
    _ _arg0: String,
    _ _expected: String,
    _ rounding: DecimalFloatingPointRoundingRule,
    _ _expectedStatus: DecimalStatus? = nil,
    file: StaticString = #file,
    line: UInt = #line
  ) {
    guard let arg0 = self.parseDecimal128(_arg0, file, line) else { return }
    guard let expected = self.parseDecimal128(_expected, file, line) else { return }
    let expectedStatus = _expectedStatus ?? DecimalStatus()

    var status = DecimalStatus()
    let result = arg0.rounded(rounding, status: &status)
    self.assertEqual(result, expected, file, line)
    self.assertStatus(status, expectedStatus, file, line)
  }
}
