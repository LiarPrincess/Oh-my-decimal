// =============================================================================
// Automatically generated. DO NOT EDIT!
// To regenerate: make gen
// =============================================================================

import XCTest
@testable import Decimal

class SpeleotroveMinMaxTests: XCTestCase, SpeleotroveMixin {

  // MARK: - Max

  func test_max64() {
    /* ddmax001 */ self.max64("-2", "-2", "-2", .toNearestOrEven)
    /* ddmax002 */ self.max64("-2", "-1", "-1", .toNearestOrEven)
    /* ddmax003 */ self.max64("-2", "0", "0", .toNearestOrEven)
    /* ddmax004 */ self.max64("-2", "1", "1", .toNearestOrEven)
    /* ddmax005 */ self.max64("-2", "2", "2", .toNearestOrEven)
    /* ddmax006 */ self.max64("-1", "-2", "-1", .toNearestOrEven)
    /* ddmax007 */ self.max64("-1", "-1", "-1", .toNearestOrEven)
    /* ddmax008 */ self.max64("-1", "0", "0", .toNearestOrEven)
    /* ddmax009 */ self.max64("-1", "1", "1", .toNearestOrEven)
    /* ddmax010 */ self.max64("-1", "2", "2", .toNearestOrEven)
    /* ddmax011 */ self.max64("0", "-2", "0", .toNearestOrEven)
    /* ddmax012 */ self.max64("0", "-1", "0", .toNearestOrEven)
    /* ddmax013 */ self.max64("0", "0", "0", .toNearestOrEven)
    /* ddmax014 */ self.max64("0", "1", "1", .toNearestOrEven)
    /* ddmax015 */ self.max64("0", "2", "2", .toNearestOrEven)
    /* ddmax016 */ self.max64("1", "-2", "1", .toNearestOrEven)
    /* ddmax017 */ self.max64("1", "-1", "1", .toNearestOrEven)
    /* ddmax018 */ self.max64("1", "0", "1", .toNearestOrEven)
    /* ddmax019 */ self.max64("1", "1", "1", .toNearestOrEven)
    /* ddmax020 */ self.max64("1", "2", "2", .toNearestOrEven)
    /* ddmax021 */ self.max64("2", "-2", "2", .toNearestOrEven)
    /* ddmax022 */ self.max64("2", "-1", "2", .toNearestOrEven)
    /* ddmax023 */ self.max64("2", "0", "2", .toNearestOrEven)
    /* ddmax025 */ self.max64("2", "1", "2", .toNearestOrEven)
    /* ddmax026 */ self.max64("2", "2", "2", .toNearestOrEven)
    /* ddmax030 */ self.max64("0", "0", "0", .toNearestOrEven)
    /* ddmax031 */ self.max64("0", "-0", "0", .toNearestOrEven)
    /* ddmax032 */ self.max64("0", "-0.0", "0", .toNearestOrEven)
    /* ddmax033 */ self.max64("0", "0.0", "0", .toNearestOrEven)
    /* ddmax034 */ self.max64("-0", "0", "0", .toNearestOrEven)
    /* ddmax035 */ self.max64("-0", "-0", "-0", .toNearestOrEven)
    /* ddmax036 */ self.max64("-0", "-0.0", "-0.0", .toNearestOrEven)
    /* ddmax037 */ self.max64("-0", "0.0", "0.0", .toNearestOrEven)
    /* ddmax038 */ self.max64("0.0", "0", "0", .toNearestOrEven)
    /* ddmax039 */ self.max64("0.0", "-0", "0.0", .toNearestOrEven)
    /* ddmax040 */ self.max64("0.0", "-0.0", "0.0", .toNearestOrEven)
    /* ddmax041 */ self.max64("0.0", "0.0", "0.0", .toNearestOrEven)
    /* ddmax042 */ self.max64("-0.0", "0", "0", .toNearestOrEven)
    /* ddmax043 */ self.max64("-0.0", "-0", "-0.0", .toNearestOrEven)
    /* ddmax044 */ self.max64("-0.0", "-0.0", "-0.0", .toNearestOrEven)
    /* ddmax045 */ self.max64("-0.0", "0.0", "0.0", .toNearestOrEven)
    /* ddmax050 */ self.max64("-0E1", "0E1", "0E+1", .toNearestOrEven)
    /* ddmax051 */ self.max64("-0E2", "0E2", "0E+2", .toNearestOrEven)
    /* ddmax052 */ self.max64("-0E2", "0E1", "0E+1", .toNearestOrEven)
    /* ddmax053 */ self.max64("-0E1", "0E2", "0E+2", .toNearestOrEven)
    /* ddmax054 */ self.max64("0E1", "-0E1", "0E+1", .toNearestOrEven)
    /* ddmax055 */ self.max64("0E2", "-0E2", "0E+2", .toNearestOrEven)
    /* ddmax056 */ self.max64("0E2", "-0E1", "0E+2", .toNearestOrEven)
    /* ddmax057 */ self.max64("0E1", "-0E2", "0E+1", .toNearestOrEven)
    /* ddmax058 */ self.max64("0E1", "0E1", "0E+1", .toNearestOrEven)
    /* ddmax059 */ self.max64("0E2", "0E2", "0E+2", .toNearestOrEven)
    /* ddmax060 */ self.max64("0E2", "0E1", "0E+2", .toNearestOrEven)
    /* ddmax061 */ self.max64("0E1", "0E2", "0E+2", .toNearestOrEven)
    /* ddmax062 */ self.max64("-0E1", "-0E1", "-0E+1", .toNearestOrEven)
    /* ddmax063 */ self.max64("-0E2", "-0E2", "-0E+2", .toNearestOrEven)
    /* ddmax064 */ self.max64("-0E2", "-0E1", "-0E+1", .toNearestOrEven)
    /* ddmax065 */ self.max64("-0E1", "-0E2", "-0E+1", .toNearestOrEven)
    /* ddmax090 */ self.max64("Inf", "-Inf", "Infinity", .toNearestOrEven)
    /* ddmax091 */ self.max64("Inf", "-1000", "Infinity", .toNearestOrEven)
    /* ddmax092 */ self.max64("Inf", "-1", "Infinity", .toNearestOrEven)
    /* ddmax093 */ self.max64("Inf", "-0", "Infinity", .toNearestOrEven)
    /* ddmax094 */ self.max64("Inf", "0", "Infinity", .toNearestOrEven)
    /* ddmax095 */ self.max64("Inf", "1", "Infinity", .toNearestOrEven)
    /* ddmax096 */ self.max64("Inf", "1000", "Infinity", .toNearestOrEven)
    /* ddmax097 */ self.max64("Inf", "Inf", "Infinity", .toNearestOrEven)
    /* ddmax098 */ self.max64("-1000", "Inf", "Infinity", .toNearestOrEven)
    /* ddmax099 */ self.max64("-Inf", "Inf", "Infinity", .toNearestOrEven)
    /* ddmax100 */ self.max64("-1", "Inf", "Infinity", .toNearestOrEven)
    /* ddmax101 */ self.max64("-0", "Inf", "Infinity", .toNearestOrEven)
    /* ddmax102 */ self.max64("0", "Inf", "Infinity", .toNearestOrEven)
    /* ddmax103 */ self.max64("1", "Inf", "Infinity", .toNearestOrEven)
    /* ddmax104 */ self.max64("1000", "Inf", "Infinity", .toNearestOrEven)
    /* ddmax105 */ self.max64("Inf", "Inf", "Infinity", .toNearestOrEven)
    /* ddmax120 */ self.max64("-Inf", "-Inf", "-Infinity", .toNearestOrEven)
    /* ddmax121 */ self.max64("-Inf", "-1000", "-1000", .toNearestOrEven)
    /* ddmax122 */ self.max64("-Inf", "-1", "-1", .toNearestOrEven)
    /* ddmax123 */ self.max64("-Inf", "-0", "-0", .toNearestOrEven)
    /* ddmax124 */ self.max64("-Inf", "0", "0", .toNearestOrEven)
    /* ddmax125 */ self.max64("-Inf", "1", "1", .toNearestOrEven)
    /* ddmax126 */ self.max64("-Inf", "1000", "1000", .toNearestOrEven)
    /* ddmax127 */ self.max64("-Inf", "Inf", "Infinity", .toNearestOrEven)
    /* ddmax128 */ self.max64("-Inf", "-Inf", "-Infinity", .toNearestOrEven)
    /* ddmax129 */ self.max64("-1000", "-Inf", "-1000", .toNearestOrEven)
    /* ddmax130 */ self.max64("-1", "-Inf", "-1", .toNearestOrEven)
    /* ddmax131 */ self.max64("-0", "-Inf", "-0", .toNearestOrEven)
    /* ddmax132 */ self.max64("0", "-Inf", "0", .toNearestOrEven)
    /* ddmax133 */ self.max64("1", "-Inf", "1", .toNearestOrEven)
    /* ddmax134 */ self.max64("1000", "-Inf", "1000", .toNearestOrEven)
    /* ddmax135 */ self.max64("Inf", "-Inf", "Infinity", .toNearestOrEven)
    /* ddmax141 */ self.max64("NaN", "-Inf", "-Infinity", .toNearestOrEven)
    /* ddmax142 */ self.max64("NaN", "-1000", "-1000", .toNearestOrEven)
    /* ddmax143 */ self.max64("NaN", "-1", "-1", .toNearestOrEven)
    /* ddmax144 */ self.max64("NaN", "-0", "-0", .toNearestOrEven)
    /* ddmax145 */ self.max64("NaN", "0", "0", .toNearestOrEven)
    /* ddmax146 */ self.max64("NaN", "1", "1", .toNearestOrEven)
    /* ddmax147 */ self.max64("NaN", "1000", "1000", .toNearestOrEven)
    /* ddmax148 */ self.max64("NaN", "Inf", "Infinity", .toNearestOrEven)
    /* ddmax149 */ self.max64("NaN", "NaN", "NaN", .toNearestOrEven)
    /* ddmax150 */ self.max64("-Inf", "NaN", "-Infinity", .toNearestOrEven)
    /* ddmax151 */ self.max64("-1000", "NaN", "-1000", .toNearestOrEven)
    /* ddmax152 */ self.max64("-1", "NaN", "-1", .toNearestOrEven)
    /* ddmax153 */ self.max64("-0", "NaN", "-0", .toNearestOrEven)
    /* ddmax154 */ self.max64("0", "NaN", "0", .toNearestOrEven)
    /* ddmax155 */ self.max64("1", "NaN", "1", .toNearestOrEven)
    /* ddmax156 */ self.max64("1000", "NaN", "1000", .toNearestOrEven)
    /* ddmax157 */ self.max64("Inf", "NaN", "Infinity", .toNearestOrEven)
    /* ddmax161 */ self.max64("sNaN", "-Inf", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmax162 */ self.max64("sNaN", "-1000", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmax163 */ self.max64("sNaN", "-1", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmax164 */ self.max64("sNaN", "-0", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmax165 */ self.max64("sNaN", "0", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmax166 */ self.max64("sNaN", "1", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmax167 */ self.max64("sNaN", "1000", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmax168 */ self.max64("sNaN", "NaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmax169 */ self.max64("sNaN", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmax170 */ self.max64("NaN", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmax171 */ self.max64("-Inf", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmax172 */ self.max64("-1000", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmax173 */ self.max64("-1", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmax174 */ self.max64("-0", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmax175 */ self.max64("0", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmax176 */ self.max64("1", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmax177 */ self.max64("1000", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmax178 */ self.max64("Inf", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmax179 */ self.max64("NaN", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmax181 */ self.max64("NaN(0x9)", "-Inf", "-Infinity", .toNearestOrEven)
    /* ddmax182 */ self.max64("NaN(0x8)", "9", "9", .toNearestOrEven)
    /* ddmax183 */ self.max64("-NaN(0x7)", "Inf", "Infinity", .toNearestOrEven)
    /* ddmax184 */ self.max64("-NaN(0x1)", "NaN(0xb)", "-NaN(0x1)", .toNearestOrEven)
    /* ddmax185 */ self.max64("NaN(0x2)", "NaN(0xc)", "NaN(0x2)", .toNearestOrEven)
    /* ddmax186 */ self.max64("-NaN(0xd)", "-NaN(0x7)", "-NaN(0xd)", .toNearestOrEven)
    /* ddmax187 */ self.max64("NaN(0xe)", "-NaN(0x5)", "NaN(0xe)", .toNearestOrEven)
    /* ddmax188 */ self.max64("-Inf", "NaN(0x4)", "-Infinity", .toNearestOrEven)
    /* ddmax189 */ self.max64("-9", "-NaN(0x3)", "-9", .toNearestOrEven)
    /* ddmax190 */ self.max64("Inf", "NaN(0x2)", "Infinity", .toNearestOrEven)
    /* ddmax191 */ self.max64("sNaN(0x63)", "-Inf", "NaN(0x63)", .toNearestOrEven, .isInvalidOperation)
    /* ddmax192 */ self.max64("sNaN(0x62)", "-1", "NaN(0x62)", .toNearestOrEven, .isInvalidOperation)
    /* ddmax193 */ self.max64("-sNaN(0x61)", "NaN", "-NaN(0x61)", .toNearestOrEven, .isInvalidOperation)
    /* ddmax194 */ self.max64("sNaN(0x60)", "sNaN(0x5e)", "NaN(0x60)", .toNearestOrEven, .isInvalidOperation)
    /* ddmax195 */ self.max64("NaN(0x5f)", "sNaN(0x5d)", "NaN(0x5d)", .toNearestOrEven, .isInvalidOperation)
    /* ddmax196 */ self.max64("-Inf", "sNaN(0x5c)", "NaN(0x5c)", .toNearestOrEven, .isInvalidOperation)
    /* ddmax197 */ self.max64("0", "sNaN(0x5b)", "NaN(0x5b)", .toNearestOrEven, .isInvalidOperation)
    /* ddmax198 */ self.max64("Inf", "-sNaN(0x5a)", "-NaN(0x5a)", .toNearestOrEven, .isInvalidOperation)
    /* ddmax199 */ self.max64("NaN", "sNaN(0x59)", "NaN(0x59)", .toNearestOrEven, .isInvalidOperation)
    /* ddmax221 */ self.max64("12345678000", "1", "12345678000", .toNearestOrEven)
    /* ddmax222 */ self.max64("1", "12345678000", "12345678000", .toNearestOrEven)
    /* ddmax223 */ self.max64("1234567800", "1", "1234567800", .toNearestOrEven)
    /* ddmax224 */ self.max64("1", "1234567800", "1234567800", .toNearestOrEven)
    /* ddmax225 */ self.max64("1234567890", "1", "1234567890", .toNearestOrEven)
    /* ddmax226 */ self.max64("1", "1234567890", "1234567890", .toNearestOrEven)
    /* ddmax227 */ self.max64("1234567891", "1", "1234567891", .toNearestOrEven)
    /* ddmax228 */ self.max64("1", "1234567891", "1234567891", .toNearestOrEven)
    /* ddmax229 */ self.max64("12345678901", "1", "12345678901", .toNearestOrEven)
    /* ddmax230 */ self.max64("1", "12345678901", "12345678901", .toNearestOrEven)
    /* ddmax231 */ self.max64("1234567896", "1", "1234567896", .toNearestOrEven)
    /* ddmax232 */ self.max64("1", "1234567896", "1234567896", .toNearestOrEven)
    /* ddmax233 */ self.max64("-1234567891", "1", "1", .toNearestOrEven)
    /* ddmax234 */ self.max64("1", "-1234567891", "1", .toNearestOrEven)
    /* ddmax235 */ self.max64("-12345678901", "1", "1", .toNearestOrEven)
    /* ddmax236 */ self.max64("1", "-12345678901", "1", .toNearestOrEven)
    /* ddmax237 */ self.max64("-1234567896", "1", "1", .toNearestOrEven)
    /* ddmax238 */ self.max64("1", "-1234567896", "1", .toNearestOrEven)
    /* ddmax280 */ self.max64("3", "2", "3", .toNearestOrEven)
    /* ddmax281 */ self.max64("-10", "3", "3", .toNearestOrEven)
    /* ddmax282 */ self.max64("1.0", "1", "1", .toNearestOrEven)
    /* ddmax283 */ self.max64("1", "1.0", "1", .toNearestOrEven)
    /* ddmax284 */ self.max64("7", "NaN", "7", .toNearestOrEven)
    /* ddmax401 */ self.max64("Inf", "1.1", "Infinity", .toNearestOrEven)
    /* ddmax402 */ self.max64("1.1", "1", "1.1", .toNearestOrEven)
    /* ddmax403 */ self.max64("1", "1.0", "1", .toNearestOrEven)
    /* ddmax404 */ self.max64("1.0", "0.1", "1.0", .toNearestOrEven)
    /* ddmax405 */ self.max64("0.1", "0.10", "0.1", .toNearestOrEven)
    /* ddmax406 */ self.max64("0.10", "0.100", "0.10", .toNearestOrEven)
    /* ddmax407 */ self.max64("0.10", "0", "0.10", .toNearestOrEven)
    /* ddmax408 */ self.max64("0", "0.0", "0", .toNearestOrEven)
    /* ddmax409 */ self.max64("0.0", "-0", "0.0", .toNearestOrEven)
    /* ddmax410 */ self.max64("0.0", "-0.0", "0.0", .toNearestOrEven)
    /* ddmax411 */ self.max64("0.00", "-0.0", "0.00", .toNearestOrEven)
    /* ddmax412 */ self.max64("0.0", "-0.00", "0.0", .toNearestOrEven)
    /* ddmax413 */ self.max64("0", "-0.0", "0", .toNearestOrEven)
    /* ddmax414 */ self.max64("0", "-0", "0", .toNearestOrEven)
    /* ddmax415 */ self.max64("-0.0", "-0", "-0.0", .toNearestOrEven)
    /* ddmax416 */ self.max64("-0", "-0.100", "-0", .toNearestOrEven)
    /* ddmax417 */ self.max64("-0.100", "-0.10", "-0.100", .toNearestOrEven)
    /* ddmax418 */ self.max64("-0.10", "-0.1", "-0.10", .toNearestOrEven)
    /* ddmax419 */ self.max64("-0.1", "-1.0", "-0.1", .toNearestOrEven)
    /* ddmax420 */ self.max64("-1.0", "-1", "-1.0", .toNearestOrEven)
    /* ddmax421 */ self.max64("-1", "-1.1", "-1", .toNearestOrEven)
    /* ddmax423 */ self.max64("-1.1", "-Inf", "-1.1", .toNearestOrEven)
    /* ddmax431 */ self.max64("1.1", "Inf", "Infinity", .toNearestOrEven)
    /* ddmax432 */ self.max64("1", "1.1", "1.1", .toNearestOrEven)
    /* ddmax433 */ self.max64("1.0", "1", "1", .toNearestOrEven)
    /* ddmax434 */ self.max64("0.1", "1.0", "1.0", .toNearestOrEven)
    /* ddmax435 */ self.max64("0.10", "0.1", "0.1", .toNearestOrEven)
    /* ddmax436 */ self.max64("0.100", "0.10", "0.10", .toNearestOrEven)
    /* ddmax437 */ self.max64("0", "0.10", "0.10", .toNearestOrEven)
    /* ddmax438 */ self.max64("0.0", "0", "0", .toNearestOrEven)
    /* ddmax439 */ self.max64("-0", "0.0", "0.0", .toNearestOrEven)
    /* ddmax440 */ self.max64("-0.0", "0.0", "0.0", .toNearestOrEven)
    /* ddmax441 */ self.max64("-0.0", "0.00", "0.00", .toNearestOrEven)
    /* ddmax442 */ self.max64("-0.00", "0.0", "0.0", .toNearestOrEven)
    /* ddmax443 */ self.max64("-0.0", "0", "0", .toNearestOrEven)
    /* ddmax444 */ self.max64("-0", "0", "0", .toNearestOrEven)
    /* ddmax445 */ self.max64("-0", "-0.0", "-0.0", .toNearestOrEven)
    /* ddmax446 */ self.max64("-0.100", "-0", "-0", .toNearestOrEven)
    /* ddmax447 */ self.max64("-0.10", "-0.100", "-0.100", .toNearestOrEven)
    /* ddmax448 */ self.max64("-0.1", "-0.10", "-0.10", .toNearestOrEven)
    /* ddmax449 */ self.max64("-1.0", "-0.1", "-0.1", .toNearestOrEven)
    /* ddmax450 */ self.max64("-1", "-1.0", "-1.0", .toNearestOrEven)
    /* ddmax451 */ self.max64("-1.1", "-1", "-1", .toNearestOrEven)
    /* ddmax453 */ self.max64("-Inf", "-1.1", "-1.1", .toNearestOrEven)
    /* ddmax460 */ self.max64("1000", "1E+3", "1E+3", .toNearestOrEven)
    /* ddmax461 */ self.max64("1E+3", "1000", "1E+3", .toNearestOrEven)
    /* ddmax462 */ self.max64("1000", "-1E+3", "1000", .toNearestOrEven)
    /* ddmax463 */ self.max64("1E+3", "-1000", "1E+3", .toNearestOrEven)
    /* ddmax464 */ self.max64("-1000", "1E+3", "1E+3", .toNearestOrEven)
    /* ddmax465 */ self.max64("-1E+3", "1000", "1000", .toNearestOrEven)
    /* ddmax466 */ self.max64("-1000", "-1E+3", "-1000", .toNearestOrEven)
    /* ddmax467 */ self.max64("-1E+3", "-1000", "-1000", .toNearestOrEven)
    /* ddmax471 */ self.max64("1.0", "0.1", "1.0", .toNearestOrEven)
    /* ddmax472 */ self.max64("0.1", "1.0", "1.0", .toNearestOrEven)
    /* ddmax473 */ self.max64("10.0", "0.1", "10.0", .toNearestOrEven)
    /* ddmax474 */ self.max64("0.1", "10.0", "10.0", .toNearestOrEven)
    /* ddmax475 */ self.max64("100", "1.0", "100", .toNearestOrEven)
    /* ddmax476 */ self.max64("1.0", "100", "100", .toNearestOrEven)
    /* ddmax477 */ self.max64("1000", "10.0", "1000", .toNearestOrEven)
    /* ddmax478 */ self.max64("10.0", "1000", "1000", .toNearestOrEven)
    /* ddmax479 */ self.max64("10000", "100.0", "10000", .toNearestOrEven)
    /* ddmax480 */ self.max64("100.0", "10000", "10000", .toNearestOrEven)
    /* ddmax481 */ self.max64("100000", "1000.0", "100000", .toNearestOrEven)
    /* ddmax482 */ self.max64("1000.0", "100000", "100000", .toNearestOrEven)
    /* ddmax483 */ self.max64("1000000", "10000.0", "1000000", .toNearestOrEven)
    /* ddmax484 */ self.max64("10000.0", "1000000", "1000000", .toNearestOrEven)
    /* ddmax510 */ self.max64("1.00E-383", "0", "1.00E-383", .toNearestOrEven)
    /* ddmax511 */ self.max64("0.1E-383", "0", "1E-384", .toNearestOrEven)
    /* ddmax512 */ self.max64("0.10E-383", "0", "1.0E-384", .toNearestOrEven)
    /* ddmax513 */ self.max64("0.100E-383", "0", "1.00E-384", .toNearestOrEven)
    /* ddmax514 */ self.max64("0.01E-383", "0", "1E-385", .toNearestOrEven)
    /* ddmax515 */ self.max64("0.999E-383", "0", "9.99E-384", .toNearestOrEven)
    /* ddmax516 */ self.max64("0.099E-383", "0", "9.9E-385", .toNearestOrEven)
    /* ddmax517 */ self.max64("0.009E-383", "0", "9E-386", .toNearestOrEven)
    /* ddmax518 */ self.max64("0.001E-383", "0", "1E-386", .toNearestOrEven)
    /* ddmax519 */ self.max64("0.0009E-383", "0", "9E-387", .toNearestOrEven)
    /* ddmax520 */ self.max64("0.0001E-383", "0", "1E-387", .toNearestOrEven)
    /* ddmax530 */ self.max64("-1.00E-383", "0", "0", .toNearestOrEven)
    /* ddmax531 */ self.max64("-0.1E-383", "0", "0", .toNearestOrEven)
    /* ddmax532 */ self.max64("-0.10E-383", "0", "0", .toNearestOrEven)
    /* ddmax533 */ self.max64("-0.100E-383", "0", "0", .toNearestOrEven)
    /* ddmax534 */ self.max64("-0.01E-383", "0", "0", .toNearestOrEven)
    /* ddmax535 */ self.max64("-0.999E-383", "0", "0", .toNearestOrEven)
    /* ddmax536 */ self.max64("-0.099E-383", "0", "0", .toNearestOrEven)
    /* ddmax537 */ self.max64("-0.009E-383", "0", "0", .toNearestOrEven)
    /* ddmax538 */ self.max64("-0.001E-383", "0", "0", .toNearestOrEven)
    /* ddmax539 */ self.max64("-0.0009E-383", "0", "0", .toNearestOrEven)
    /* ddmax540 */ self.max64("-0.0001E-383", "0", "0", .toNearestOrEven)
  }

  private func max64(
    _ _arg0: String,
    _ _arg1: String,
    _ _expected: String,
    _ rounding: DecimalFloatingPointRoundingRule,
    _ _expectedStatus: DecimalStatus? = nil,
    file: StaticString = #file,
    line: UInt = #line
  ) {
    guard let arg0 = self.parseDecimal64(_arg0, file, line) else { return }
    guard let arg1 = self.parseDecimal64(_arg1, file, line) else { return }
    guard let expected = self.parseDecimal64(_expected, file, line) else { return }
    let expectedStatus = _expectedStatus ?? DecimalStatus()

    var status = DecimalStatus()
    let result = Decimal64.maximum(arg0, arg1, status: &status)
    let speleotroveResult = self.toSpeleotrove_max(arg0, arg1, result: result)
    self.assertEqual(speleotroveResult, expected, file, line)
    self.assertStatus(status, expectedStatus, file, line)
  }

  func test_max128() {
    /* dqmax001 */ self.max128("-2", "-2", "-2", .toNearestOrEven)
    /* dqmax002 */ self.max128("-2", "-1", "-1", .toNearestOrEven)
    /* dqmax003 */ self.max128("-2", "0", "0", .toNearestOrEven)
    /* dqmax004 */ self.max128("-2", "1", "1", .toNearestOrEven)
    /* dqmax005 */ self.max128("-2", "2", "2", .toNearestOrEven)
    /* dqmax006 */ self.max128("-1", "-2", "-1", .toNearestOrEven)
    /* dqmax007 */ self.max128("-1", "-1", "-1", .toNearestOrEven)
    /* dqmax008 */ self.max128("-1", "0", "0", .toNearestOrEven)
    /* dqmax009 */ self.max128("-1", "1", "1", .toNearestOrEven)
    /* dqmax010 */ self.max128("-1", "2", "2", .toNearestOrEven)
    /* dqmax011 */ self.max128("0", "-2", "0", .toNearestOrEven)
    /* dqmax012 */ self.max128("0", "-1", "0", .toNearestOrEven)
    /* dqmax013 */ self.max128("0", "0", "0", .toNearestOrEven)
    /* dqmax014 */ self.max128("0", "1", "1", .toNearestOrEven)
    /* dqmax015 */ self.max128("0", "2", "2", .toNearestOrEven)
    /* dqmax016 */ self.max128("1", "-2", "1", .toNearestOrEven)
    /* dqmax017 */ self.max128("1", "-1", "1", .toNearestOrEven)
    /* dqmax018 */ self.max128("1", "0", "1", .toNearestOrEven)
    /* dqmax019 */ self.max128("1", "1", "1", .toNearestOrEven)
    /* dqmax020 */ self.max128("1", "2", "2", .toNearestOrEven)
    /* dqmax021 */ self.max128("2", "-2", "2", .toNearestOrEven)
    /* dqmax022 */ self.max128("2", "-1", "2", .toNearestOrEven)
    /* dqmax023 */ self.max128("2", "0", "2", .toNearestOrEven)
    /* dqmax025 */ self.max128("2", "1", "2", .toNearestOrEven)
    /* dqmax026 */ self.max128("2", "2", "2", .toNearestOrEven)
    /* dqmax030 */ self.max128("0", "0", "0", .toNearestOrEven)
    /* dqmax031 */ self.max128("0", "-0", "0", .toNearestOrEven)
    /* dqmax032 */ self.max128("0", "-0.0", "0", .toNearestOrEven)
    /* dqmax033 */ self.max128("0", "0.0", "0", .toNearestOrEven)
    /* dqmax034 */ self.max128("-0", "0", "0", .toNearestOrEven)
    /* dqmax035 */ self.max128("-0", "-0", "-0", .toNearestOrEven)
    /* dqmax036 */ self.max128("-0", "-0.0", "-0.0", .toNearestOrEven)
    /* dqmax037 */ self.max128("-0", "0.0", "0.0", .toNearestOrEven)
    /* dqmax038 */ self.max128("0.0", "0", "0", .toNearestOrEven)
    /* dqmax039 */ self.max128("0.0", "-0", "0.0", .toNearestOrEven)
    /* dqmax040 */ self.max128("0.0", "-0.0", "0.0", .toNearestOrEven)
    /* dqmax041 */ self.max128("0.0", "0.0", "0.0", .toNearestOrEven)
    /* dqmax042 */ self.max128("-0.0", "0", "0", .toNearestOrEven)
    /* dqmax043 */ self.max128("-0.0", "-0", "-0.0", .toNearestOrEven)
    /* dqmax044 */ self.max128("-0.0", "-0.0", "-0.0", .toNearestOrEven)
    /* dqmax045 */ self.max128("-0.0", "0.0", "0.0", .toNearestOrEven)
    /* dqmax050 */ self.max128("-0E1", "0E1", "0E+1", .toNearestOrEven)
    /* dqmax051 */ self.max128("-0E2", "0E2", "0E+2", .toNearestOrEven)
    /* dqmax052 */ self.max128("-0E2", "0E1", "0E+1", .toNearestOrEven)
    /* dqmax053 */ self.max128("-0E1", "0E2", "0E+2", .toNearestOrEven)
    /* dqmax054 */ self.max128("0E1", "-0E1", "0E+1", .toNearestOrEven)
    /* dqmax055 */ self.max128("0E2", "-0E2", "0E+2", .toNearestOrEven)
    /* dqmax056 */ self.max128("0E2", "-0E1", "0E+2", .toNearestOrEven)
    /* dqmax057 */ self.max128("0E1", "-0E2", "0E+1", .toNearestOrEven)
    /* dqmax058 */ self.max128("0E1", "0E1", "0E+1", .toNearestOrEven)
    /* dqmax059 */ self.max128("0E2", "0E2", "0E+2", .toNearestOrEven)
    /* dqmax060 */ self.max128("0E2", "0E1", "0E+2", .toNearestOrEven)
    /* dqmax061 */ self.max128("0E1", "0E2", "0E+2", .toNearestOrEven)
    /* dqmax062 */ self.max128("-0E1", "-0E1", "-0E+1", .toNearestOrEven)
    /* dqmax063 */ self.max128("-0E2", "-0E2", "-0E+2", .toNearestOrEven)
    /* dqmax064 */ self.max128("-0E2", "-0E1", "-0E+1", .toNearestOrEven)
    /* dqmax065 */ self.max128("-0E1", "-0E2", "-0E+1", .toNearestOrEven)
    /* dqmax090 */ self.max128("Inf", "-Inf", "Infinity", .toNearestOrEven)
    /* dqmax091 */ self.max128("Inf", "-1000", "Infinity", .toNearestOrEven)
    /* dqmax092 */ self.max128("Inf", "-1", "Infinity", .toNearestOrEven)
    /* dqmax093 */ self.max128("Inf", "-0", "Infinity", .toNearestOrEven)
    /* dqmax094 */ self.max128("Inf", "0", "Infinity", .toNearestOrEven)
    /* dqmax095 */ self.max128("Inf", "1", "Infinity", .toNearestOrEven)
    /* dqmax096 */ self.max128("Inf", "1000", "Infinity", .toNearestOrEven)
    /* dqmax097 */ self.max128("Inf", "Inf", "Infinity", .toNearestOrEven)
    /* dqmax098 */ self.max128("-1000", "Inf", "Infinity", .toNearestOrEven)
    /* dqmax099 */ self.max128("-Inf", "Inf", "Infinity", .toNearestOrEven)
    /* dqmax100 */ self.max128("-1", "Inf", "Infinity", .toNearestOrEven)
    /* dqmax101 */ self.max128("-0", "Inf", "Infinity", .toNearestOrEven)
    /* dqmax102 */ self.max128("0", "Inf", "Infinity", .toNearestOrEven)
    /* dqmax103 */ self.max128("1", "Inf", "Infinity", .toNearestOrEven)
    /* dqmax104 */ self.max128("1000", "Inf", "Infinity", .toNearestOrEven)
    /* dqmax105 */ self.max128("Inf", "Inf", "Infinity", .toNearestOrEven)
    /* dqmax120 */ self.max128("-Inf", "-Inf", "-Infinity", .toNearestOrEven)
    /* dqmax121 */ self.max128("-Inf", "-1000", "-1000", .toNearestOrEven)
    /* dqmax122 */ self.max128("-Inf", "-1", "-1", .toNearestOrEven)
    /* dqmax123 */ self.max128("-Inf", "-0", "-0", .toNearestOrEven)
    /* dqmax124 */ self.max128("-Inf", "0", "0", .toNearestOrEven)
    /* dqmax125 */ self.max128("-Inf", "1", "1", .toNearestOrEven)
    /* dqmax126 */ self.max128("-Inf", "1000", "1000", .toNearestOrEven)
    /* dqmax127 */ self.max128("-Inf", "Inf", "Infinity", .toNearestOrEven)
    /* dqmax128 */ self.max128("-Inf", "-Inf", "-Infinity", .toNearestOrEven)
    /* dqmax129 */ self.max128("-1000", "-Inf", "-1000", .toNearestOrEven)
    /* dqmax130 */ self.max128("-1", "-Inf", "-1", .toNearestOrEven)
    /* dqmax131 */ self.max128("-0", "-Inf", "-0", .toNearestOrEven)
    /* dqmax132 */ self.max128("0", "-Inf", "0", .toNearestOrEven)
    /* dqmax133 */ self.max128("1", "-Inf", "1", .toNearestOrEven)
    /* dqmax134 */ self.max128("1000", "-Inf", "1000", .toNearestOrEven)
    /* dqmax135 */ self.max128("Inf", "-Inf", "Infinity", .toNearestOrEven)
    /* dqmax141 */ self.max128("NaN", "-Inf", "-Infinity", .toNearestOrEven)
    /* dqmax142 */ self.max128("NaN", "-1000", "-1000", .toNearestOrEven)
    /* dqmax143 */ self.max128("NaN", "-1", "-1", .toNearestOrEven)
    /* dqmax144 */ self.max128("NaN", "-0", "-0", .toNearestOrEven)
    /* dqmax145 */ self.max128("NaN", "0", "0", .toNearestOrEven)
    /* dqmax146 */ self.max128("NaN", "1", "1", .toNearestOrEven)
    /* dqmax147 */ self.max128("NaN", "1000", "1000", .toNearestOrEven)
    /* dqmax148 */ self.max128("NaN", "Inf", "Infinity", .toNearestOrEven)
    /* dqmax149 */ self.max128("NaN", "NaN", "NaN", .toNearestOrEven)
    /* dqmax150 */ self.max128("-Inf", "NaN", "-Infinity", .toNearestOrEven)
    /* dqmax151 */ self.max128("-1000", "NaN", "-1000", .toNearestOrEven)
    /* dqmax152 */ self.max128("-1", "NaN", "-1", .toNearestOrEven)
    /* dqmax153 */ self.max128("-0", "NaN", "-0", .toNearestOrEven)
    /* dqmax154 */ self.max128("0", "NaN", "0", .toNearestOrEven)
    /* dqmax155 */ self.max128("1", "NaN", "1", .toNearestOrEven)
    /* dqmax156 */ self.max128("1000", "NaN", "1000", .toNearestOrEven)
    /* dqmax157 */ self.max128("Inf", "NaN", "Infinity", .toNearestOrEven)
    /* dqmax161 */ self.max128("sNaN", "-Inf", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmax162 */ self.max128("sNaN", "-1000", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmax163 */ self.max128("sNaN", "-1", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmax164 */ self.max128("sNaN", "-0", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmax165 */ self.max128("sNaN", "0", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmax166 */ self.max128("sNaN", "1", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmax167 */ self.max128("sNaN", "1000", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmax168 */ self.max128("sNaN", "NaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmax169 */ self.max128("sNaN", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmax170 */ self.max128("NaN", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmax171 */ self.max128("-Inf", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmax172 */ self.max128("-1000", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmax173 */ self.max128("-1", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmax174 */ self.max128("-0", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmax175 */ self.max128("0", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmax176 */ self.max128("1", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmax177 */ self.max128("1000", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmax178 */ self.max128("Inf", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmax179 */ self.max128("NaN", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmax181 */ self.max128("NaN(0x9)", "-Inf", "-Infinity", .toNearestOrEven)
    /* dqmax182 */ self.max128("NaN(0x8)", "9", "9", .toNearestOrEven)
    /* dqmax183 */ self.max128("-NaN(0x7)", "Inf", "Infinity", .toNearestOrEven)
    /* dqmax184 */ self.max128("-NaN(0x1)", "NaN(0xb)", "-NaN(0x1)", .toNearestOrEven)
    /* dqmax185 */ self.max128("NaN(0x2)", "NaN(0xc)", "NaN(0x2)", .toNearestOrEven)
    /* dqmax186 */ self.max128("-NaN(0xd)", "-NaN(0x7)", "-NaN(0xd)", .toNearestOrEven)
    /* dqmax187 */ self.max128("NaN(0xe)", "-NaN(0x5)", "NaN(0xe)", .toNearestOrEven)
    /* dqmax188 */ self.max128("-Inf", "NaN(0x4)", "-Infinity", .toNearestOrEven)
    /* dqmax189 */ self.max128("-9", "-NaN(0x3)", "-9", .toNearestOrEven)
    /* dqmax190 */ self.max128("Inf", "NaN(0x2)", "Infinity", .toNearestOrEven)
    /* dqmax191 */ self.max128("sNaN(0x63)", "-Inf", "NaN(0x63)", .toNearestOrEven, .isInvalidOperation)
    /* dqmax192 */ self.max128("sNaN(0x62)", "-1", "NaN(0x62)", .toNearestOrEven, .isInvalidOperation)
    /* dqmax193 */ self.max128("-sNaN(0x61)", "NaN", "-NaN(0x61)", .toNearestOrEven, .isInvalidOperation)
    /* dqmax194 */ self.max128("sNaN(0x60)", "sNaN(0x5e)", "NaN(0x60)", .toNearestOrEven, .isInvalidOperation)
    /* dqmax195 */ self.max128("NaN(0x5f)", "sNaN(0x5d)", "NaN(0x5d)", .toNearestOrEven, .isInvalidOperation)
    /* dqmax196 */ self.max128("-Inf", "sNaN(0x5c)", "NaN(0x5c)", .toNearestOrEven, .isInvalidOperation)
    /* dqmax197 */ self.max128("0", "sNaN(0x5b)", "NaN(0x5b)", .toNearestOrEven, .isInvalidOperation)
    /* dqmax198 */ self.max128("Inf", "-sNaN(0x5a)", "-NaN(0x5a)", .toNearestOrEven, .isInvalidOperation)
    /* dqmax199 */ self.max128("NaN", "sNaN(0x59)", "NaN(0x59)", .toNearestOrEven, .isInvalidOperation)
    /* dqmax221 */ self.max128("12345678000", "1", "12345678000", .toNearestOrEven)
    /* dqmax222 */ self.max128("1", "12345678000", "12345678000", .toNearestOrEven)
    /* dqmax223 */ self.max128("1234567800", "1", "1234567800", .toNearestOrEven)
    /* dqmax224 */ self.max128("1", "1234567800", "1234567800", .toNearestOrEven)
    /* dqmax225 */ self.max128("1234567890", "1", "1234567890", .toNearestOrEven)
    /* dqmax226 */ self.max128("1", "1234567890", "1234567890", .toNearestOrEven)
    /* dqmax227 */ self.max128("1234567891", "1", "1234567891", .toNearestOrEven)
    /* dqmax228 */ self.max128("1", "1234567891", "1234567891", .toNearestOrEven)
    /* dqmax229 */ self.max128("12345678901", "1", "12345678901", .toNearestOrEven)
    /* dqmax230 */ self.max128("1", "12345678901", "12345678901", .toNearestOrEven)
    /* dqmax231 */ self.max128("1234567896", "1", "1234567896", .toNearestOrEven)
    /* dqmax232 */ self.max128("1", "1234567896", "1234567896", .toNearestOrEven)
    /* dqmax233 */ self.max128("-1234567891", "1", "1", .toNearestOrEven)
    /* dqmax234 */ self.max128("1", "-1234567891", "1", .toNearestOrEven)
    /* dqmax235 */ self.max128("-12345678901", "1", "1", .toNearestOrEven)
    /* dqmax236 */ self.max128("1", "-12345678901", "1", .toNearestOrEven)
    /* dqmax237 */ self.max128("-1234567896", "1", "1", .toNearestOrEven)
    /* dqmax238 */ self.max128("1", "-1234567896", "1", .toNearestOrEven)
    /* dqmax280 */ self.max128("3", "2", "3", .toNearestOrEven)
    /* dqmax281 */ self.max128("-10", "3", "3", .toNearestOrEven)
    /* dqmax282 */ self.max128("1.0", "1", "1", .toNearestOrEven)
    /* dqmax283 */ self.max128("1", "1.0", "1", .toNearestOrEven)
    /* dqmax284 */ self.max128("7", "NaN", "7", .toNearestOrEven)
    /* dqmax401 */ self.max128("Inf", "1.1", "Infinity", .toNearestOrEven)
    /* dqmax402 */ self.max128("1.1", "1", "1.1", .toNearestOrEven)
    /* dqmax403 */ self.max128("1", "1.0", "1", .toNearestOrEven)
    /* dqmax404 */ self.max128("1.0", "0.1", "1.0", .toNearestOrEven)
    /* dqmax405 */ self.max128("0.1", "0.10", "0.1", .toNearestOrEven)
    /* dqmax406 */ self.max128("0.10", "0.100", "0.10", .toNearestOrEven)
    /* dqmax407 */ self.max128("0.10", "0", "0.10", .toNearestOrEven)
    /* dqmax408 */ self.max128("0", "0.0", "0", .toNearestOrEven)
    /* dqmax409 */ self.max128("0.0", "-0", "0.0", .toNearestOrEven)
    /* dqmax410 */ self.max128("0.0", "-0.0", "0.0", .toNearestOrEven)
    /* dqmax411 */ self.max128("0.00", "-0.0", "0.00", .toNearestOrEven)
    /* dqmax412 */ self.max128("0.0", "-0.00", "0.0", .toNearestOrEven)
    /* dqmax413 */ self.max128("0", "-0.0", "0", .toNearestOrEven)
    /* dqmax414 */ self.max128("0", "-0", "0", .toNearestOrEven)
    /* dqmax415 */ self.max128("-0.0", "-0", "-0.0", .toNearestOrEven)
    /* dqmax416 */ self.max128("-0", "-0.100", "-0", .toNearestOrEven)
    /* dqmax417 */ self.max128("-0.100", "-0.10", "-0.100", .toNearestOrEven)
    /* dqmax418 */ self.max128("-0.10", "-0.1", "-0.10", .toNearestOrEven)
    /* dqmax419 */ self.max128("-0.1", "-1.0", "-0.1", .toNearestOrEven)
    /* dqmax420 */ self.max128("-1.0", "-1", "-1.0", .toNearestOrEven)
    /* dqmax421 */ self.max128("-1", "-1.1", "-1", .toNearestOrEven)
    /* dqmax423 */ self.max128("-1.1", "-Inf", "-1.1", .toNearestOrEven)
    /* dqmax431 */ self.max128("1.1", "Inf", "Infinity", .toNearestOrEven)
    /* dqmax432 */ self.max128("1", "1.1", "1.1", .toNearestOrEven)
    /* dqmax433 */ self.max128("1.0", "1", "1", .toNearestOrEven)
    /* dqmax434 */ self.max128("0.1", "1.0", "1.0", .toNearestOrEven)
    /* dqmax435 */ self.max128("0.10", "0.1", "0.1", .toNearestOrEven)
    /* dqmax436 */ self.max128("0.100", "0.10", "0.10", .toNearestOrEven)
    /* dqmax437 */ self.max128("0", "0.10", "0.10", .toNearestOrEven)
    /* dqmax438 */ self.max128("0.0", "0", "0", .toNearestOrEven)
    /* dqmax439 */ self.max128("-0", "0.0", "0.0", .toNearestOrEven)
    /* dqmax440 */ self.max128("-0.0", "0.0", "0.0", .toNearestOrEven)
    /* dqmax441 */ self.max128("-0.0", "0.00", "0.00", .toNearestOrEven)
    /* dqmax442 */ self.max128("-0.00", "0.0", "0.0", .toNearestOrEven)
    /* dqmax443 */ self.max128("-0.0", "0", "0", .toNearestOrEven)
    /* dqmax444 */ self.max128("-0", "0", "0", .toNearestOrEven)
    /* dqmax445 */ self.max128("-0", "-0.0", "-0.0", .toNearestOrEven)
    /* dqmax446 */ self.max128("-0.100", "-0", "-0", .toNearestOrEven)
    /* dqmax447 */ self.max128("-0.10", "-0.100", "-0.100", .toNearestOrEven)
    /* dqmax448 */ self.max128("-0.1", "-0.10", "-0.10", .toNearestOrEven)
    /* dqmax449 */ self.max128("-1.0", "-0.1", "-0.1", .toNearestOrEven)
    /* dqmax450 */ self.max128("-1", "-1.0", "-1.0", .toNearestOrEven)
    /* dqmax451 */ self.max128("-1.1", "-1", "-1", .toNearestOrEven)
    /* dqmax453 */ self.max128("-Inf", "-1.1", "-1.1", .toNearestOrEven)
    /* dqmax460 */ self.max128("1000", "1E+3", "1E+3", .toNearestOrEven)
    /* dqmax461 */ self.max128("1E+3", "1000", "1E+3", .toNearestOrEven)
    /* dqmax462 */ self.max128("1000", "-1E+3", "1000", .toNearestOrEven)
    /* dqmax463 */ self.max128("1E+3", "-1000", "1E+3", .toNearestOrEven)
    /* dqmax464 */ self.max128("-1000", "1E+3", "1E+3", .toNearestOrEven)
    /* dqmax465 */ self.max128("-1E+3", "1000", "1000", .toNearestOrEven)
    /* dqmax466 */ self.max128("-1000", "-1E+3", "-1000", .toNearestOrEven)
    /* dqmax467 */ self.max128("-1E+3", "-1000", "-1000", .toNearestOrEven)
    /* dqmax471 */ self.max128("1.0", "0.1", "1.0", .toNearestOrEven)
    /* dqmax472 */ self.max128("0.1", "1.0", "1.0", .toNearestOrEven)
    /* dqmax473 */ self.max128("10.0", "0.1", "10.0", .toNearestOrEven)
    /* dqmax474 */ self.max128("0.1", "10.0", "10.0", .toNearestOrEven)
    /* dqmax475 */ self.max128("100", "1.0", "100", .toNearestOrEven)
    /* dqmax476 */ self.max128("1.0", "100", "100", .toNearestOrEven)
    /* dqmax477 */ self.max128("1000", "10.0", "1000", .toNearestOrEven)
    /* dqmax478 */ self.max128("10.0", "1000", "1000", .toNearestOrEven)
    /* dqmax479 */ self.max128("10000", "100.0", "10000", .toNearestOrEven)
    /* dqmax480 */ self.max128("100.0", "10000", "10000", .toNearestOrEven)
    /* dqmax481 */ self.max128("100000", "1000.0", "100000", .toNearestOrEven)
    /* dqmax482 */ self.max128("1000.0", "100000", "100000", .toNearestOrEven)
    /* dqmax483 */ self.max128("1000000", "10000.0", "1000000", .toNearestOrEven)
    /* dqmax484 */ self.max128("10000.0", "1000000", "1000000", .toNearestOrEven)
    /* dqmax510 */ self.max128("1.00E-6143", "0", "1.00E-6143", .toNearestOrEven)
    /* dqmax511 */ self.max128("0.1E-6143", "0", "1E-6144", .toNearestOrEven)
    /* dqmax512 */ self.max128("0.10E-6143", "0", "1.0E-6144", .toNearestOrEven)
    /* dqmax513 */ self.max128("0.100E-6143", "0", "1.00E-6144", .toNearestOrEven)
    /* dqmax514 */ self.max128("0.01E-6143", "0", "1E-6145", .toNearestOrEven)
    /* dqmax515 */ self.max128("0.999E-6143", "0", "9.99E-6144", .toNearestOrEven)
    /* dqmax516 */ self.max128("0.099E-6143", "0", "9.9E-6145", .toNearestOrEven)
    /* dqmax517 */ self.max128("0.009E-6143", "0", "9E-6146", .toNearestOrEven)
    /* dqmax518 */ self.max128("0.001E-6143", "0", "1E-6146", .toNearestOrEven)
    /* dqmax519 */ self.max128("0.0009E-6143", "0", "9E-6147", .toNearestOrEven)
    /* dqmax520 */ self.max128("0.0001E-6143", "0", "1E-6147", .toNearestOrEven)
    /* dqmax530 */ self.max128("-1.00E-6143", "0", "0", .toNearestOrEven)
    /* dqmax531 */ self.max128("-0.1E-6143", "0", "0", .toNearestOrEven)
    /* dqmax532 */ self.max128("-0.10E-6143", "0", "0", .toNearestOrEven)
    /* dqmax533 */ self.max128("-0.100E-6143", "0", "0", .toNearestOrEven)
    /* dqmax534 */ self.max128("-0.01E-6143", "0", "0", .toNearestOrEven)
    /* dqmax535 */ self.max128("-0.999E-6143", "0", "0", .toNearestOrEven)
    /* dqmax536 */ self.max128("-0.099E-6143", "0", "0", .toNearestOrEven)
    /* dqmax537 */ self.max128("-0.009E-6143", "0", "0", .toNearestOrEven)
    /* dqmax538 */ self.max128("-0.001E-6143", "0", "0", .toNearestOrEven)
    /* dqmax539 */ self.max128("-0.0009E-6143", "0", "0", .toNearestOrEven)
    /* dqmax540 */ self.max128("-0.0001E-6143", "0", "0", .toNearestOrEven)
  }

  private func max128(
    _ _arg0: String,
    _ _arg1: String,
    _ _expected: String,
    _ rounding: DecimalFloatingPointRoundingRule,
    _ _expectedStatus: DecimalStatus? = nil,
    file: StaticString = #file,
    line: UInt = #line
  ) {
    guard let arg0 = self.parseDecimal128(_arg0, file, line) else { return }
    guard let arg1 = self.parseDecimal128(_arg1, file, line) else { return }
    guard let expected = self.parseDecimal128(_expected, file, line) else { return }
    let expectedStatus = _expectedStatus ?? DecimalStatus()

    var status = DecimalStatus()
    let result = Decimal128.maximum(arg0, arg1, status: &status)
    let speleotroveResult = self.toSpeleotrove_max(arg0, arg1, result: result)
    self.assertEqual(speleotroveResult, expected, file, line)
    self.assertStatus(status, expectedStatus, file, line)
  }

  // MARK: - Maxmag

  func test_maxmag64() {
    /* ddmxg001 */ self.maxmag64("-2", "-2", "-2", .toNearestOrEven)
    /* ddmxg002 */ self.maxmag64("-2", "-1", "-2", .toNearestOrEven)
    /* ddmxg003 */ self.maxmag64("-2", "0", "-2", .toNearestOrEven)
    /* ddmxg004 */ self.maxmag64("-2", "1", "-2", .toNearestOrEven)
    /* ddmxg005 */ self.maxmag64("-2", "2", "2", .toNearestOrEven)
    /* ddmxg006 */ self.maxmag64("-1", "-2", "-2", .toNearestOrEven)
    /* ddmxg007 */ self.maxmag64("-1", "-1", "-1", .toNearestOrEven)
    /* ddmxg008 */ self.maxmag64("-1", "0", "-1", .toNearestOrEven)
    /* ddmxg009 */ self.maxmag64("-1", "1", "1", .toNearestOrEven)
    /* ddmxg010 */ self.maxmag64("-1", "2", "2", .toNearestOrEven)
    /* ddmxg011 */ self.maxmag64("0", "-2", "-2", .toNearestOrEven)
    /* ddmxg012 */ self.maxmag64("0", "-1", "-1", .toNearestOrEven)
    /* ddmxg013 */ self.maxmag64("0", "0", "0", .toNearestOrEven)
    /* ddmxg014 */ self.maxmag64("0", "1", "1", .toNearestOrEven)
    /* ddmxg015 */ self.maxmag64("0", "2", "2", .toNearestOrEven)
    /* ddmxg016 */ self.maxmag64("1", "-2", "-2", .toNearestOrEven)
    /* ddmxg017 */ self.maxmag64("1", "-1", "1", .toNearestOrEven)
    /* ddmxg018 */ self.maxmag64("1", "0", "1", .toNearestOrEven)
    /* ddmxg019 */ self.maxmag64("1", "1", "1", .toNearestOrEven)
    /* ddmxg020 */ self.maxmag64("1", "2", "2", .toNearestOrEven)
    /* ddmxg021 */ self.maxmag64("2", "-2", "2", .toNearestOrEven)
    /* ddmxg022 */ self.maxmag64("2", "-1", "2", .toNearestOrEven)
    /* ddmxg023 */ self.maxmag64("2", "0", "2", .toNearestOrEven)
    /* ddmxg025 */ self.maxmag64("2", "1", "2", .toNearestOrEven)
    /* ddmxg026 */ self.maxmag64("2", "2", "2", .toNearestOrEven)
    /* ddmxg030 */ self.maxmag64("0", "0", "0", .toNearestOrEven)
    /* ddmxg031 */ self.maxmag64("0", "-0", "0", .toNearestOrEven)
    /* ddmxg032 */ self.maxmag64("0", "-0.0", "0", .toNearestOrEven)
    /* ddmxg033 */ self.maxmag64("0", "0.0", "0", .toNearestOrEven)
    /* ddmxg034 */ self.maxmag64("-0", "0", "0", .toNearestOrEven)
    /* ddmxg035 */ self.maxmag64("-0", "-0", "-0", .toNearestOrEven)
    /* ddmxg036 */ self.maxmag64("-0", "-0.0", "-0.0", .toNearestOrEven)
    /* ddmxg037 */ self.maxmag64("-0", "0.0", "0.0", .toNearestOrEven)
    /* ddmxg038 */ self.maxmag64("0.0", "0", "0", .toNearestOrEven)
    /* ddmxg039 */ self.maxmag64("0.0", "-0", "0.0", .toNearestOrEven)
    /* ddmxg040 */ self.maxmag64("0.0", "-0.0", "0.0", .toNearestOrEven)
    /* ddmxg041 */ self.maxmag64("0.0", "0.0", "0.0", .toNearestOrEven)
    /* ddmxg042 */ self.maxmag64("-0.0", "0", "0", .toNearestOrEven)
    /* ddmxg043 */ self.maxmag64("-0.0", "-0", "-0.0", .toNearestOrEven)
    /* ddmxg044 */ self.maxmag64("-0.0", "-0.0", "-0.0", .toNearestOrEven)
    /* ddmxg045 */ self.maxmag64("-0.0", "0.0", "0.0", .toNearestOrEven)
    /* ddmxg050 */ self.maxmag64("-0E1", "0E1", "0E+1", .toNearestOrEven)
    /* ddmxg051 */ self.maxmag64("-0E2", "0E2", "0E+2", .toNearestOrEven)
    /* ddmxg052 */ self.maxmag64("-0E2", "0E1", "0E+1", .toNearestOrEven)
    /* ddmxg053 */ self.maxmag64("-0E1", "0E2", "0E+2", .toNearestOrEven)
    /* ddmxg054 */ self.maxmag64("0E1", "-0E1", "0E+1", .toNearestOrEven)
    /* ddmxg055 */ self.maxmag64("0E2", "-0E2", "0E+2", .toNearestOrEven)
    /* ddmxg056 */ self.maxmag64("0E2", "-0E1", "0E+2", .toNearestOrEven)
    /* ddmxg057 */ self.maxmag64("0E1", "-0E2", "0E+1", .toNearestOrEven)
    /* ddmxg058 */ self.maxmag64("0E1", "0E1", "0E+1", .toNearestOrEven)
    /* ddmxg059 */ self.maxmag64("0E2", "0E2", "0E+2", .toNearestOrEven)
    /* ddmxg060 */ self.maxmag64("0E2", "0E1", "0E+2", .toNearestOrEven)
    /* ddmxg061 */ self.maxmag64("0E1", "0E2", "0E+2", .toNearestOrEven)
    /* ddmxg062 */ self.maxmag64("-0E1", "-0E1", "-0E+1", .toNearestOrEven)
    /* ddmxg063 */ self.maxmag64("-0E2", "-0E2", "-0E+2", .toNearestOrEven)
    /* ddmxg064 */ self.maxmag64("-0E2", "-0E1", "-0E+1", .toNearestOrEven)
    /* ddmxg065 */ self.maxmag64("-0E1", "-0E2", "-0E+1", .toNearestOrEven)
    /* ddmxg090 */ self.maxmag64("Inf", "-Inf", "Infinity", .toNearestOrEven)
    /* ddmxg091 */ self.maxmag64("Inf", "-1000", "Infinity", .toNearestOrEven)
    /* ddmxg092 */ self.maxmag64("Inf", "-1", "Infinity", .toNearestOrEven)
    /* ddmxg093 */ self.maxmag64("Inf", "-0", "Infinity", .toNearestOrEven)
    /* ddmxg094 */ self.maxmag64("Inf", "0", "Infinity", .toNearestOrEven)
    /* ddmxg095 */ self.maxmag64("Inf", "1", "Infinity", .toNearestOrEven)
    /* ddmxg096 */ self.maxmag64("Inf", "1000", "Infinity", .toNearestOrEven)
    /* ddmxg097 */ self.maxmag64("Inf", "Inf", "Infinity", .toNearestOrEven)
    /* ddmxg098 */ self.maxmag64("-1000", "Inf", "Infinity", .toNearestOrEven)
    /* ddmxg099 */ self.maxmag64("-Inf", "Inf", "Infinity", .toNearestOrEven)
    /* ddmxg100 */ self.maxmag64("-1", "Inf", "Infinity", .toNearestOrEven)
    /* ddmxg101 */ self.maxmag64("-0", "Inf", "Infinity", .toNearestOrEven)
    /* ddmxg102 */ self.maxmag64("0", "Inf", "Infinity", .toNearestOrEven)
    /* ddmxg103 */ self.maxmag64("1", "Inf", "Infinity", .toNearestOrEven)
    /* ddmxg104 */ self.maxmag64("1000", "Inf", "Infinity", .toNearestOrEven)
    /* ddmxg105 */ self.maxmag64("Inf", "Inf", "Infinity", .toNearestOrEven)
    /* ddmxg120 */ self.maxmag64("-Inf", "-Inf", "-Infinity", .toNearestOrEven)
    /* ddmxg121 */ self.maxmag64("-Inf", "-1000", "-Infinity", .toNearestOrEven)
    /* ddmxg122 */ self.maxmag64("-Inf", "-1", "-Infinity", .toNearestOrEven)
    /* ddmxg123 */ self.maxmag64("-Inf", "-0", "-Infinity", .toNearestOrEven)
    /* ddmxg124 */ self.maxmag64("-Inf", "0", "-Infinity", .toNearestOrEven)
    /* ddmxg125 */ self.maxmag64("-Inf", "1", "-Infinity", .toNearestOrEven)
    /* ddmxg126 */ self.maxmag64("-Inf", "1000", "-Infinity", .toNearestOrEven)
    /* ddmxg127 */ self.maxmag64("-Inf", "Inf", "Infinity", .toNearestOrEven)
    /* ddmxg128 */ self.maxmag64("-Inf", "-Inf", "-Infinity", .toNearestOrEven)
    /* ddmxg129 */ self.maxmag64("-1000", "-Inf", "-Infinity", .toNearestOrEven)
    /* ddmxg130 */ self.maxmag64("-1", "-Inf", "-Infinity", .toNearestOrEven)
    /* ddmxg131 */ self.maxmag64("-0", "-Inf", "-Infinity", .toNearestOrEven)
    /* ddmxg132 */ self.maxmag64("0", "-Inf", "-Infinity", .toNearestOrEven)
    /* ddmxg133 */ self.maxmag64("1", "-Inf", "-Infinity", .toNearestOrEven)
    /* ddmxg134 */ self.maxmag64("1000", "-Inf", "-Infinity", .toNearestOrEven)
    /* ddmxg135 */ self.maxmag64("Inf", "-Inf", "Infinity", .toNearestOrEven)
    /* ddmxg141 */ self.maxmag64("NaN", "-Inf", "-Infinity", .toNearestOrEven)
    /* ddmxg142 */ self.maxmag64("NaN", "-1000", "-1000", .toNearestOrEven)
    /* ddmxg143 */ self.maxmag64("NaN", "-1", "-1", .toNearestOrEven)
    /* ddmxg144 */ self.maxmag64("NaN", "-0", "-0", .toNearestOrEven)
    /* ddmxg145 */ self.maxmag64("NaN", "0", "0", .toNearestOrEven)
    /* ddmxg146 */ self.maxmag64("NaN", "1", "1", .toNearestOrEven)
    /* ddmxg147 */ self.maxmag64("NaN", "1000", "1000", .toNearestOrEven)
    /* ddmxg148 */ self.maxmag64("NaN", "Inf", "Infinity", .toNearestOrEven)
    /* ddmxg149 */ self.maxmag64("NaN", "NaN", "NaN", .toNearestOrEven)
    /* ddmxg150 */ self.maxmag64("-Inf", "NaN", "-Infinity", .toNearestOrEven)
    /* ddmxg151 */ self.maxmag64("-1000", "NaN", "-1000", .toNearestOrEven)
    /* ddmxg152 */ self.maxmag64("-1", "NaN", "-1", .toNearestOrEven)
    /* ddmxg153 */ self.maxmag64("-0", "NaN", "-0", .toNearestOrEven)
    /* ddmxg154 */ self.maxmag64("0", "NaN", "0", .toNearestOrEven)
    /* ddmxg155 */ self.maxmag64("1", "NaN", "1", .toNearestOrEven)
    /* ddmxg156 */ self.maxmag64("1000", "NaN", "1000", .toNearestOrEven)
    /* ddmxg157 */ self.maxmag64("Inf", "NaN", "Infinity", .toNearestOrEven)
    /* ddmxg161 */ self.maxmag64("sNaN", "-Inf", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmxg162 */ self.maxmag64("sNaN", "-1000", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmxg163 */ self.maxmag64("sNaN", "-1", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmxg164 */ self.maxmag64("sNaN", "-0", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmxg165 */ self.maxmag64("sNaN", "0", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmxg166 */ self.maxmag64("sNaN", "1", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmxg167 */ self.maxmag64("sNaN", "1000", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmxg168 */ self.maxmag64("sNaN", "NaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmxg169 */ self.maxmag64("sNaN", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmxg170 */ self.maxmag64("NaN", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmxg171 */ self.maxmag64("-Inf", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmxg172 */ self.maxmag64("-1000", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmxg173 */ self.maxmag64("-1", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmxg174 */ self.maxmag64("-0", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmxg175 */ self.maxmag64("0", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmxg176 */ self.maxmag64("1", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmxg177 */ self.maxmag64("1000", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmxg178 */ self.maxmag64("Inf", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmxg179 */ self.maxmag64("NaN", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmxg181 */ self.maxmag64("NaN(0x9)", "-Inf", "-Infinity", .toNearestOrEven)
    /* ddmxg182 */ self.maxmag64("NaN(0x8)", "9", "9", .toNearestOrEven)
    /* ddmxg183 */ self.maxmag64("-NaN(0x7)", "Inf", "Infinity", .toNearestOrEven)
    /* ddmxg184 */ self.maxmag64("-NaN(0x1)", "NaN(0xb)", "-NaN(0x1)", .toNearestOrEven)
    /* ddmxg185 */ self.maxmag64("NaN(0x2)", "NaN(0xc)", "NaN(0x2)", .toNearestOrEven)
    /* ddmxg186 */ self.maxmag64("-NaN(0xd)", "-NaN(0x7)", "-NaN(0xd)", .toNearestOrEven)
    /* ddmxg187 */ self.maxmag64("NaN(0xe)", "-NaN(0x5)", "NaN(0xe)", .toNearestOrEven)
    /* ddmxg188 */ self.maxmag64("-Inf", "NaN(0x4)", "-Infinity", .toNearestOrEven)
    /* ddmxg189 */ self.maxmag64("-9", "-NaN(0x3)", "-9", .toNearestOrEven)
    /* ddmxg190 */ self.maxmag64("Inf", "NaN(0x2)", "Infinity", .toNearestOrEven)
    /* ddmxg191 */ self.maxmag64("sNaN(0x63)", "-Inf", "NaN(0x63)", .toNearestOrEven, .isInvalidOperation)
    /* ddmxg192 */ self.maxmag64("sNaN(0x62)", "-1", "NaN(0x62)", .toNearestOrEven, .isInvalidOperation)
    /* ddmxg193 */ self.maxmag64("-sNaN(0x61)", "NaN", "-NaN(0x61)", .toNearestOrEven, .isInvalidOperation)
    /* ddmxg194 */ self.maxmag64("sNaN(0x60)", "sNaN(0x5e)", "NaN(0x60)", .toNearestOrEven, .isInvalidOperation)
    /* ddmxg195 */ self.maxmag64("NaN(0x5f)", "sNaN(0x5d)", "NaN(0x5d)", .toNearestOrEven, .isInvalidOperation)
    /* ddmxg196 */ self.maxmag64("-Inf", "sNaN(0x5c)", "NaN(0x5c)", .toNearestOrEven, .isInvalidOperation)
    /* ddmxg197 */ self.maxmag64("0", "sNaN(0x5b)", "NaN(0x5b)", .toNearestOrEven, .isInvalidOperation)
    /* ddmxg198 */ self.maxmag64("Inf", "-sNaN(0x5a)", "-NaN(0x5a)", .toNearestOrEven, .isInvalidOperation)
    /* ddmxg199 */ self.maxmag64("NaN", "sNaN(0x59)", "NaN(0x59)", .toNearestOrEven, .isInvalidOperation)
    /* ddmxg221 */ self.maxmag64("12345678000", "1", "12345678000", .toNearestOrEven)
    /* ddmxg222 */ self.maxmag64("1", "12345678000", "12345678000", .toNearestOrEven)
    /* ddmxg223 */ self.maxmag64("1234567800", "1", "1234567800", .toNearestOrEven)
    /* ddmxg224 */ self.maxmag64("1", "1234567800", "1234567800", .toNearestOrEven)
    /* ddmxg225 */ self.maxmag64("1234567890", "1", "1234567890", .toNearestOrEven)
    /* ddmxg226 */ self.maxmag64("1", "1234567890", "1234567890", .toNearestOrEven)
    /* ddmxg227 */ self.maxmag64("1234567891", "1", "1234567891", .toNearestOrEven)
    /* ddmxg228 */ self.maxmag64("1", "1234567891", "1234567891", .toNearestOrEven)
    /* ddmxg229 */ self.maxmag64("12345678901", "1", "12345678901", .toNearestOrEven)
    /* ddmxg230 */ self.maxmag64("1", "12345678901", "12345678901", .toNearestOrEven)
    /* ddmxg231 */ self.maxmag64("1234567896", "1", "1234567896", .toNearestOrEven)
    /* ddmxg232 */ self.maxmag64("1", "1234567896", "1234567896", .toNearestOrEven)
    /* ddmxg233 */ self.maxmag64("-1234567891", "1", "-1234567891", .toNearestOrEven)
    /* ddmxg234 */ self.maxmag64("1", "-1234567891", "-1234567891", .toNearestOrEven)
    /* ddmxg235 */ self.maxmag64("-12345678901", "1", "-12345678901", .toNearestOrEven)
    /* ddmxg236 */ self.maxmag64("1", "-12345678901", "-12345678901", .toNearestOrEven)
    /* ddmxg237 */ self.maxmag64("-1234567896", "1", "-1234567896", .toNearestOrEven)
    /* ddmxg238 */ self.maxmag64("1", "-1234567896", "-1234567896", .toNearestOrEven)
    /* ddmxg280 */ self.maxmag64("3", "2", "3", .toNearestOrEven)
    /* ddmxg281 */ self.maxmag64("-10", "3", "-10", .toNearestOrEven)
    /* ddmxg282 */ self.maxmag64("1.0", "1", "1", .toNearestOrEven)
    /* ddmxg283 */ self.maxmag64("1", "1.0", "1", .toNearestOrEven)
    /* ddmxg284 */ self.maxmag64("7", "NaN", "7", .toNearestOrEven)
    /* ddmxg401 */ self.maxmag64("Inf", "1.1", "Infinity", .toNearestOrEven)
    /* ddmxg402 */ self.maxmag64("1.1", "1", "1.1", .toNearestOrEven)
    /* ddmxg403 */ self.maxmag64("1", "1.0", "1", .toNearestOrEven)
    /* ddmxg404 */ self.maxmag64("1.0", "0.1", "1.0", .toNearestOrEven)
    /* ddmxg405 */ self.maxmag64("0.1", "0.10", "0.1", .toNearestOrEven)
    /* ddmxg406 */ self.maxmag64("0.10", "0.100", "0.10", .toNearestOrEven)
    /* ddmxg407 */ self.maxmag64("0.10", "0", "0.10", .toNearestOrEven)
    /* ddmxg408 */ self.maxmag64("0", "0.0", "0", .toNearestOrEven)
    /* ddmxg409 */ self.maxmag64("0.0", "-0", "0.0", .toNearestOrEven)
    /* ddmxg410 */ self.maxmag64("0.0", "-0.0", "0.0", .toNearestOrEven)
    /* ddmxg411 */ self.maxmag64("0.00", "-0.0", "0.00", .toNearestOrEven)
    /* ddmxg412 */ self.maxmag64("0.0", "-0.00", "0.0", .toNearestOrEven)
    /* ddmxg413 */ self.maxmag64("0", "-0.0", "0", .toNearestOrEven)
    /* ddmxg414 */ self.maxmag64("0", "-0", "0", .toNearestOrEven)
    /* ddmxg415 */ self.maxmag64("-0.0", "-0", "-0.0", .toNearestOrEven)
    /* ddmxg416 */ self.maxmag64("-0", "-0.100", "-0.100", .toNearestOrEven)
    /* ddmxg417 */ self.maxmag64("-0.100", "-0.10", "-0.100", .toNearestOrEven)
    /* ddmxg418 */ self.maxmag64("-0.10", "-0.1", "-0.10", .toNearestOrEven)
    /* ddmxg419 */ self.maxmag64("-0.1", "-1.0", "-1.0", .toNearestOrEven)
    /* ddmxg420 */ self.maxmag64("-1.0", "-1", "-1.0", .toNearestOrEven)
    /* ddmxg421 */ self.maxmag64("-1", "-1.1", "-1.1", .toNearestOrEven)
    /* ddmxg423 */ self.maxmag64("-1.1", "-Inf", "-Infinity", .toNearestOrEven)
    /* ddmxg431 */ self.maxmag64("1.1", "Inf", "Infinity", .toNearestOrEven)
    /* ddmxg432 */ self.maxmag64("1", "1.1", "1.1", .toNearestOrEven)
    /* ddmxg433 */ self.maxmag64("1.0", "1", "1", .toNearestOrEven)
    /* ddmxg434 */ self.maxmag64("0.1", "1.0", "1.0", .toNearestOrEven)
    /* ddmxg435 */ self.maxmag64("0.10", "0.1", "0.1", .toNearestOrEven)
    /* ddmxg436 */ self.maxmag64("0.100", "0.10", "0.10", .toNearestOrEven)
    /* ddmxg437 */ self.maxmag64("0", "0.10", "0.10", .toNearestOrEven)
    /* ddmxg438 */ self.maxmag64("0.0", "0", "0", .toNearestOrEven)
    /* ddmxg439 */ self.maxmag64("-0", "0.0", "0.0", .toNearestOrEven)
    /* ddmxg440 */ self.maxmag64("-0.0", "0.0", "0.0", .toNearestOrEven)
    /* ddmxg441 */ self.maxmag64("-0.0", "0.00", "0.00", .toNearestOrEven)
    /* ddmxg442 */ self.maxmag64("-0.00", "0.0", "0.0", .toNearestOrEven)
    /* ddmxg443 */ self.maxmag64("-0.0", "0", "0", .toNearestOrEven)
    /* ddmxg444 */ self.maxmag64("-0", "0", "0", .toNearestOrEven)
    /* ddmxg445 */ self.maxmag64("-0", "-0.0", "-0.0", .toNearestOrEven)
    /* ddmxg446 */ self.maxmag64("-0.100", "-0", "-0.100", .toNearestOrEven)
    /* ddmxg447 */ self.maxmag64("-0.10", "-0.100", "-0.100", .toNearestOrEven)
    /* ddmxg448 */ self.maxmag64("-0.1", "-0.10", "-0.10", .toNearestOrEven)
    /* ddmxg449 */ self.maxmag64("-1.0", "-0.1", "-1.0", .toNearestOrEven)
    /* ddmxg450 */ self.maxmag64("-1", "-1.0", "-1.0", .toNearestOrEven)
    /* ddmxg451 */ self.maxmag64("-1.1", "-1", "-1.1", .toNearestOrEven)
    /* ddmxg453 */ self.maxmag64("-Inf", "-1.1", "-Infinity", .toNearestOrEven)
    /* ddmxg460 */ self.maxmag64("1000", "1E+3", "1E+3", .toNearestOrEven)
    /* ddmxg461 */ self.maxmag64("1E+3", "1000", "1E+3", .toNearestOrEven)
    /* ddmxg462 */ self.maxmag64("1000", "-1E+3", "1000", .toNearestOrEven)
    /* ddmxg463 */ self.maxmag64("1E+3", "-1000", "1E+3", .toNearestOrEven)
    /* ddmxg464 */ self.maxmag64("-1000", "1E+3", "1E+3", .toNearestOrEven)
    /* ddmxg465 */ self.maxmag64("-1E+3", "1000", "1000", .toNearestOrEven)
    /* ddmxg466 */ self.maxmag64("-1000", "-1E+3", "-1000", .toNearestOrEven)
    /* ddmxg467 */ self.maxmag64("-1E+3", "-1000", "-1000", .toNearestOrEven)
    /* ddmxg510 */ self.maxmag64("1.00E-383", "0", "1.00E-383", .toNearestOrEven)
    /* ddmxg511 */ self.maxmag64("0.1E-383", "0", "1E-384", .toNearestOrEven)
    /* ddmxg512 */ self.maxmag64("0.10E-383", "0", "1.0E-384", .toNearestOrEven)
    /* ddmxg513 */ self.maxmag64("0.100E-383", "0", "1.00E-384", .toNearestOrEven)
    /* ddmxg514 */ self.maxmag64("0.01E-383", "0", "1E-385", .toNearestOrEven)
    /* ddmxg515 */ self.maxmag64("0.999E-383", "0", "9.99E-384", .toNearestOrEven)
    /* ddmxg516 */ self.maxmag64("0.099E-383", "0", "9.9E-385", .toNearestOrEven)
    /* ddmxg517 */ self.maxmag64("0.009E-383", "0", "9E-386", .toNearestOrEven)
    /* ddmxg518 */ self.maxmag64("0.001E-383", "0", "1E-386", .toNearestOrEven)
    /* ddmxg519 */ self.maxmag64("0.0009E-383", "0", "9E-387", .toNearestOrEven)
    /* ddmxg520 */ self.maxmag64("0.0001E-383", "0", "1E-387", .toNearestOrEven)
    /* ddmxg530 */ self.maxmag64("-1.00E-383", "0", "-1.00E-383", .toNearestOrEven)
    /* ddmxg531 */ self.maxmag64("-0.1E-383", "0", "-1E-384", .toNearestOrEven)
    /* ddmxg532 */ self.maxmag64("-0.10E-383", "0", "-1.0E-384", .toNearestOrEven)
    /* ddmxg533 */ self.maxmag64("-0.100E-383", "0", "-1.00E-384", .toNearestOrEven)
    /* ddmxg534 */ self.maxmag64("-0.01E-383", "0", "-1E-385", .toNearestOrEven)
    /* ddmxg535 */ self.maxmag64("-0.999E-383", "0", "-9.99E-384", .toNearestOrEven)
    /* ddmxg536 */ self.maxmag64("-0.099E-383", "0", "-9.9E-385", .toNearestOrEven)
    /* ddmxg537 */ self.maxmag64("-0.009E-383", "0", "-9E-386", .toNearestOrEven)
    /* ddmxg538 */ self.maxmag64("-0.001E-383", "0", "-1E-386", .toNearestOrEven)
    /* ddmxg539 */ self.maxmag64("-0.0009E-383", "0", "-9E-387", .toNearestOrEven)
    /* ddmxg540 */ self.maxmag64("-0.0001E-383", "0", "-1E-387", .toNearestOrEven)
  }

  private func maxmag64(
    _ _arg0: String,
    _ _arg1: String,
    _ _expected: String,
    _ rounding: DecimalFloatingPointRoundingRule,
    _ _expectedStatus: DecimalStatus? = nil,
    file: StaticString = #file,
    line: UInt = #line
  ) {
    guard let arg0 = self.parseDecimal64(_arg0, file, line) else { return }
    guard let arg1 = self.parseDecimal64(_arg1, file, line) else { return }
    guard let expected = self.parseDecimal64(_expected, file, line) else { return }
    let expectedStatus = _expectedStatus ?? DecimalStatus()

    var status = DecimalStatus()
    let result = Decimal64.maximumMagnitude(arg0, arg1, status: &status)
    let speleotroveResult = self.toSpeleotrove_max(arg0, arg1, result: result)
    self.assertEqual(speleotroveResult, expected, file, line)
    self.assertStatus(status, expectedStatus, file, line)
  }

  func test_maxmag128() {
    /* dqmxg001 */ self.maxmag128("-2", "-2", "-2", .toNearestOrEven)
    /* dqmxg002 */ self.maxmag128("-2", "-1", "-2", .toNearestOrEven)
    /* dqmxg003 */ self.maxmag128("-2", "0", "-2", .toNearestOrEven)
    /* dqmxg004 */ self.maxmag128("-2", "1", "-2", .toNearestOrEven)
    /* dqmxg005 */ self.maxmag128("-2", "2", "2", .toNearestOrEven)
    /* dqmxg006 */ self.maxmag128("-1", "-2", "-2", .toNearestOrEven)
    /* dqmxg007 */ self.maxmag128("-1", "-1", "-1", .toNearestOrEven)
    /* dqmxg008 */ self.maxmag128("-1", "0", "-1", .toNearestOrEven)
    /* dqmxg009 */ self.maxmag128("-1", "1", "1", .toNearestOrEven)
    /* dqmxg010 */ self.maxmag128("-1", "2", "2", .toNearestOrEven)
    /* dqmxg011 */ self.maxmag128("0", "-2", "-2", .toNearestOrEven)
    /* dqmxg012 */ self.maxmag128("0", "-1", "-1", .toNearestOrEven)
    /* dqmxg013 */ self.maxmag128("0", "0", "0", .toNearestOrEven)
    /* dqmxg014 */ self.maxmag128("0", "1", "1", .toNearestOrEven)
    /* dqmxg015 */ self.maxmag128("0", "2", "2", .toNearestOrEven)
    /* dqmxg016 */ self.maxmag128("1", "-2", "-2", .toNearestOrEven)
    /* dqmxg017 */ self.maxmag128("1", "-1", "1", .toNearestOrEven)
    /* dqmxg018 */ self.maxmag128("1", "0", "1", .toNearestOrEven)
    /* dqmxg019 */ self.maxmag128("1", "1", "1", .toNearestOrEven)
    /* dqmxg020 */ self.maxmag128("1", "2", "2", .toNearestOrEven)
    /* dqmxg021 */ self.maxmag128("2", "-2", "2", .toNearestOrEven)
    /* dqmxg022 */ self.maxmag128("2", "-1", "2", .toNearestOrEven)
    /* dqmxg023 */ self.maxmag128("2", "0", "2", .toNearestOrEven)
    /* dqmxg025 */ self.maxmag128("2", "1", "2", .toNearestOrEven)
    /* dqmxg026 */ self.maxmag128("2", "2", "2", .toNearestOrEven)
    /* dqmxg030 */ self.maxmag128("0", "0", "0", .toNearestOrEven)
    /* dqmxg031 */ self.maxmag128("0", "-0", "0", .toNearestOrEven)
    /* dqmxg032 */ self.maxmag128("0", "-0.0", "0", .toNearestOrEven)
    /* dqmxg033 */ self.maxmag128("0", "0.0", "0", .toNearestOrEven)
    /* dqmxg034 */ self.maxmag128("-0", "0", "0", .toNearestOrEven)
    /* dqmxg035 */ self.maxmag128("-0", "-0", "-0", .toNearestOrEven)
    /* dqmxg036 */ self.maxmag128("-0", "-0.0", "-0.0", .toNearestOrEven)
    /* dqmxg037 */ self.maxmag128("-0", "0.0", "0.0", .toNearestOrEven)
    /* dqmxg038 */ self.maxmag128("0.0", "0", "0", .toNearestOrEven)
    /* dqmxg039 */ self.maxmag128("0.0", "-0", "0.0", .toNearestOrEven)
    /* dqmxg040 */ self.maxmag128("0.0", "-0.0", "0.0", .toNearestOrEven)
    /* dqmxg041 */ self.maxmag128("0.0", "0.0", "0.0", .toNearestOrEven)
    /* dqmxg042 */ self.maxmag128("-0.0", "0", "0", .toNearestOrEven)
    /* dqmxg043 */ self.maxmag128("-0.0", "-0", "-0.0", .toNearestOrEven)
    /* dqmxg044 */ self.maxmag128("-0.0", "-0.0", "-0.0", .toNearestOrEven)
    /* dqmxg045 */ self.maxmag128("-0.0", "0.0", "0.0", .toNearestOrEven)
    /* dqmxg050 */ self.maxmag128("-0E1", "0E1", "0E+1", .toNearestOrEven)
    /* dqmxg051 */ self.maxmag128("-0E2", "0E2", "0E+2", .toNearestOrEven)
    /* dqmxg052 */ self.maxmag128("-0E2", "0E1", "0E+1", .toNearestOrEven)
    /* dqmxg053 */ self.maxmag128("-0E1", "0E2", "0E+2", .toNearestOrEven)
    /* dqmxg054 */ self.maxmag128("0E1", "-0E1", "0E+1", .toNearestOrEven)
    /* dqmxg055 */ self.maxmag128("0E2", "-0E2", "0E+2", .toNearestOrEven)
    /* dqmxg056 */ self.maxmag128("0E2", "-0E1", "0E+2", .toNearestOrEven)
    /* dqmxg057 */ self.maxmag128("0E1", "-0E2", "0E+1", .toNearestOrEven)
    /* dqmxg058 */ self.maxmag128("0E1", "0E1", "0E+1", .toNearestOrEven)
    /* dqmxg059 */ self.maxmag128("0E2", "0E2", "0E+2", .toNearestOrEven)
    /* dqmxg060 */ self.maxmag128("0E2", "0E1", "0E+2", .toNearestOrEven)
    /* dqmxg061 */ self.maxmag128("0E1", "0E2", "0E+2", .toNearestOrEven)
    /* dqmxg062 */ self.maxmag128("-0E1", "-0E1", "-0E+1", .toNearestOrEven)
    /* dqmxg063 */ self.maxmag128("-0E2", "-0E2", "-0E+2", .toNearestOrEven)
    /* dqmxg064 */ self.maxmag128("-0E2", "-0E1", "-0E+1", .toNearestOrEven)
    /* dqmxg065 */ self.maxmag128("-0E1", "-0E2", "-0E+1", .toNearestOrEven)
    /* dqmxg090 */ self.maxmag128("Inf", "-Inf", "Infinity", .toNearestOrEven)
    /* dqmxg091 */ self.maxmag128("Inf", "-1000", "Infinity", .toNearestOrEven)
    /* dqmxg092 */ self.maxmag128("Inf", "-1", "Infinity", .toNearestOrEven)
    /* dqmxg093 */ self.maxmag128("Inf", "-0", "Infinity", .toNearestOrEven)
    /* dqmxg094 */ self.maxmag128("Inf", "0", "Infinity", .toNearestOrEven)
    /* dqmxg095 */ self.maxmag128("Inf", "1", "Infinity", .toNearestOrEven)
    /* dqmxg096 */ self.maxmag128("Inf", "1000", "Infinity", .toNearestOrEven)
    /* dqmxg097 */ self.maxmag128("Inf", "Inf", "Infinity", .toNearestOrEven)
    /* dqmxg098 */ self.maxmag128("-1000", "Inf", "Infinity", .toNearestOrEven)
    /* dqmxg099 */ self.maxmag128("-Inf", "Inf", "Infinity", .toNearestOrEven)
    /* dqmxg100 */ self.maxmag128("-1", "Inf", "Infinity", .toNearestOrEven)
    /* dqmxg101 */ self.maxmag128("-0", "Inf", "Infinity", .toNearestOrEven)
    /* dqmxg102 */ self.maxmag128("0", "Inf", "Infinity", .toNearestOrEven)
    /* dqmxg103 */ self.maxmag128("1", "Inf", "Infinity", .toNearestOrEven)
    /* dqmxg104 */ self.maxmag128("1000", "Inf", "Infinity", .toNearestOrEven)
    /* dqmxg105 */ self.maxmag128("Inf", "Inf", "Infinity", .toNearestOrEven)
    /* dqmxg120 */ self.maxmag128("-Inf", "-Inf", "-Infinity", .toNearestOrEven)
    /* dqmxg121 */ self.maxmag128("-Inf", "-1000", "-Infinity", .toNearestOrEven)
    /* dqmxg122 */ self.maxmag128("-Inf", "-1", "-Infinity", .toNearestOrEven)
    /* dqmxg123 */ self.maxmag128("-Inf", "-0", "-Infinity", .toNearestOrEven)
    /* dqmxg124 */ self.maxmag128("-Inf", "0", "-Infinity", .toNearestOrEven)
    /* dqmxg125 */ self.maxmag128("-Inf", "1", "-Infinity", .toNearestOrEven)
    /* dqmxg126 */ self.maxmag128("-Inf", "1000", "-Infinity", .toNearestOrEven)
    /* dqmxg127 */ self.maxmag128("-Inf", "Inf", "Infinity", .toNearestOrEven)
    /* dqmxg128 */ self.maxmag128("-Inf", "-Inf", "-Infinity", .toNearestOrEven)
    /* dqmxg129 */ self.maxmag128("-1000", "-Inf", "-Infinity", .toNearestOrEven)
    /* dqmxg130 */ self.maxmag128("-1", "-Inf", "-Infinity", .toNearestOrEven)
    /* dqmxg131 */ self.maxmag128("-0", "-Inf", "-Infinity", .toNearestOrEven)
    /* dqmxg132 */ self.maxmag128("0", "-Inf", "-Infinity", .toNearestOrEven)
    /* dqmxg133 */ self.maxmag128("1", "-Inf", "-Infinity", .toNearestOrEven)
    /* dqmxg134 */ self.maxmag128("1000", "-Inf", "-Infinity", .toNearestOrEven)
    /* dqmxg135 */ self.maxmag128("Inf", "-Inf", "Infinity", .toNearestOrEven)
    /* dqmxg141 */ self.maxmag128("NaN", "-Inf", "-Infinity", .toNearestOrEven)
    /* dqmxg142 */ self.maxmag128("NaN", "-1000", "-1000", .toNearestOrEven)
    /* dqmxg143 */ self.maxmag128("NaN", "-1", "-1", .toNearestOrEven)
    /* dqmxg144 */ self.maxmag128("NaN", "-0", "-0", .toNearestOrEven)
    /* dqmxg145 */ self.maxmag128("NaN", "0", "0", .toNearestOrEven)
    /* dqmxg146 */ self.maxmag128("NaN", "1", "1", .toNearestOrEven)
    /* dqmxg147 */ self.maxmag128("NaN", "1000", "1000", .toNearestOrEven)
    /* dqmxg148 */ self.maxmag128("NaN", "Inf", "Infinity", .toNearestOrEven)
    /* dqmxg149 */ self.maxmag128("NaN", "NaN", "NaN", .toNearestOrEven)
    /* dqmxg150 */ self.maxmag128("-Inf", "NaN", "-Infinity", .toNearestOrEven)
    /* dqmxg151 */ self.maxmag128("-1000", "NaN", "-1000", .toNearestOrEven)
    /* dqmxg152 */ self.maxmag128("-1", "NaN", "-1", .toNearestOrEven)
    /* dqmxg153 */ self.maxmag128("-0", "NaN", "-0", .toNearestOrEven)
    /* dqmxg154 */ self.maxmag128("0", "NaN", "0", .toNearestOrEven)
    /* dqmxg155 */ self.maxmag128("1", "NaN", "1", .toNearestOrEven)
    /* dqmxg156 */ self.maxmag128("1000", "NaN", "1000", .toNearestOrEven)
    /* dqmxg157 */ self.maxmag128("Inf", "NaN", "Infinity", .toNearestOrEven)
    /* dqmxg161 */ self.maxmag128("sNaN", "-Inf", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmxg162 */ self.maxmag128("sNaN", "-1000", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmxg163 */ self.maxmag128("sNaN", "-1", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmxg164 */ self.maxmag128("sNaN", "-0", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmxg165 */ self.maxmag128("sNaN", "0", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmxg166 */ self.maxmag128("sNaN", "1", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmxg167 */ self.maxmag128("sNaN", "1000", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmxg168 */ self.maxmag128("sNaN", "NaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmxg169 */ self.maxmag128("sNaN", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmxg170 */ self.maxmag128("NaN", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmxg171 */ self.maxmag128("-Inf", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmxg172 */ self.maxmag128("-1000", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmxg173 */ self.maxmag128("-1", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmxg174 */ self.maxmag128("-0", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmxg175 */ self.maxmag128("0", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmxg176 */ self.maxmag128("1", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmxg177 */ self.maxmag128("1000", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmxg178 */ self.maxmag128("Inf", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmxg179 */ self.maxmag128("NaN", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmxg181 */ self.maxmag128("NaN(0x9)", "-Inf", "-Infinity", .toNearestOrEven)
    /* dqmxg182 */ self.maxmag128("NaN(0x8)", "9", "9", .toNearestOrEven)
    /* dqmxg183 */ self.maxmag128("-NaN(0x7)", "Inf", "Infinity", .toNearestOrEven)
    /* dqmxg184 */ self.maxmag128("-NaN(0x1)", "NaN(0xb)", "-NaN(0x1)", .toNearestOrEven)
    /* dqmxg185 */ self.maxmag128("NaN(0x2)", "NaN(0xc)", "NaN(0x2)", .toNearestOrEven)
    /* dqmxg186 */ self.maxmag128("-NaN(0xd)", "-NaN(0x7)", "-NaN(0xd)", .toNearestOrEven)
    /* dqmxg187 */ self.maxmag128("NaN(0xe)", "-NaN(0x5)", "NaN(0xe)", .toNearestOrEven)
    /* dqmxg188 */ self.maxmag128("-Inf", "NaN(0x4)", "-Infinity", .toNearestOrEven)
    /* dqmxg189 */ self.maxmag128("-9", "-NaN(0x3)", "-9", .toNearestOrEven)
    /* dqmxg190 */ self.maxmag128("Inf", "NaN(0x2)", "Infinity", .toNearestOrEven)
    /* dqmxg191 */ self.maxmag128("sNaN(0x63)", "-Inf", "NaN(0x63)", .toNearestOrEven, .isInvalidOperation)
    /* dqmxg192 */ self.maxmag128("sNaN(0x62)", "-1", "NaN(0x62)", .toNearestOrEven, .isInvalidOperation)
    /* dqmxg193 */ self.maxmag128("-sNaN(0x61)", "NaN", "-NaN(0x61)", .toNearestOrEven, .isInvalidOperation)
    /* dqmxg194 */ self.maxmag128("sNaN(0x60)", "sNaN(0x5e)", "NaN(0x60)", .toNearestOrEven, .isInvalidOperation)
    /* dqmxg195 */ self.maxmag128("NaN(0x5f)", "sNaN(0x5d)", "NaN(0x5d)", .toNearestOrEven, .isInvalidOperation)
    /* dqmxg196 */ self.maxmag128("-Inf", "sNaN(0x5c)", "NaN(0x5c)", .toNearestOrEven, .isInvalidOperation)
    /* dqmxg197 */ self.maxmag128("0", "sNaN(0x5b)", "NaN(0x5b)", .toNearestOrEven, .isInvalidOperation)
    /* dqmxg198 */ self.maxmag128("Inf", "-sNaN(0x5a)", "-NaN(0x5a)", .toNearestOrEven, .isInvalidOperation)
    /* dqmxg199 */ self.maxmag128("NaN", "sNaN(0x59)", "NaN(0x59)", .toNearestOrEven, .isInvalidOperation)
    /* dqmxg221 */ self.maxmag128("12345678000", "1", "12345678000", .toNearestOrEven)
    /* dqmxg222 */ self.maxmag128("1", "12345678000", "12345678000", .toNearestOrEven)
    /* dqmxg223 */ self.maxmag128("1234567800", "1", "1234567800", .toNearestOrEven)
    /* dqmxg224 */ self.maxmag128("1", "1234567800", "1234567800", .toNearestOrEven)
    /* dqmxg225 */ self.maxmag128("1234567890", "1", "1234567890", .toNearestOrEven)
    /* dqmxg226 */ self.maxmag128("1", "1234567890", "1234567890", .toNearestOrEven)
    /* dqmxg227 */ self.maxmag128("1234567891", "1", "1234567891", .toNearestOrEven)
    /* dqmxg228 */ self.maxmag128("1", "1234567891", "1234567891", .toNearestOrEven)
    /* dqmxg229 */ self.maxmag128("12345678901", "1", "12345678901", .toNearestOrEven)
    /* dqmxg230 */ self.maxmag128("1", "12345678901", "12345678901", .toNearestOrEven)
    /* dqmxg231 */ self.maxmag128("1234567896", "1", "1234567896", .toNearestOrEven)
    /* dqmxg232 */ self.maxmag128("1", "1234567896", "1234567896", .toNearestOrEven)
    /* dqmxg233 */ self.maxmag128("-1234567891", "1", "-1234567891", .toNearestOrEven)
    /* dqmxg234 */ self.maxmag128("1", "-1234567891", "-1234567891", .toNearestOrEven)
    /* dqmxg235 */ self.maxmag128("-12345678901", "1", "-12345678901", .toNearestOrEven)
    /* dqmxg236 */ self.maxmag128("1", "-12345678901", "-12345678901", .toNearestOrEven)
    /* dqmxg237 */ self.maxmag128("-1234567896", "1", "-1234567896", .toNearestOrEven)
    /* dqmxg238 */ self.maxmag128("1", "-1234567896", "-1234567896", .toNearestOrEven)
    /* dqmxg280 */ self.maxmag128("3", "2", "3", .toNearestOrEven)
    /* dqmxg281 */ self.maxmag128("-10", "3", "-10", .toNearestOrEven)
    /* dqmxg282 */ self.maxmag128("1.0", "1", "1", .toNearestOrEven)
    /* dqmxg283 */ self.maxmag128("1", "1.0", "1", .toNearestOrEven)
    /* dqmxg284 */ self.maxmag128("7", "NaN", "7", .toNearestOrEven)
    /* dqmxg401 */ self.maxmag128("Inf", "1.1", "Infinity", .toNearestOrEven)
    /* dqmxg402 */ self.maxmag128("1.1", "1", "1.1", .toNearestOrEven)
    /* dqmxg403 */ self.maxmag128("1", "1.0", "1", .toNearestOrEven)
    /* dqmxg404 */ self.maxmag128("1.0", "0.1", "1.0", .toNearestOrEven)
    /* dqmxg405 */ self.maxmag128("0.1", "0.10", "0.1", .toNearestOrEven)
    /* dqmxg406 */ self.maxmag128("0.10", "0.100", "0.10", .toNearestOrEven)
    /* dqmxg407 */ self.maxmag128("0.10", "0", "0.10", .toNearestOrEven)
    /* dqmxg408 */ self.maxmag128("0", "0.0", "0", .toNearestOrEven)
    /* dqmxg409 */ self.maxmag128("0.0", "-0", "0.0", .toNearestOrEven)
    /* dqmxg410 */ self.maxmag128("0.0", "-0.0", "0.0", .toNearestOrEven)
    /* dqmxg411 */ self.maxmag128("0.00", "-0.0", "0.00", .toNearestOrEven)
    /* dqmxg412 */ self.maxmag128("0.0", "-0.00", "0.0", .toNearestOrEven)
    /* dqmxg413 */ self.maxmag128("0", "-0.0", "0", .toNearestOrEven)
    /* dqmxg414 */ self.maxmag128("0", "-0", "0", .toNearestOrEven)
    /* dqmxg415 */ self.maxmag128("-0.0", "-0", "-0.0", .toNearestOrEven)
    /* dqmxg416 */ self.maxmag128("-0", "-0.100", "-0.100", .toNearestOrEven)
    /* dqmxg417 */ self.maxmag128("-0.100", "-0.10", "-0.100", .toNearestOrEven)
    /* dqmxg418 */ self.maxmag128("-0.10", "-0.1", "-0.10", .toNearestOrEven)
    /* dqmxg419 */ self.maxmag128("-0.1", "-1.0", "-1.0", .toNearestOrEven)
    /* dqmxg420 */ self.maxmag128("-1.0", "-1", "-1.0", .toNearestOrEven)
    /* dqmxg421 */ self.maxmag128("-1", "-1.1", "-1.1", .toNearestOrEven)
    /* dqmxg423 */ self.maxmag128("-1.1", "-Inf", "-Infinity", .toNearestOrEven)
    /* dqmxg431 */ self.maxmag128("1.1", "Inf", "Infinity", .toNearestOrEven)
    /* dqmxg432 */ self.maxmag128("1", "1.1", "1.1", .toNearestOrEven)
    /* dqmxg433 */ self.maxmag128("1.0", "1", "1", .toNearestOrEven)
    /* dqmxg434 */ self.maxmag128("0.1", "1.0", "1.0", .toNearestOrEven)
    /* dqmxg435 */ self.maxmag128("0.10", "0.1", "0.1", .toNearestOrEven)
    /* dqmxg436 */ self.maxmag128("0.100", "0.10", "0.10", .toNearestOrEven)
    /* dqmxg437 */ self.maxmag128("0", "0.10", "0.10", .toNearestOrEven)
    /* dqmxg438 */ self.maxmag128("0.0", "0", "0", .toNearestOrEven)
    /* dqmxg439 */ self.maxmag128("-0", "0.0", "0.0", .toNearestOrEven)
    /* dqmxg440 */ self.maxmag128("-0.0", "0.0", "0.0", .toNearestOrEven)
    /* dqmxg441 */ self.maxmag128("-0.0", "0.00", "0.00", .toNearestOrEven)
    /* dqmxg442 */ self.maxmag128("-0.00", "0.0", "0.0", .toNearestOrEven)
    /* dqmxg443 */ self.maxmag128("-0.0", "0", "0", .toNearestOrEven)
    /* dqmxg444 */ self.maxmag128("-0", "0", "0", .toNearestOrEven)
    /* dqmxg445 */ self.maxmag128("-0", "-0.0", "-0.0", .toNearestOrEven)
    /* dqmxg446 */ self.maxmag128("-0.100", "-0", "-0.100", .toNearestOrEven)
    /* dqmxg447 */ self.maxmag128("-0.10", "-0.100", "-0.100", .toNearestOrEven)
    /* dqmxg448 */ self.maxmag128("-0.1", "-0.10", "-0.10", .toNearestOrEven)
    /* dqmxg449 */ self.maxmag128("-1.0", "-0.1", "-1.0", .toNearestOrEven)
    /* dqmxg450 */ self.maxmag128("-1", "-1.0", "-1.0", .toNearestOrEven)
    /* dqmxg451 */ self.maxmag128("-1.1", "-1", "-1.1", .toNearestOrEven)
    /* dqmxg453 */ self.maxmag128("-Inf", "-1.1", "-Infinity", .toNearestOrEven)
    /* dqmxg460 */ self.maxmag128("1000", "1E+3", "1E+3", .toNearestOrEven)
    /* dqmxg461 */ self.maxmag128("1E+3", "1000", "1E+3", .toNearestOrEven)
    /* dqmxg462 */ self.maxmag128("1000", "-1E+3", "1000", .toNearestOrEven)
    /* dqmxg463 */ self.maxmag128("1E+3", "-1000", "1E+3", .toNearestOrEven)
    /* dqmxg464 */ self.maxmag128("-1000", "1E+3", "1E+3", .toNearestOrEven)
    /* dqmxg465 */ self.maxmag128("-1E+3", "1000", "1000", .toNearestOrEven)
    /* dqmxg466 */ self.maxmag128("-1000", "-1E+3", "-1000", .toNearestOrEven)
    /* dqmxg467 */ self.maxmag128("-1E+3", "-1000", "-1000", .toNearestOrEven)
    /* dqmxg510 */ self.maxmag128("1.00E-6143", "0", "1.00E-6143", .toNearestOrEven)
    /* dqmxg511 */ self.maxmag128("0.1E-6143", "0", "1E-6144", .toNearestOrEven)
    /* dqmxg512 */ self.maxmag128("0.10E-6143", "0", "1.0E-6144", .toNearestOrEven)
    /* dqmxg513 */ self.maxmag128("0.100E-6143", "0", "1.00E-6144", .toNearestOrEven)
    /* dqmxg514 */ self.maxmag128("0.01E-6143", "0", "1E-6145", .toNearestOrEven)
    /* dqmxg515 */ self.maxmag128("0.999E-6143", "0", "9.99E-6144", .toNearestOrEven)
    /* dqmxg516 */ self.maxmag128("0.099E-6143", "0", "9.9E-6145", .toNearestOrEven)
    /* dqmxg517 */ self.maxmag128("0.009E-6143", "0", "9E-6146", .toNearestOrEven)
    /* dqmxg518 */ self.maxmag128("0.001E-6143", "0", "1E-6146", .toNearestOrEven)
    /* dqmxg519 */ self.maxmag128("0.0009E-6143", "0", "9E-6147", .toNearestOrEven)
    /* dqmxg520 */ self.maxmag128("0.0001E-6143", "0", "1E-6147", .toNearestOrEven)
    /* dqmxg530 */ self.maxmag128("-1.00E-6143", "0", "-1.00E-6143", .toNearestOrEven)
    /* dqmxg531 */ self.maxmag128("-0.1E-6143", "0", "-1E-6144", .toNearestOrEven)
    /* dqmxg532 */ self.maxmag128("-0.10E-6143", "0", "-1.0E-6144", .toNearestOrEven)
    /* dqmxg533 */ self.maxmag128("-0.100E-6143", "0", "-1.00E-6144", .toNearestOrEven)
    /* dqmxg534 */ self.maxmag128("-0.01E-6143", "0", "-1E-6145", .toNearestOrEven)
    /* dqmxg535 */ self.maxmag128("-0.999E-6143", "0", "-9.99E-6144", .toNearestOrEven)
    /* dqmxg536 */ self.maxmag128("-0.099E-6143", "0", "-9.9E-6145", .toNearestOrEven)
    /* dqmxg537 */ self.maxmag128("-0.009E-6143", "0", "-9E-6146", .toNearestOrEven)
    /* dqmxg538 */ self.maxmag128("-0.001E-6143", "0", "-1E-6146", .toNearestOrEven)
    /* dqmxg539 */ self.maxmag128("-0.0009E-6143", "0", "-9E-6147", .toNearestOrEven)
    /* dqmxg540 */ self.maxmag128("-0.0001E-6143", "0", "-1E-6147", .toNearestOrEven)
  }

  private func maxmag128(
    _ _arg0: String,
    _ _arg1: String,
    _ _expected: String,
    _ rounding: DecimalFloatingPointRoundingRule,
    _ _expectedStatus: DecimalStatus? = nil,
    file: StaticString = #file,
    line: UInt = #line
  ) {
    guard let arg0 = self.parseDecimal128(_arg0, file, line) else { return }
    guard let arg1 = self.parseDecimal128(_arg1, file, line) else { return }
    guard let expected = self.parseDecimal128(_expected, file, line) else { return }
    let expectedStatus = _expectedStatus ?? DecimalStatus()

    var status = DecimalStatus()
    let result = Decimal128.maximumMagnitude(arg0, arg1, status: &status)
    let speleotroveResult = self.toSpeleotrove_max(arg0, arg1, result: result)
    self.assertEqual(speleotroveResult, expected, file, line)
    self.assertStatus(status, expectedStatus, file, line)
  }

  // MARK: - Min

  func test_min64() {
    /* ddmin001 */ self.min64("-2", "-2", "-2", .toNearestOrEven)
    /* ddmin002 */ self.min64("-2", "-1", "-2", .toNearestOrEven)
    /* ddmin003 */ self.min64("-2", "0", "-2", .toNearestOrEven)
    /* ddmin004 */ self.min64("-2", "1", "-2", .toNearestOrEven)
    /* ddmin005 */ self.min64("-2", "2", "-2", .toNearestOrEven)
    /* ddmin006 */ self.min64("-1", "-2", "-2", .toNearestOrEven)
    /* ddmin007 */ self.min64("-1", "-1", "-1", .toNearestOrEven)
    /* ddmin008 */ self.min64("-1", "0", "-1", .toNearestOrEven)
    /* ddmin009 */ self.min64("-1", "1", "-1", .toNearestOrEven)
    /* ddmin010 */ self.min64("-1", "2", "-1", .toNearestOrEven)
    /* ddmin011 */ self.min64("0", "-2", "-2", .toNearestOrEven)
    /* ddmin012 */ self.min64("0", "-1", "-1", .toNearestOrEven)
    /* ddmin013 */ self.min64("0", "0", "0", .toNearestOrEven)
    /* ddmin014 */ self.min64("0", "1", "0", .toNearestOrEven)
    /* ddmin015 */ self.min64("0", "2", "0", .toNearestOrEven)
    /* ddmin016 */ self.min64("1", "-2", "-2", .toNearestOrEven)
    /* ddmin017 */ self.min64("1", "-1", "-1", .toNearestOrEven)
    /* ddmin018 */ self.min64("1", "0", "0", .toNearestOrEven)
    /* ddmin019 */ self.min64("1", "1", "1", .toNearestOrEven)
    /* ddmin020 */ self.min64("1", "2", "1", .toNearestOrEven)
    /* ddmin021 */ self.min64("2", "-2", "-2", .toNearestOrEven)
    /* ddmin022 */ self.min64("2", "-1", "-1", .toNearestOrEven)
    /* ddmin023 */ self.min64("2", "0", "0", .toNearestOrEven)
    /* ddmin025 */ self.min64("2", "1", "1", .toNearestOrEven)
    /* ddmin026 */ self.min64("2", "2", "2", .toNearestOrEven)
    /* ddmin030 */ self.min64("0", "0", "0", .toNearestOrEven)
    /* ddmin031 */ self.min64("0", "-0", "-0", .toNearestOrEven)
    /* ddmin032 */ self.min64("0", "-0.0", "-0.0", .toNearestOrEven)
    /* ddmin033 */ self.min64("0", "0.0", "0.0", .toNearestOrEven)
    /* ddmin034 */ self.min64("-0", "0", "-0", .toNearestOrEven)
    /* ddmin035 */ self.min64("-0", "-0", "-0", .toNearestOrEven)
    /* ddmin036 */ self.min64("-0", "-0.0", "-0", .toNearestOrEven)
    /* ddmin037 */ self.min64("-0", "0.0", "-0", .toNearestOrEven)
    /* ddmin038 */ self.min64("0.0", "0", "0.0", .toNearestOrEven)
    /* ddmin039 */ self.min64("0.0", "-0", "-0", .toNearestOrEven)
    /* ddmin040 */ self.min64("0.0", "-0.0", "-0.0", .toNearestOrEven)
    /* ddmin041 */ self.min64("0.0", "0.0", "0.0", .toNearestOrEven)
    /* ddmin042 */ self.min64("-0.0", "0", "-0.0", .toNearestOrEven)
    /* ddmin043 */ self.min64("-0.0", "-0", "-0", .toNearestOrEven)
    /* ddmin044 */ self.min64("-0.0", "-0.0", "-0.0", .toNearestOrEven)
    /* ddmin045 */ self.min64("-0.0", "0.0", "-0.0", .toNearestOrEven)
    /* ddmin046 */ self.min64("0E1", "-0E1", "-0E+1", .toNearestOrEven)
    /* ddmin047 */ self.min64("-0E1", "0E2", "-0E+1", .toNearestOrEven)
    /* ddmin048 */ self.min64("0E2", "0E1", "0E+1", .toNearestOrEven)
    /* ddmin049 */ self.min64("0E1", "0E2", "0E+1", .toNearestOrEven)
    /* ddmin050 */ self.min64("-0E3", "-0E2", "-0E+3", .toNearestOrEven)
    /* ddmin051 */ self.min64("-0E2", "-0E3", "-0E+3", .toNearestOrEven)
    /* ddmin090 */ self.min64("Inf", "-Inf", "-Infinity", .toNearestOrEven)
    /* ddmin091 */ self.min64("Inf", "-1000", "-1000", .toNearestOrEven)
    /* ddmin092 */ self.min64("Inf", "-1", "-1", .toNearestOrEven)
    /* ddmin093 */ self.min64("Inf", "-0", "-0", .toNearestOrEven)
    /* ddmin094 */ self.min64("Inf", "0", "0", .toNearestOrEven)
    /* ddmin095 */ self.min64("Inf", "1", "1", .toNearestOrEven)
    /* ddmin096 */ self.min64("Inf", "1000", "1000", .toNearestOrEven)
    /* ddmin097 */ self.min64("Inf", "Inf", "Infinity", .toNearestOrEven)
    /* ddmin098 */ self.min64("-1000", "Inf", "-1000", .toNearestOrEven)
    /* ddmin099 */ self.min64("-Inf", "Inf", "-Infinity", .toNearestOrEven)
    /* ddmin100 */ self.min64("-1", "Inf", "-1", .toNearestOrEven)
    /* ddmin101 */ self.min64("-0", "Inf", "-0", .toNearestOrEven)
    /* ddmin102 */ self.min64("0", "Inf", "0", .toNearestOrEven)
    /* ddmin103 */ self.min64("1", "Inf", "1", .toNearestOrEven)
    /* ddmin104 */ self.min64("1000", "Inf", "1000", .toNearestOrEven)
    /* ddmin105 */ self.min64("Inf", "Inf", "Infinity", .toNearestOrEven)
    /* ddmin120 */ self.min64("-Inf", "-Inf", "-Infinity", .toNearestOrEven)
    /* ddmin121 */ self.min64("-Inf", "-1000", "-Infinity", .toNearestOrEven)
    /* ddmin122 */ self.min64("-Inf", "-1", "-Infinity", .toNearestOrEven)
    /* ddmin123 */ self.min64("-Inf", "-0", "-Infinity", .toNearestOrEven)
    /* ddmin124 */ self.min64("-Inf", "0", "-Infinity", .toNearestOrEven)
    /* ddmin125 */ self.min64("-Inf", "1", "-Infinity", .toNearestOrEven)
    /* ddmin126 */ self.min64("-Inf", "1000", "-Infinity", .toNearestOrEven)
    /* ddmin127 */ self.min64("-Inf", "Inf", "-Infinity", .toNearestOrEven)
    /* ddmin128 */ self.min64("-Inf", "-Inf", "-Infinity", .toNearestOrEven)
    /* ddmin129 */ self.min64("-1000", "-Inf", "-Infinity", .toNearestOrEven)
    /* ddmin130 */ self.min64("-1", "-Inf", "-Infinity", .toNearestOrEven)
    /* ddmin131 */ self.min64("-0", "-Inf", "-Infinity", .toNearestOrEven)
    /* ddmin132 */ self.min64("0", "-Inf", "-Infinity", .toNearestOrEven)
    /* ddmin133 */ self.min64("1", "-Inf", "-Infinity", .toNearestOrEven)
    /* ddmin134 */ self.min64("1000", "-Inf", "-Infinity", .toNearestOrEven)
    /* ddmin135 */ self.min64("Inf", "-Inf", "-Infinity", .toNearestOrEven)
    /* ddmin141 */ self.min64("NaN", "-Inf", "-Infinity", .toNearestOrEven)
    /* ddmin142 */ self.min64("NaN", "-1000", "-1000", .toNearestOrEven)
    /* ddmin143 */ self.min64("NaN", "-1", "-1", .toNearestOrEven)
    /* ddmin144 */ self.min64("NaN", "-0", "-0", .toNearestOrEven)
    /* ddmin145 */ self.min64("NaN", "0", "0", .toNearestOrEven)
    /* ddmin146 */ self.min64("NaN", "1", "1", .toNearestOrEven)
    /* ddmin147 */ self.min64("NaN", "1000", "1000", .toNearestOrEven)
    /* ddmin148 */ self.min64("NaN", "Inf", "Infinity", .toNearestOrEven)
    /* ddmin149 */ self.min64("NaN", "NaN", "NaN", .toNearestOrEven)
    /* ddmin150 */ self.min64("-Inf", "NaN", "-Infinity", .toNearestOrEven)
    /* ddmin151 */ self.min64("-1000", "NaN", "-1000", .toNearestOrEven)
    /* ddmin152 */ self.min64("-1", "-NaN", "-1", .toNearestOrEven)
    /* ddmin153 */ self.min64("-0", "NaN", "-0", .toNearestOrEven)
    /* ddmin154 */ self.min64("0", "-NaN", "0", .toNearestOrEven)
    /* ddmin155 */ self.min64("1", "NaN", "1", .toNearestOrEven)
    /* ddmin156 */ self.min64("1000", "NaN", "1000", .toNearestOrEven)
    /* ddmin157 */ self.min64("Inf", "NaN", "Infinity", .toNearestOrEven)
    /* ddmin161 */ self.min64("sNaN", "-Inf", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmin162 */ self.min64("sNaN", "-1000", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmin163 */ self.min64("sNaN", "-1", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmin164 */ self.min64("sNaN", "-0", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmin165 */ self.min64("-sNaN", "0", "-NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmin166 */ self.min64("-sNaN", "1", "-NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmin167 */ self.min64("sNaN", "1000", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmin168 */ self.min64("sNaN", "NaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmin169 */ self.min64("sNaN", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmin170 */ self.min64("NaN", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmin171 */ self.min64("-Inf", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmin172 */ self.min64("-1000", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmin173 */ self.min64("-1", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmin174 */ self.min64("-0", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmin175 */ self.min64("0", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmin176 */ self.min64("1", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmin177 */ self.min64("1000", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmin178 */ self.min64("Inf", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmin179 */ self.min64("NaN", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmin181 */ self.min64("NaN(0x9)", "-Inf", "-Infinity", .toNearestOrEven)
    /* ddmin182 */ self.min64("-NaN(0x8)", "9990", "9990", .toNearestOrEven)
    /* ddmin183 */ self.min64("NaN(0x47)", "Inf", "Infinity", .toNearestOrEven)
    /* ddmin184 */ self.min64("NaN(0x1)", "NaN(0x36)", "NaN(0x1)", .toNearestOrEven)
    /* ddmin185 */ self.min64("NaN(0x16)", "-NaN(0x35)", "NaN(0x16)", .toNearestOrEven)
    /* ddmin186 */ self.min64("-NaN(0x3)", "NaN(0x6)", "-NaN(0x3)", .toNearestOrEven)
    /* ddmin187 */ self.min64("-NaN(0x2c)", "NaN(0x7)", "-NaN(0x2c)", .toNearestOrEven)
    /* ddmin188 */ self.min64("-Inf", "NaN(0x29)", "-Infinity", .toNearestOrEven)
    /* ddmin189 */ self.min64("-9999", "-NaN(0x21)", "-9999", .toNearestOrEven)
    /* ddmin190 */ self.min64("Inf", "NaN(0x2)", "Infinity", .toNearestOrEven)
    /* ddmin191 */ self.min64("sNaN(0x63)", "-Inf", "NaN(0x63)", .toNearestOrEven, .isInvalidOperation)
    /* ddmin192 */ self.min64("sNaN(0x62)", "-11", "NaN(0x62)", .toNearestOrEven, .isInvalidOperation)
    /* ddmin193 */ self.min64("-sNaN(0x61)", "NaN(0x8)", "-NaN(0x61)", .toNearestOrEven, .isInvalidOperation)
    /* ddmin194 */ self.min64("sNaN(0x45)", "sNaN(0x5e)", "NaN(0x45)", .toNearestOrEven, .isInvalidOperation)
    /* ddmin195 */ self.min64("NaN(0x5f)", "sNaN(0x5d)", "NaN(0x5d)", .toNearestOrEven, .isInvalidOperation)
    /* ddmin196 */ self.min64("-Inf", "sNaN(0x5c)", "NaN(0x5c)", .toNearestOrEven, .isInvalidOperation)
    /* ddmin197 */ self.min64("088", "sNaN(0x5b)", "NaN(0x5b)", .toNearestOrEven, .isInvalidOperation)
    /* ddmin198 */ self.min64("Inf", "-sNaN(0x5a)", "-NaN(0x5a)", .toNearestOrEven, .isInvalidOperation)
    /* ddmin199 */ self.min64("NaN", "sNaN(0x56)", "NaN(0x56)", .toNearestOrEven, .isInvalidOperation)
    /* ddmin221 */ self.min64("-12345678000", "1", "-12345678000", .toNearestOrEven)
    /* ddmin222 */ self.min64("1", "-12345678000", "-12345678000", .toNearestOrEven)
    /* ddmin223 */ self.min64("-1234567800", "1", "-1234567800", .toNearestOrEven)
    /* ddmin224 */ self.min64("1", "-1234567800", "-1234567800", .toNearestOrEven)
    /* ddmin225 */ self.min64("-1234567890", "1", "-1234567890", .toNearestOrEven)
    /* ddmin226 */ self.min64("1", "-1234567890", "-1234567890", .toNearestOrEven)
    /* ddmin227 */ self.min64("-1234567891", "1", "-1234567891", .toNearestOrEven)
    /* ddmin228 */ self.min64("1", "-1234567891", "-1234567891", .toNearestOrEven)
    /* ddmin229 */ self.min64("-12345678901", "1", "-12345678901", .toNearestOrEven)
    /* ddmin230 */ self.min64("1", "-12345678901", "-12345678901", .toNearestOrEven)
    /* ddmin231 */ self.min64("-1234567896", "1", "-1234567896", .toNearestOrEven)
    /* ddmin232 */ self.min64("1", "-1234567896", "-1234567896", .toNearestOrEven)
    /* ddmin233 */ self.min64("1234567891", "1", "1", .toNearestOrEven)
    /* ddmin234 */ self.min64("1", "1234567891", "1", .toNearestOrEven)
    /* ddmin235 */ self.min64("12345678901", "1", "1", .toNearestOrEven)
    /* ddmin236 */ self.min64("1", "12345678901", "1", .toNearestOrEven)
    /* ddmin237 */ self.min64("1234567896", "1", "1", .toNearestOrEven)
    /* ddmin238 */ self.min64("1", "1234567896", "1", .toNearestOrEven)
    /* ddmin280 */ self.min64("3", "2", "2", .toNearestOrEven)
    /* ddmin281 */ self.min64("-10", "3", "-10", .toNearestOrEven)
    /* ddmin282 */ self.min64("1.0", "1", "1.0", .toNearestOrEven)
    /* ddmin283 */ self.min64("1", "1.0", "1.0", .toNearestOrEven)
    /* ddmin284 */ self.min64("7", "NaN", "7", .toNearestOrEven)
    /* ddmin401 */ self.min64("Inf", "1.1", "1.1", .toNearestOrEven)
    /* ddmin402 */ self.min64("1.1", "1", "1", .toNearestOrEven)
    /* ddmin403 */ self.min64("1", "1.0", "1.0", .toNearestOrEven)
    /* ddmin404 */ self.min64("1.0", "0.1", "0.1", .toNearestOrEven)
    /* ddmin405 */ self.min64("0.1", "0.10", "0.10", .toNearestOrEven)
    /* ddmin406 */ self.min64("0.10", "0.100", "0.100", .toNearestOrEven)
    /* ddmin407 */ self.min64("0.10", "0", "0", .toNearestOrEven)
    /* ddmin408 */ self.min64("0", "0.0", "0.0", .toNearestOrEven)
    /* ddmin409 */ self.min64("0.0", "-0", "-0", .toNearestOrEven)
    /* ddmin410 */ self.min64("0.0", "-0.0", "-0.0", .toNearestOrEven)
    /* ddmin411 */ self.min64("0.00", "-0.0", "-0.0", .toNearestOrEven)
    /* ddmin412 */ self.min64("0.0", "-0.00", "-0.00", .toNearestOrEven)
    /* ddmin413 */ self.min64("0", "-0.0", "-0.0", .toNearestOrEven)
    /* ddmin414 */ self.min64("0", "-0", "-0", .toNearestOrEven)
    /* ddmin415 */ self.min64("-0.0", "-0", "-0", .toNearestOrEven)
    /* ddmin416 */ self.min64("-0", "-0.100", "-0.100", .toNearestOrEven)
    /* ddmin417 */ self.min64("-0.100", "-0.10", "-0.10", .toNearestOrEven)
    /* ddmin418 */ self.min64("-0.10", "-0.1", "-0.1", .toNearestOrEven)
    /* ddmin419 */ self.min64("-0.1", "-1.0", "-1.0", .toNearestOrEven)
    /* ddmin420 */ self.min64("-1.0", "-1", "-1", .toNearestOrEven)
    /* ddmin421 */ self.min64("-1", "-1.1", "-1.1", .toNearestOrEven)
    /* ddmin423 */ self.min64("-1.1", "-Inf", "-Infinity", .toNearestOrEven)
    /* ddmin431 */ self.min64("1.1", "Inf", "1.1", .toNearestOrEven)
    /* ddmin432 */ self.min64("1", "1.1", "1", .toNearestOrEven)
    /* ddmin433 */ self.min64("1.0", "1", "1.0", .toNearestOrEven)
    /* ddmin434 */ self.min64("0.1", "1.0", "0.1", .toNearestOrEven)
    /* ddmin435 */ self.min64("0.10", "0.1", "0.10", .toNearestOrEven)
    /* ddmin436 */ self.min64("0.100", "0.10", "0.100", .toNearestOrEven)
    /* ddmin437 */ self.min64("0", "0.10", "0", .toNearestOrEven)
    /* ddmin438 */ self.min64("0.0", "0", "0.0", .toNearestOrEven)
    /* ddmin439 */ self.min64("-0", "0.0", "-0", .toNearestOrEven)
    /* ddmin440 */ self.min64("-0.0", "0.0", "-0.0", .toNearestOrEven)
    /* ddmin441 */ self.min64("-0.0", "0.00", "-0.0", .toNearestOrEven)
    /* ddmin442 */ self.min64("-0.00", "0.0", "-0.00", .toNearestOrEven)
    /* ddmin443 */ self.min64("-0.0", "0", "-0.0", .toNearestOrEven)
    /* ddmin444 */ self.min64("-0", "0", "-0", .toNearestOrEven)
    /* ddmin445 */ self.min64("-0", "-0.0", "-0", .toNearestOrEven)
    /* ddmin446 */ self.min64("-0.100", "-0", "-0.100", .toNearestOrEven)
    /* ddmin447 */ self.min64("-0.10", "-0.100", "-0.10", .toNearestOrEven)
    /* ddmin448 */ self.min64("-0.1", "-0.10", "-0.1", .toNearestOrEven)
    /* ddmin449 */ self.min64("-1.0", "-0.1", "-1.0", .toNearestOrEven)
    /* ddmin450 */ self.min64("-1", "-1.0", "-1", .toNearestOrEven)
    /* ddmin451 */ self.min64("-1.1", "-1", "-1.1", .toNearestOrEven)
    /* ddmin453 */ self.min64("-Inf", "-1.1", "-Infinity", .toNearestOrEven)
    /* ddmin460 */ self.min64("1000", "1E+3", "1000", .toNearestOrEven)
    /* ddmin461 */ self.min64("1E+3", "1000", "1000", .toNearestOrEven)
    /* ddmin462 */ self.min64("1000", "-1E+3", "-1E+3", .toNearestOrEven)
    /* ddmin463 */ self.min64("1E+3", "-384", "-384", .toNearestOrEven)
    /* ddmin464 */ self.min64("-384", "1E+3", "-384", .toNearestOrEven)
    /* ddmin465 */ self.min64("-1E+3", "1000", "-1E+3", .toNearestOrEven)
    /* ddmin466 */ self.min64("-384", "-1E+3", "-1E+3", .toNearestOrEven)
    /* ddmin467 */ self.min64("-1E+3", "-384", "-1E+3", .toNearestOrEven)
    /* ddmin471 */ self.min64("1.0", "0.1", "0.1", .toNearestOrEven)
    /* ddmin472 */ self.min64("0.1", "1.0", "0.1", .toNearestOrEven)
    /* ddmin473 */ self.min64("10.0", "0.1", "0.1", .toNearestOrEven)
    /* ddmin474 */ self.min64("0.1", "10.0", "0.1", .toNearestOrEven)
    /* ddmin475 */ self.min64("100", "1.0", "1.0", .toNearestOrEven)
    /* ddmin476 */ self.min64("1.0", "100", "1.0", .toNearestOrEven)
    /* ddmin477 */ self.min64("1000", "10.0", "10.0", .toNearestOrEven)
    /* ddmin478 */ self.min64("10.0", "1000", "10.0", .toNearestOrEven)
    /* ddmin479 */ self.min64("10000", "100.0", "100.0", .toNearestOrEven)
    /* ddmin480 */ self.min64("100.0", "10000", "100.0", .toNearestOrEven)
    /* ddmin481 */ self.min64("100000", "1000.0", "1000.0", .toNearestOrEven)
    /* ddmin482 */ self.min64("1000.0", "100000", "1000.0", .toNearestOrEven)
    /* ddmin483 */ self.min64("1000000", "10000.0", "10000.0", .toNearestOrEven)
    /* ddmin484 */ self.min64("10000.0", "1000000", "10000.0", .toNearestOrEven)
    /* ddmin510 */ self.min64("1.00E-383", "0", "0", .toNearestOrEven)
    /* ddmin511 */ self.min64("0.1E-383", "0", "0", .toNearestOrEven)
    /* ddmin512 */ self.min64("0.10E-383", "0", "0", .toNearestOrEven)
    /* ddmin513 */ self.min64("0.100E-383", "0", "0", .toNearestOrEven)
    /* ddmin514 */ self.min64("0.01E-383", "0", "0", .toNearestOrEven)
    /* ddmin515 */ self.min64("0.999E-383", "0", "0", .toNearestOrEven)
    /* ddmin516 */ self.min64("0.099E-383", "0", "0", .toNearestOrEven)
    /* ddmin517 */ self.min64("0.009E-383", "0", "0", .toNearestOrEven)
    /* ddmin518 */ self.min64("0.001E-383", "0", "0", .toNearestOrEven)
    /* ddmin519 */ self.min64("0.0009E-383", "0", "0", .toNearestOrEven)
    /* ddmin520 */ self.min64("0.0001E-383", "0", "0", .toNearestOrEven)
    /* ddmin530 */ self.min64("-1.00E-383", "0", "-1.00E-383", .toNearestOrEven)
    /* ddmin531 */ self.min64("-0.1E-383", "0", "-1E-384", .toNearestOrEven)
    /* ddmin532 */ self.min64("-0.10E-383", "0", "-1.0E-384", .toNearestOrEven)
    /* ddmin533 */ self.min64("-0.100E-383", "0", "-1.00E-384", .toNearestOrEven)
    /* ddmin534 */ self.min64("-0.01E-383", "0", "-1E-385", .toNearestOrEven)
    /* ddmin535 */ self.min64("-0.999E-383", "0", "-9.99E-384", .toNearestOrEven)
    /* ddmin536 */ self.min64("-0.099E-383", "0", "-9.9E-385", .toNearestOrEven)
    /* ddmin537 */ self.min64("-0.009E-383", "0", "-9E-386", .toNearestOrEven)
    /* ddmin538 */ self.min64("-0.001E-383", "0", "-1E-386", .toNearestOrEven)
    /* ddmin539 */ self.min64("-0.0009E-383", "0", "-9E-387", .toNearestOrEven)
    /* ddmin540 */ self.min64("-0.0001E-383", "0", "-1E-387", .toNearestOrEven)
  }

  private func min64(
    _ _arg0: String,
    _ _arg1: String,
    _ _expected: String,
    _ rounding: DecimalFloatingPointRoundingRule,
    _ _expectedStatus: DecimalStatus? = nil,
    file: StaticString = #file,
    line: UInt = #line
  ) {
    guard let arg0 = self.parseDecimal64(_arg0, file, line) else { return }
    guard let arg1 = self.parseDecimal64(_arg1, file, line) else { return }
    guard let expected = self.parseDecimal64(_expected, file, line) else { return }
    let expectedStatus = _expectedStatus ?? DecimalStatus()

    var status = DecimalStatus()
    let result = Decimal64.minimum(arg0, arg1, status: &status)
    let speleotroveResult = self.toSpeleotrove_min(arg0, arg1, result: result)
    self.assertEqual(speleotroveResult, expected, file, line)
    self.assertStatus(status, expectedStatus, file, line)
  }

  func test_min128() {
    /* dqmin001 */ self.min128("-2", "-2", "-2", .toNearestOrEven)
    /* dqmin002 */ self.min128("-2", "-1", "-2", .toNearestOrEven)
    /* dqmin003 */ self.min128("-2", "0", "-2", .toNearestOrEven)
    /* dqmin004 */ self.min128("-2", "1", "-2", .toNearestOrEven)
    /* dqmin005 */ self.min128("-2", "2", "-2", .toNearestOrEven)
    /* dqmin006 */ self.min128("-1", "-2", "-2", .toNearestOrEven)
    /* dqmin007 */ self.min128("-1", "-1", "-1", .toNearestOrEven)
    /* dqmin008 */ self.min128("-1", "0", "-1", .toNearestOrEven)
    /* dqmin009 */ self.min128("-1", "1", "-1", .toNearestOrEven)
    /* dqmin010 */ self.min128("-1", "2", "-1", .toNearestOrEven)
    /* dqmin011 */ self.min128("0", "-2", "-2", .toNearestOrEven)
    /* dqmin012 */ self.min128("0", "-1", "-1", .toNearestOrEven)
    /* dqmin013 */ self.min128("0", "0", "0", .toNearestOrEven)
    /* dqmin014 */ self.min128("0", "1", "0", .toNearestOrEven)
    /* dqmin015 */ self.min128("0", "2", "0", .toNearestOrEven)
    /* dqmin016 */ self.min128("1", "-2", "-2", .toNearestOrEven)
    /* dqmin017 */ self.min128("1", "-1", "-1", .toNearestOrEven)
    /* dqmin018 */ self.min128("1", "0", "0", .toNearestOrEven)
    /* dqmin019 */ self.min128("1", "1", "1", .toNearestOrEven)
    /* dqmin020 */ self.min128("1", "2", "1", .toNearestOrEven)
    /* dqmin021 */ self.min128("2", "-2", "-2", .toNearestOrEven)
    /* dqmin022 */ self.min128("2", "-1", "-1", .toNearestOrEven)
    /* dqmin023 */ self.min128("2", "0", "0", .toNearestOrEven)
    /* dqmin025 */ self.min128("2", "1", "1", .toNearestOrEven)
    /* dqmin026 */ self.min128("2", "2", "2", .toNearestOrEven)
    /* dqmin030 */ self.min128("0", "0", "0", .toNearestOrEven)
    /* dqmin031 */ self.min128("0", "-0", "-0", .toNearestOrEven)
    /* dqmin032 */ self.min128("0", "-0.0", "-0.0", .toNearestOrEven)
    /* dqmin033 */ self.min128("0", "0.0", "0.0", .toNearestOrEven)
    /* dqmin034 */ self.min128("-0", "0", "-0", .toNearestOrEven)
    /* dqmin035 */ self.min128("-0", "-0", "-0", .toNearestOrEven)
    /* dqmin036 */ self.min128("-0", "-0.0", "-0", .toNearestOrEven)
    /* dqmin037 */ self.min128("-0", "0.0", "-0", .toNearestOrEven)
    /* dqmin038 */ self.min128("0.0", "0", "0.0", .toNearestOrEven)
    /* dqmin039 */ self.min128("0.0", "-0", "-0", .toNearestOrEven)
    /* dqmin040 */ self.min128("0.0", "-0.0", "-0.0", .toNearestOrEven)
    /* dqmin041 */ self.min128("0.0", "0.0", "0.0", .toNearestOrEven)
    /* dqmin042 */ self.min128("-0.0", "0", "-0.0", .toNearestOrEven)
    /* dqmin043 */ self.min128("-0.0", "-0", "-0", .toNearestOrEven)
    /* dqmin044 */ self.min128("-0.0", "-0.0", "-0.0", .toNearestOrEven)
    /* dqmin045 */ self.min128("-0.0", "0.0", "-0.0", .toNearestOrEven)
    /* dqmin046 */ self.min128("0E1", "-0E1", "-0E+1", .toNearestOrEven)
    /* dqmin047 */ self.min128("-0E1", "0E2", "-0E+1", .toNearestOrEven)
    /* dqmin048 */ self.min128("0E2", "0E1", "0E+1", .toNearestOrEven)
    /* dqmin049 */ self.min128("0E1", "0E2", "0E+1", .toNearestOrEven)
    /* dqmin050 */ self.min128("-0E3", "-0E2", "-0E+3", .toNearestOrEven)
    /* dqmin051 */ self.min128("-0E2", "-0E3", "-0E+3", .toNearestOrEven)
    /* dqmin090 */ self.min128("Inf", "-Inf", "-Infinity", .toNearestOrEven)
    /* dqmin091 */ self.min128("Inf", "-1000", "-1000", .toNearestOrEven)
    /* dqmin092 */ self.min128("Inf", "-1", "-1", .toNearestOrEven)
    /* dqmin093 */ self.min128("Inf", "-0", "-0", .toNearestOrEven)
    /* dqmin094 */ self.min128("Inf", "0", "0", .toNearestOrEven)
    /* dqmin095 */ self.min128("Inf", "1", "1", .toNearestOrEven)
    /* dqmin096 */ self.min128("Inf", "1000", "1000", .toNearestOrEven)
    /* dqmin097 */ self.min128("Inf", "Inf", "Infinity", .toNearestOrEven)
    /* dqmin098 */ self.min128("-1000", "Inf", "-1000", .toNearestOrEven)
    /* dqmin099 */ self.min128("-Inf", "Inf", "-Infinity", .toNearestOrEven)
    /* dqmin100 */ self.min128("-1", "Inf", "-1", .toNearestOrEven)
    /* dqmin101 */ self.min128("-0", "Inf", "-0", .toNearestOrEven)
    /* dqmin102 */ self.min128("0", "Inf", "0", .toNearestOrEven)
    /* dqmin103 */ self.min128("1", "Inf", "1", .toNearestOrEven)
    /* dqmin104 */ self.min128("1000", "Inf", "1000", .toNearestOrEven)
    /* dqmin105 */ self.min128("Inf", "Inf", "Infinity", .toNearestOrEven)
    /* dqmin120 */ self.min128("-Inf", "-Inf", "-Infinity", .toNearestOrEven)
    /* dqmin121 */ self.min128("-Inf", "-1000", "-Infinity", .toNearestOrEven)
    /* dqmin122 */ self.min128("-Inf", "-1", "-Infinity", .toNearestOrEven)
    /* dqmin123 */ self.min128("-Inf", "-0", "-Infinity", .toNearestOrEven)
    /* dqmin124 */ self.min128("-Inf", "0", "-Infinity", .toNearestOrEven)
    /* dqmin125 */ self.min128("-Inf", "1", "-Infinity", .toNearestOrEven)
    /* dqmin126 */ self.min128("-Inf", "1000", "-Infinity", .toNearestOrEven)
    /* dqmin127 */ self.min128("-Inf", "Inf", "-Infinity", .toNearestOrEven)
    /* dqmin128 */ self.min128("-Inf", "-Inf", "-Infinity", .toNearestOrEven)
    /* dqmin129 */ self.min128("-1000", "-Inf", "-Infinity", .toNearestOrEven)
    /* dqmin130 */ self.min128("-1", "-Inf", "-Infinity", .toNearestOrEven)
    /* dqmin131 */ self.min128("-0", "-Inf", "-Infinity", .toNearestOrEven)
    /* dqmin132 */ self.min128("0", "-Inf", "-Infinity", .toNearestOrEven)
    /* dqmin133 */ self.min128("1", "-Inf", "-Infinity", .toNearestOrEven)
    /* dqmin134 */ self.min128("1000", "-Inf", "-Infinity", .toNearestOrEven)
    /* dqmin135 */ self.min128("Inf", "-Inf", "-Infinity", .toNearestOrEven)
    /* dqmin141 */ self.min128("NaN", "-Inf", "-Infinity", .toNearestOrEven)
    /* dqmin142 */ self.min128("NaN", "-1000", "-1000", .toNearestOrEven)
    /* dqmin143 */ self.min128("NaN", "-1", "-1", .toNearestOrEven)
    /* dqmin144 */ self.min128("NaN", "-0", "-0", .toNearestOrEven)
    /* dqmin145 */ self.min128("NaN", "0", "0", .toNearestOrEven)
    /* dqmin146 */ self.min128("NaN", "1", "1", .toNearestOrEven)
    /* dqmin147 */ self.min128("NaN", "1000", "1000", .toNearestOrEven)
    /* dqmin148 */ self.min128("NaN", "Inf", "Infinity", .toNearestOrEven)
    /* dqmin149 */ self.min128("NaN", "NaN", "NaN", .toNearestOrEven)
    /* dqmin150 */ self.min128("-Inf", "NaN", "-Infinity", .toNearestOrEven)
    /* dqmin151 */ self.min128("-1000", "NaN", "-1000", .toNearestOrEven)
    /* dqmin152 */ self.min128("-1", "-NaN", "-1", .toNearestOrEven)
    /* dqmin153 */ self.min128("-0", "NaN", "-0", .toNearestOrEven)
    /* dqmin154 */ self.min128("0", "-NaN", "0", .toNearestOrEven)
    /* dqmin155 */ self.min128("1", "NaN", "1", .toNearestOrEven)
    /* dqmin156 */ self.min128("1000", "NaN", "1000", .toNearestOrEven)
    /* dqmin157 */ self.min128("Inf", "NaN", "Infinity", .toNearestOrEven)
    /* dqmin161 */ self.min128("sNaN", "-Inf", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmin162 */ self.min128("sNaN", "-1000", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmin163 */ self.min128("sNaN", "-1", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmin164 */ self.min128("sNaN", "-0", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmin165 */ self.min128("-sNaN", "0", "-NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmin166 */ self.min128("-sNaN", "1", "-NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmin167 */ self.min128("sNaN", "1000", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmin168 */ self.min128("sNaN", "NaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmin169 */ self.min128("sNaN", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmin170 */ self.min128("NaN", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmin171 */ self.min128("-Inf", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmin172 */ self.min128("-1000", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmin173 */ self.min128("-1", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmin174 */ self.min128("-0", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmin175 */ self.min128("0", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmin176 */ self.min128("1", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmin177 */ self.min128("1000", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmin178 */ self.min128("Inf", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmin179 */ self.min128("NaN", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmin181 */ self.min128("NaN(0x9)", "-Inf", "-Infinity", .toNearestOrEven)
    /* dqmin182 */ self.min128("-NaN(0x8)", "9990", "9990", .toNearestOrEven)
    /* dqmin183 */ self.min128("NaN(0x47)", "Inf", "Infinity", .toNearestOrEven)
    /* dqmin184 */ self.min128("NaN(0x1)", "NaN(0x36)", "NaN(0x1)", .toNearestOrEven)
    /* dqmin185 */ self.min128("NaN(0x16)", "-NaN(0x35)", "NaN(0x16)", .toNearestOrEven)
    /* dqmin186 */ self.min128("-NaN(0x3)", "NaN(0x6)", "-NaN(0x3)", .toNearestOrEven)
    /* dqmin187 */ self.min128("-NaN(0x2c)", "NaN(0x7)", "-NaN(0x2c)", .toNearestOrEven)
    /* dqmin188 */ self.min128("-Inf", "NaN(0x29)", "-Infinity", .toNearestOrEven)
    /* dqmin189 */ self.min128("-9999", "-NaN(0x21)", "-9999", .toNearestOrEven)
    /* dqmin190 */ self.min128("Inf", "NaN(0x2)", "Infinity", .toNearestOrEven)
    /* dqmin191 */ self.min128("sNaN(0x63)", "-Inf", "NaN(0x63)", .toNearestOrEven, .isInvalidOperation)
    /* dqmin192 */ self.min128("sNaN(0x62)", "-11", "NaN(0x62)", .toNearestOrEven, .isInvalidOperation)
    /* dqmin193 */ self.min128("-sNaN(0x61)", "NaN(0x8)", "-NaN(0x61)", .toNearestOrEven, .isInvalidOperation)
    /* dqmin194 */ self.min128("sNaN(0x45)", "sNaN(0x5e)", "NaN(0x45)", .toNearestOrEven, .isInvalidOperation)
    /* dqmin195 */ self.min128("NaN(0x5f)", "sNaN(0x5d)", "NaN(0x5d)", .toNearestOrEven, .isInvalidOperation)
    /* dqmin196 */ self.min128("-Inf", "sNaN(0x5c)", "NaN(0x5c)", .toNearestOrEven, .isInvalidOperation)
    /* dqmin197 */ self.min128("088", "sNaN(0x5b)", "NaN(0x5b)", .toNearestOrEven, .isInvalidOperation)
    /* dqmin198 */ self.min128("Inf", "-sNaN(0x5a)", "-NaN(0x5a)", .toNearestOrEven, .isInvalidOperation)
    /* dqmin199 */ self.min128("NaN", "sNaN(0x56)", "NaN(0x56)", .toNearestOrEven, .isInvalidOperation)
    /* dqmin221 */ self.min128("-12345678000", "1", "-12345678000", .toNearestOrEven)
    /* dqmin222 */ self.min128("1", "-12345678000", "-12345678000", .toNearestOrEven)
    /* dqmin223 */ self.min128("-1234567800", "1", "-1234567800", .toNearestOrEven)
    /* dqmin224 */ self.min128("1", "-1234567800", "-1234567800", .toNearestOrEven)
    /* dqmin225 */ self.min128("-1234567890", "1", "-1234567890", .toNearestOrEven)
    /* dqmin226 */ self.min128("1", "-1234567890", "-1234567890", .toNearestOrEven)
    /* dqmin227 */ self.min128("-1234567891", "1", "-1234567891", .toNearestOrEven)
    /* dqmin228 */ self.min128("1", "-1234567891", "-1234567891", .toNearestOrEven)
    /* dqmin229 */ self.min128("-12345678901", "1", "-12345678901", .toNearestOrEven)
    /* dqmin230 */ self.min128("1", "-12345678901", "-12345678901", .toNearestOrEven)
    /* dqmin231 */ self.min128("-1234567896", "1", "-1234567896", .toNearestOrEven)
    /* dqmin232 */ self.min128("1", "-1234567896", "-1234567896", .toNearestOrEven)
    /* dqmin233 */ self.min128("1234567891", "1", "1", .toNearestOrEven)
    /* dqmin234 */ self.min128("1", "1234567891", "1", .toNearestOrEven)
    /* dqmin235 */ self.min128("12345678901", "1", "1", .toNearestOrEven)
    /* dqmin236 */ self.min128("1", "12345678901", "1", .toNearestOrEven)
    /* dqmin237 */ self.min128("1234567896", "1", "1", .toNearestOrEven)
    /* dqmin238 */ self.min128("1", "1234567896", "1", .toNearestOrEven)
    /* dqmin280 */ self.min128("3", "2", "2", .toNearestOrEven)
    /* dqmin281 */ self.min128("-10", "3", "-10", .toNearestOrEven)
    /* dqmin282 */ self.min128("1.0", "1", "1.0", .toNearestOrEven)
    /* dqmin283 */ self.min128("1", "1.0", "1.0", .toNearestOrEven)
    /* dqmin284 */ self.min128("7", "NaN", "7", .toNearestOrEven)
    /* dqmin401 */ self.min128("Inf", "1.1", "1.1", .toNearestOrEven)
    /* dqmin402 */ self.min128("1.1", "1", "1", .toNearestOrEven)
    /* dqmin403 */ self.min128("1", "1.0", "1.0", .toNearestOrEven)
    /* dqmin404 */ self.min128("1.0", "0.1", "0.1", .toNearestOrEven)
    /* dqmin405 */ self.min128("0.1", "0.10", "0.10", .toNearestOrEven)
    /* dqmin406 */ self.min128("0.10", "0.100", "0.100", .toNearestOrEven)
    /* dqmin407 */ self.min128("0.10", "0", "0", .toNearestOrEven)
    /* dqmin408 */ self.min128("0", "0.0", "0.0", .toNearestOrEven)
    /* dqmin409 */ self.min128("0.0", "-0", "-0", .toNearestOrEven)
    /* dqmin410 */ self.min128("0.0", "-0.0", "-0.0", .toNearestOrEven)
    /* dqmin411 */ self.min128("0.00", "-0.0", "-0.0", .toNearestOrEven)
    /* dqmin412 */ self.min128("0.0", "-0.00", "-0.00", .toNearestOrEven)
    /* dqmin413 */ self.min128("0", "-0.0", "-0.0", .toNearestOrEven)
    /* dqmin414 */ self.min128("0", "-0", "-0", .toNearestOrEven)
    /* dqmin415 */ self.min128("-0.0", "-0", "-0", .toNearestOrEven)
    /* dqmin416 */ self.min128("-0", "-0.100", "-0.100", .toNearestOrEven)
    /* dqmin417 */ self.min128("-0.100", "-0.10", "-0.10", .toNearestOrEven)
    /* dqmin418 */ self.min128("-0.10", "-0.1", "-0.1", .toNearestOrEven)
    /* dqmin419 */ self.min128("-0.1", "-1.0", "-1.0", .toNearestOrEven)
    /* dqmin420 */ self.min128("-1.0", "-1", "-1", .toNearestOrEven)
    /* dqmin421 */ self.min128("-1", "-1.1", "-1.1", .toNearestOrEven)
    /* dqmin423 */ self.min128("-1.1", "-Inf", "-Infinity", .toNearestOrEven)
    /* dqmin431 */ self.min128("1.1", "Inf", "1.1", .toNearestOrEven)
    /* dqmin432 */ self.min128("1", "1.1", "1", .toNearestOrEven)
    /* dqmin433 */ self.min128("1.0", "1", "1.0", .toNearestOrEven)
    /* dqmin434 */ self.min128("0.1", "1.0", "0.1", .toNearestOrEven)
    /* dqmin435 */ self.min128("0.10", "0.1", "0.10", .toNearestOrEven)
    /* dqmin436 */ self.min128("0.100", "0.10", "0.100", .toNearestOrEven)
    /* dqmin437 */ self.min128("0", "0.10", "0", .toNearestOrEven)
    /* dqmin438 */ self.min128("0.0", "0", "0.0", .toNearestOrEven)
    /* dqmin439 */ self.min128("-0", "0.0", "-0", .toNearestOrEven)
    /* dqmin440 */ self.min128("-0.0", "0.0", "-0.0", .toNearestOrEven)
    /* dqmin441 */ self.min128("-0.0", "0.00", "-0.0", .toNearestOrEven)
    /* dqmin442 */ self.min128("-0.00", "0.0", "-0.00", .toNearestOrEven)
    /* dqmin443 */ self.min128("-0.0", "0", "-0.0", .toNearestOrEven)
    /* dqmin444 */ self.min128("-0", "0", "-0", .toNearestOrEven)
    /* dqmin445 */ self.min128("-0", "-0.0", "-0", .toNearestOrEven)
    /* dqmin446 */ self.min128("-0.100", "-0", "-0.100", .toNearestOrEven)
    /* dqmin447 */ self.min128("-0.10", "-0.100", "-0.10", .toNearestOrEven)
    /* dqmin448 */ self.min128("-0.1", "-0.10", "-0.1", .toNearestOrEven)
    /* dqmin449 */ self.min128("-1.0", "-0.1", "-1.0", .toNearestOrEven)
    /* dqmin450 */ self.min128("-1", "-1.0", "-1", .toNearestOrEven)
    /* dqmin451 */ self.min128("-1.1", "-1", "-1.1", .toNearestOrEven)
    /* dqmin453 */ self.min128("-Inf", "-1.1", "-Infinity", .toNearestOrEven)
    /* dqmin460 */ self.min128("1000", "1E+3", "1000", .toNearestOrEven)
    /* dqmin461 */ self.min128("1E+3", "1000", "1000", .toNearestOrEven)
    /* dqmin462 */ self.min128("1000", "-1E+3", "-1E+3", .toNearestOrEven)
    /* dqmin463 */ self.min128("1E+3", "-384", "-384", .toNearestOrEven)
    /* dqmin464 */ self.min128("-384", "1E+3", "-384", .toNearestOrEven)
    /* dqmin465 */ self.min128("-1E+3", "1000", "-1E+3", .toNearestOrEven)
    /* dqmin466 */ self.min128("-384", "-1E+3", "-1E+3", .toNearestOrEven)
    /* dqmin467 */ self.min128("-1E+3", "-384", "-1E+3", .toNearestOrEven)
    /* dqmin471 */ self.min128("1.0", "0.1", "0.1", .toNearestOrEven)
    /* dqmin472 */ self.min128("0.1", "1.0", "0.1", .toNearestOrEven)
    /* dqmin473 */ self.min128("10.0", "0.1", "0.1", .toNearestOrEven)
    /* dqmin474 */ self.min128("0.1", "10.0", "0.1", .toNearestOrEven)
    /* dqmin475 */ self.min128("100", "1.0", "1.0", .toNearestOrEven)
    /* dqmin476 */ self.min128("1.0", "100", "1.0", .toNearestOrEven)
    /* dqmin477 */ self.min128("1000", "10.0", "10.0", .toNearestOrEven)
    /* dqmin478 */ self.min128("10.0", "1000", "10.0", .toNearestOrEven)
    /* dqmin479 */ self.min128("10000", "100.0", "100.0", .toNearestOrEven)
    /* dqmin480 */ self.min128("100.0", "10000", "100.0", .toNearestOrEven)
    /* dqmin481 */ self.min128("100000", "1000.0", "1000.0", .toNearestOrEven)
    /* dqmin482 */ self.min128("1000.0", "100000", "1000.0", .toNearestOrEven)
    /* dqmin483 */ self.min128("1000000", "10000.0", "10000.0", .toNearestOrEven)
    /* dqmin484 */ self.min128("10000.0", "1000000", "10000.0", .toNearestOrEven)
    /* dqmin510 */ self.min128("1.00E-6143", "0", "0", .toNearestOrEven)
    /* dqmin511 */ self.min128("0.1E-6143", "0", "0", .toNearestOrEven)
    /* dqmin512 */ self.min128("0.10E-6143", "0", "0", .toNearestOrEven)
    /* dqmin513 */ self.min128("0.100E-6143", "0", "0", .toNearestOrEven)
    /* dqmin514 */ self.min128("0.01E-6143", "0", "0", .toNearestOrEven)
    /* dqmin515 */ self.min128("0.999E-6143", "0", "0", .toNearestOrEven)
    /* dqmin516 */ self.min128("0.099E-6143", "0", "0", .toNearestOrEven)
    /* dqmin517 */ self.min128("0.009E-6143", "0", "0", .toNearestOrEven)
    /* dqmin518 */ self.min128("0.001E-6143", "0", "0", .toNearestOrEven)
    /* dqmin519 */ self.min128("0.0009E-6143", "0", "0", .toNearestOrEven)
    /* dqmin520 */ self.min128("0.0001E-6143", "0", "0", .toNearestOrEven)
    /* dqmin530 */ self.min128("-1.00E-6143", "0", "-1.00E-6143", .toNearestOrEven)
    /* dqmin531 */ self.min128("-0.1E-6143", "0", "-1E-6144", .toNearestOrEven)
    /* dqmin532 */ self.min128("-0.10E-6143", "0", "-1.0E-6144", .toNearestOrEven)
    /* dqmin533 */ self.min128("-0.100E-6143", "0", "-1.00E-6144", .toNearestOrEven)
    /* dqmin534 */ self.min128("-0.01E-6143", "0", "-1E-6145", .toNearestOrEven)
    /* dqmin535 */ self.min128("-0.999E-6143", "0", "-9.99E-6144", .toNearestOrEven)
    /* dqmin536 */ self.min128("-0.099E-6143", "0", "-9.9E-6145", .toNearestOrEven)
    /* dqmin537 */ self.min128("-0.009E-6143", "0", "-9E-6146", .toNearestOrEven)
    /* dqmin538 */ self.min128("-0.001E-6143", "0", "-1E-6146", .toNearestOrEven)
    /* dqmin539 */ self.min128("-0.0009E-6143", "0", "-9E-6147", .toNearestOrEven)
    /* dqmin540 */ self.min128("-0.0001E-6143", "0", "-1E-6147", .toNearestOrEven)
  }

  private func min128(
    _ _arg0: String,
    _ _arg1: String,
    _ _expected: String,
    _ rounding: DecimalFloatingPointRoundingRule,
    _ _expectedStatus: DecimalStatus? = nil,
    file: StaticString = #file,
    line: UInt = #line
  ) {
    guard let arg0 = self.parseDecimal128(_arg0, file, line) else { return }
    guard let arg1 = self.parseDecimal128(_arg1, file, line) else { return }
    guard let expected = self.parseDecimal128(_expected, file, line) else { return }
    let expectedStatus = _expectedStatus ?? DecimalStatus()

    var status = DecimalStatus()
    let result = Decimal128.minimum(arg0, arg1, status: &status)
    let speleotroveResult = self.toSpeleotrove_min(arg0, arg1, result: result)
    self.assertEqual(speleotroveResult, expected, file, line)
    self.assertStatus(status, expectedStatus, file, line)
  }

  // MARK: - Minmag

  func test_minmag64() {
    /* ddmng001 */ self.minmag64("-2", "-2", "-2", .toNearestOrEven)
    /* ddmng002 */ self.minmag64("-2", "-1", "-1", .toNearestOrEven)
    /* ddmng003 */ self.minmag64("-2", "0", "0", .toNearestOrEven)
    /* ddmng004 */ self.minmag64("-2", "1", "1", .toNearestOrEven)
    /* ddmng005 */ self.minmag64("-2", "2", "-2", .toNearestOrEven)
    /* ddmng006 */ self.minmag64("-1", "-2", "-1", .toNearestOrEven)
    /* ddmng007 */ self.minmag64("-1", "-1", "-1", .toNearestOrEven)
    /* ddmng008 */ self.minmag64("-1", "0", "0", .toNearestOrEven)
    /* ddmng009 */ self.minmag64("-1", "1", "-1", .toNearestOrEven)
    /* ddmng010 */ self.minmag64("-1", "2", "-1", .toNearestOrEven)
    /* ddmng011 */ self.minmag64("0", "-2", "0", .toNearestOrEven)
    /* ddmng012 */ self.minmag64("0", "-1", "0", .toNearestOrEven)
    /* ddmng013 */ self.minmag64("0", "0", "0", .toNearestOrEven)
    /* ddmng014 */ self.minmag64("0", "1", "0", .toNearestOrEven)
    /* ddmng015 */ self.minmag64("0", "2", "0", .toNearestOrEven)
    /* ddmng016 */ self.minmag64("1", "-2", "1", .toNearestOrEven)
    /* ddmng017 */ self.minmag64("1", "-1", "-1", .toNearestOrEven)
    /* ddmng018 */ self.minmag64("1", "0", "0", .toNearestOrEven)
    /* ddmng019 */ self.minmag64("1", "1", "1", .toNearestOrEven)
    /* ddmng020 */ self.minmag64("1", "2", "1", .toNearestOrEven)
    /* ddmng021 */ self.minmag64("2", "-2", "-2", .toNearestOrEven)
    /* ddmng022 */ self.minmag64("2", "-1", "-1", .toNearestOrEven)
    /* ddmng023 */ self.minmag64("2", "0", "0", .toNearestOrEven)
    /* ddmng025 */ self.minmag64("2", "1", "1", .toNearestOrEven)
    /* ddmng026 */ self.minmag64("2", "2", "2", .toNearestOrEven)
    /* ddmng030 */ self.minmag64("0", "0", "0", .toNearestOrEven)
    /* ddmng031 */ self.minmag64("0", "-0", "-0", .toNearestOrEven)
    /* ddmng032 */ self.minmag64("0", "-0.0", "-0.0", .toNearestOrEven)
    /* ddmng033 */ self.minmag64("0", "0.0", "0.0", .toNearestOrEven)
    /* ddmng034 */ self.minmag64("-0", "0", "-0", .toNearestOrEven)
    /* ddmng035 */ self.minmag64("-0", "-0", "-0", .toNearestOrEven)
    /* ddmng036 */ self.minmag64("-0", "-0.0", "-0", .toNearestOrEven)
    /* ddmng037 */ self.minmag64("-0", "0.0", "-0", .toNearestOrEven)
    /* ddmng038 */ self.minmag64("0.0", "0", "0.0", .toNearestOrEven)
    /* ddmng039 */ self.minmag64("0.0", "-0", "-0", .toNearestOrEven)
    /* ddmng040 */ self.minmag64("0.0", "-0.0", "-0.0", .toNearestOrEven)
    /* ddmng041 */ self.minmag64("0.0", "0.0", "0.0", .toNearestOrEven)
    /* ddmng042 */ self.minmag64("-0.0", "0", "-0.0", .toNearestOrEven)
    /* ddmng043 */ self.minmag64("-0.0", "-0", "-0", .toNearestOrEven)
    /* ddmng044 */ self.minmag64("-0.0", "-0.0", "-0.0", .toNearestOrEven)
    /* ddmng045 */ self.minmag64("-0.0", "0.0", "-0.0", .toNearestOrEven)
    /* ddmng046 */ self.minmag64("0E1", "-0E1", "-0E+1", .toNearestOrEven)
    /* ddmng047 */ self.minmag64("-0E1", "0E2", "-0E+1", .toNearestOrEven)
    /* ddmng048 */ self.minmag64("0E2", "0E1", "0E+1", .toNearestOrEven)
    /* ddmng049 */ self.minmag64("0E1", "0E2", "0E+1", .toNearestOrEven)
    /* ddmng050 */ self.minmag64("-0E3", "-0E2", "-0E+3", .toNearestOrEven)
    /* ddmng051 */ self.minmag64("-0E2", "-0E3", "-0E+3", .toNearestOrEven)
    /* ddmng090 */ self.minmag64("Inf", "-Inf", "-Infinity", .toNearestOrEven)
    /* ddmng091 */ self.minmag64("Inf", "-1000", "-1000", .toNearestOrEven)
    /* ddmng092 */ self.minmag64("Inf", "-1", "-1", .toNearestOrEven)
    /* ddmng093 */ self.minmag64("Inf", "-0", "-0", .toNearestOrEven)
    /* ddmng094 */ self.minmag64("Inf", "0", "0", .toNearestOrEven)
    /* ddmng095 */ self.minmag64("Inf", "1", "1", .toNearestOrEven)
    /* ddmng096 */ self.minmag64("Inf", "1000", "1000", .toNearestOrEven)
    /* ddmng097 */ self.minmag64("Inf", "Inf", "Infinity", .toNearestOrEven)
    /* ddmng098 */ self.minmag64("-1000", "Inf", "-1000", .toNearestOrEven)
    /* ddmng099 */ self.minmag64("-Inf", "Inf", "-Infinity", .toNearestOrEven)
    /* ddmng100 */ self.minmag64("-1", "Inf", "-1", .toNearestOrEven)
    /* ddmng101 */ self.minmag64("-0", "Inf", "-0", .toNearestOrEven)
    /* ddmng102 */ self.minmag64("0", "Inf", "0", .toNearestOrEven)
    /* ddmng103 */ self.minmag64("1", "Inf", "1", .toNearestOrEven)
    /* ddmng104 */ self.minmag64("1000", "Inf", "1000", .toNearestOrEven)
    /* ddmng105 */ self.minmag64("Inf", "Inf", "Infinity", .toNearestOrEven)
    /* ddmng120 */ self.minmag64("-Inf", "-Inf", "-Infinity", .toNearestOrEven)
    /* ddmng121 */ self.minmag64("-Inf", "-1000", "-1000", .toNearestOrEven)
    /* ddmng122 */ self.minmag64("-Inf", "-1", "-1", .toNearestOrEven)
    /* ddmng123 */ self.minmag64("-Inf", "-0", "-0", .toNearestOrEven)
    /* ddmng124 */ self.minmag64("-Inf", "0", "0", .toNearestOrEven)
    /* ddmng125 */ self.minmag64("-Inf", "1", "1", .toNearestOrEven)
    /* ddmng126 */ self.minmag64("-Inf", "1000", "1000", .toNearestOrEven)
    /* ddmng127 */ self.minmag64("-Inf", "Inf", "-Infinity", .toNearestOrEven)
    /* ddmng128 */ self.minmag64("-Inf", "-Inf", "-Infinity", .toNearestOrEven)
    /* ddmng129 */ self.minmag64("-1000", "-Inf", "-1000", .toNearestOrEven)
    /* ddmng130 */ self.minmag64("-1", "-Inf", "-1", .toNearestOrEven)
    /* ddmng131 */ self.minmag64("-0", "-Inf", "-0", .toNearestOrEven)
    /* ddmng132 */ self.minmag64("0", "-Inf", "0", .toNearestOrEven)
    /* ddmng133 */ self.minmag64("1", "-Inf", "1", .toNearestOrEven)
    /* ddmng134 */ self.minmag64("1000", "-Inf", "1000", .toNearestOrEven)
    /* ddmng135 */ self.minmag64("Inf", "-Inf", "-Infinity", .toNearestOrEven)
    /* ddmng141 */ self.minmag64("NaN", "-Inf", "-Infinity", .toNearestOrEven)
    /* ddmng142 */ self.minmag64("NaN", "-1000", "-1000", .toNearestOrEven)
    /* ddmng143 */ self.minmag64("NaN", "-1", "-1", .toNearestOrEven)
    /* ddmng144 */ self.minmag64("NaN", "-0", "-0", .toNearestOrEven)
    /* ddmng145 */ self.minmag64("NaN", "0", "0", .toNearestOrEven)
    /* ddmng146 */ self.minmag64("NaN", "1", "1", .toNearestOrEven)
    /* ddmng147 */ self.minmag64("NaN", "1000", "1000", .toNearestOrEven)
    /* ddmng148 */ self.minmag64("NaN", "Inf", "Infinity", .toNearestOrEven)
    /* ddmng149 */ self.minmag64("NaN", "NaN", "NaN", .toNearestOrEven)
    /* ddmng150 */ self.minmag64("-Inf", "NaN", "-Infinity", .toNearestOrEven)
    /* ddmng151 */ self.minmag64("-1000", "NaN", "-1000", .toNearestOrEven)
    /* ddmng152 */ self.minmag64("-1", "-NaN", "-1", .toNearestOrEven)
    /* ddmng153 */ self.minmag64("-0", "NaN", "-0", .toNearestOrEven)
    /* ddmng154 */ self.minmag64("0", "-NaN", "0", .toNearestOrEven)
    /* ddmng155 */ self.minmag64("1", "NaN", "1", .toNearestOrEven)
    /* ddmng156 */ self.minmag64("1000", "NaN", "1000", .toNearestOrEven)
    /* ddmng157 */ self.minmag64("Inf", "NaN", "Infinity", .toNearestOrEven)
    /* ddmng161 */ self.minmag64("sNaN", "-Inf", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmng162 */ self.minmag64("sNaN", "-1000", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmng163 */ self.minmag64("sNaN", "-1", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmng164 */ self.minmag64("sNaN", "-0", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmng165 */ self.minmag64("-sNaN", "0", "-NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmng166 */ self.minmag64("-sNaN", "1", "-NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmng167 */ self.minmag64("sNaN", "1000", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmng168 */ self.minmag64("sNaN", "NaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmng169 */ self.minmag64("sNaN", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmng170 */ self.minmag64("NaN", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmng171 */ self.minmag64("-Inf", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmng172 */ self.minmag64("-1000", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmng173 */ self.minmag64("-1", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmng174 */ self.minmag64("-0", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmng175 */ self.minmag64("0", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmng176 */ self.minmag64("1", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmng177 */ self.minmag64("1000", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmng178 */ self.minmag64("Inf", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmng179 */ self.minmag64("NaN", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmng181 */ self.minmag64("NaN(0x9)", "-Inf", "-Infinity", .toNearestOrEven)
    /* ddmng182 */ self.minmag64("-NaN(0x8)", "9990", "9990", .toNearestOrEven)
    /* ddmng183 */ self.minmag64("NaN(0x47)", "Inf", "Infinity", .toNearestOrEven)
    /* ddmng184 */ self.minmag64("NaN(0x1)", "NaN(0x36)", "NaN(0x1)", .toNearestOrEven)
    /* ddmng185 */ self.minmag64("NaN(0x16)", "-NaN(0x35)", "NaN(0x16)", .toNearestOrEven)
    /* ddmng186 */ self.minmag64("-NaN(0x3)", "NaN(0x6)", "-NaN(0x3)", .toNearestOrEven)
    /* ddmng187 */ self.minmag64("-NaN(0x2c)", "NaN(0x7)", "-NaN(0x2c)", .toNearestOrEven)
    /* ddmng188 */ self.minmag64("-Inf", "NaN(0x29)", "-Infinity", .toNearestOrEven)
    /* ddmng189 */ self.minmag64("-9999", "-NaN(0x21)", "-9999", .toNearestOrEven)
    /* ddmng190 */ self.minmag64("Inf", "NaN(0x2)", "Infinity", .toNearestOrEven)
    /* ddmng191 */ self.minmag64("sNaN(0x63)", "-Inf", "NaN(0x63)", .toNearestOrEven, .isInvalidOperation)
    /* ddmng192 */ self.minmag64("sNaN(0x62)", "-11", "NaN(0x62)", .toNearestOrEven, .isInvalidOperation)
    /* ddmng193 */ self.minmag64("-sNaN(0x61)", "NaN(0x8)", "-NaN(0x61)", .toNearestOrEven, .isInvalidOperation)
    /* ddmng194 */ self.minmag64("sNaN(0x45)", "sNaN(0x5e)", "NaN(0x45)", .toNearestOrEven, .isInvalidOperation)
    /* ddmng195 */ self.minmag64("NaN(0x5f)", "sNaN(0x5d)", "NaN(0x5d)", .toNearestOrEven, .isInvalidOperation)
    /* ddmng196 */ self.minmag64("-Inf", "sNaN(0x5c)", "NaN(0x5c)", .toNearestOrEven, .isInvalidOperation)
    /* ddmng197 */ self.minmag64("088", "sNaN(0x5b)", "NaN(0x5b)", .toNearestOrEven, .isInvalidOperation)
    /* ddmng198 */ self.minmag64("Inf", "-sNaN(0x5a)", "-NaN(0x5a)", .toNearestOrEven, .isInvalidOperation)
    /* ddmng199 */ self.minmag64("NaN", "sNaN(0x56)", "NaN(0x56)", .toNearestOrEven, .isInvalidOperation)
    /* ddmng221 */ self.minmag64("-12345678000", "1", "1", .toNearestOrEven)
    /* ddmng222 */ self.minmag64("1", "-12345678000", "1", .toNearestOrEven)
    /* ddmng223 */ self.minmag64("-1234567800", "1", "1", .toNearestOrEven)
    /* ddmng224 */ self.minmag64("1", "-1234567800", "1", .toNearestOrEven)
    /* ddmng225 */ self.minmag64("-1234567890", "1", "1", .toNearestOrEven)
    /* ddmng226 */ self.minmag64("1", "-1234567890", "1", .toNearestOrEven)
    /* ddmng227 */ self.minmag64("-1234567891", "1", "1", .toNearestOrEven)
    /* ddmng228 */ self.minmag64("1", "-1234567891", "1", .toNearestOrEven)
    /* ddmng229 */ self.minmag64("-12345678901", "1", "1", .toNearestOrEven)
    /* ddmng230 */ self.minmag64("1", "-12345678901", "1", .toNearestOrEven)
    /* ddmng231 */ self.minmag64("-1234567896", "1", "1", .toNearestOrEven)
    /* ddmng232 */ self.minmag64("1", "-1234567896", "1", .toNearestOrEven)
    /* ddmng233 */ self.minmag64("1234567891", "1", "1", .toNearestOrEven)
    /* ddmng234 */ self.minmag64("1", "1234567891", "1", .toNearestOrEven)
    /* ddmng235 */ self.minmag64("12345678901", "1", "1", .toNearestOrEven)
    /* ddmng236 */ self.minmag64("1", "12345678901", "1", .toNearestOrEven)
    /* ddmng237 */ self.minmag64("1234567896", "1", "1", .toNearestOrEven)
    /* ddmng238 */ self.minmag64("1", "1234567896", "1", .toNearestOrEven)
    /* ddmng280 */ self.minmag64("3", "2", "2", .toNearestOrEven)
    /* ddmng281 */ self.minmag64("-10", "3", "3", .toNearestOrEven)
    /* ddmng282 */ self.minmag64("1.0", "1", "1.0", .toNearestOrEven)
    /* ddmng283 */ self.minmag64("1", "1.0", "1.0", .toNearestOrEven)
    /* ddmng284 */ self.minmag64("7", "NaN", "7", .toNearestOrEven)
    /* ddmng401 */ self.minmag64("Inf", "1.1", "1.1", .toNearestOrEven)
    /* ddmng402 */ self.minmag64("1.1", "1", "1", .toNearestOrEven)
    /* ddmng403 */ self.minmag64("1", "1.0", "1.0", .toNearestOrEven)
    /* ddmng404 */ self.minmag64("1.0", "0.1", "0.1", .toNearestOrEven)
    /* ddmng405 */ self.minmag64("0.1", "0.10", "0.10", .toNearestOrEven)
    /* ddmng406 */ self.minmag64("0.10", "0.100", "0.100", .toNearestOrEven)
    /* ddmng407 */ self.minmag64("0.10", "0", "0", .toNearestOrEven)
    /* ddmng408 */ self.minmag64("0", "0.0", "0.0", .toNearestOrEven)
    /* ddmng409 */ self.minmag64("0.0", "-0", "-0", .toNearestOrEven)
    /* ddmng410 */ self.minmag64("0.0", "-0.0", "-0.0", .toNearestOrEven)
    /* ddmng411 */ self.minmag64("0.00", "-0.0", "-0.0", .toNearestOrEven)
    /* ddmng412 */ self.minmag64("0.0", "-0.00", "-0.00", .toNearestOrEven)
    /* ddmng413 */ self.minmag64("0", "-0.0", "-0.0", .toNearestOrEven)
    /* ddmng414 */ self.minmag64("0", "-0", "-0", .toNearestOrEven)
    /* ddmng415 */ self.minmag64("-0.0", "-0", "-0", .toNearestOrEven)
    /* ddmng416 */ self.minmag64("-0", "-0.100", "-0", .toNearestOrEven)
    /* ddmng417 */ self.minmag64("-0.100", "-0.10", "-0.10", .toNearestOrEven)
    /* ddmng418 */ self.minmag64("-0.10", "-0.1", "-0.1", .toNearestOrEven)
    /* ddmng419 */ self.minmag64("-0.1", "-1.0", "-0.1", .toNearestOrEven)
    /* ddmng420 */ self.minmag64("-1.0", "-1", "-1", .toNearestOrEven)
    /* ddmng421 */ self.minmag64("-1", "-1.1", "-1", .toNearestOrEven)
    /* ddmng423 */ self.minmag64("-1.1", "-Inf", "-1.1", .toNearestOrEven)
    /* ddmng431 */ self.minmag64("1.1", "Inf", "1.1", .toNearestOrEven)
    /* ddmng432 */ self.minmag64("1", "1.1", "1", .toNearestOrEven)
    /* ddmng433 */ self.minmag64("1.0", "1", "1.0", .toNearestOrEven)
    /* ddmng434 */ self.minmag64("0.1", "1.0", "0.1", .toNearestOrEven)
    /* ddmng435 */ self.minmag64("0.10", "0.1", "0.10", .toNearestOrEven)
    /* ddmng436 */ self.minmag64("0.100", "0.10", "0.100", .toNearestOrEven)
    /* ddmng437 */ self.minmag64("0", "0.10", "0", .toNearestOrEven)
    /* ddmng438 */ self.minmag64("0.0", "0", "0.0", .toNearestOrEven)
    /* ddmng439 */ self.minmag64("-0", "0.0", "-0", .toNearestOrEven)
    /* ddmng440 */ self.minmag64("-0.0", "0.0", "-0.0", .toNearestOrEven)
    /* ddmng441 */ self.minmag64("-0.0", "0.00", "-0.0", .toNearestOrEven)
    /* ddmng442 */ self.minmag64("-0.00", "0.0", "-0.00", .toNearestOrEven)
    /* ddmng443 */ self.minmag64("-0.0", "0", "-0.0", .toNearestOrEven)
    /* ddmng444 */ self.minmag64("-0", "0", "-0", .toNearestOrEven)
    /* ddmng445 */ self.minmag64("-0", "-0.0", "-0", .toNearestOrEven)
    /* ddmng446 */ self.minmag64("-0.100", "-0", "-0", .toNearestOrEven)
    /* ddmng447 */ self.minmag64("-0.10", "-0.100", "-0.10", .toNearestOrEven)
    /* ddmng448 */ self.minmag64("-0.1", "-0.10", "-0.1", .toNearestOrEven)
    /* ddmng449 */ self.minmag64("-1.0", "-0.1", "-0.1", .toNearestOrEven)
    /* ddmng450 */ self.minmag64("-1", "-1.0", "-1", .toNearestOrEven)
    /* ddmng451 */ self.minmag64("-1.1", "-1", "-1", .toNearestOrEven)
    /* ddmng453 */ self.minmag64("-Inf", "-1.1", "-1.1", .toNearestOrEven)
    /* ddmng460 */ self.minmag64("1000", "1E+3", "1000", .toNearestOrEven)
    /* ddmng461 */ self.minmag64("1E+3", "1000", "1000", .toNearestOrEven)
    /* ddmng462 */ self.minmag64("1000", "-1E+3", "-1E+3", .toNearestOrEven)
    /* ddmng463 */ self.minmag64("1E+3", "-384", "-384", .toNearestOrEven)
    /* ddmng464 */ self.minmag64("-384", "1E+3", "-384", .toNearestOrEven)
    /* ddmng465 */ self.minmag64("-1E+3", "1000", "-1E+3", .toNearestOrEven)
    /* ddmng466 */ self.minmag64("-384", "-1E+3", "-384", .toNearestOrEven)
    /* ddmng467 */ self.minmag64("-1E+3", "-384", "-384", .toNearestOrEven)
    /* ddmng510 */ self.minmag64("1.00E-383", "0", "0", .toNearestOrEven)
    /* ddmng511 */ self.minmag64("0.1E-383", "0", "0", .toNearestOrEven)
    /* ddmng512 */ self.minmag64("0.10E-383", "0", "0", .toNearestOrEven)
    /* ddmng513 */ self.minmag64("0.100E-383", "0", "0", .toNearestOrEven)
    /* ddmng514 */ self.minmag64("0.01E-383", "0", "0", .toNearestOrEven)
    /* ddmng515 */ self.minmag64("0.999E-383", "0", "0", .toNearestOrEven)
    /* ddmng516 */ self.minmag64("0.099E-383", "0", "0", .toNearestOrEven)
    /* ddmng517 */ self.minmag64("0.009E-383", "0", "0", .toNearestOrEven)
    /* ddmng518 */ self.minmag64("0.001E-383", "0", "0", .toNearestOrEven)
    /* ddmng519 */ self.minmag64("0.0009E-383", "0", "0", .toNearestOrEven)
    /* ddmng520 */ self.minmag64("0.0001E-383", "0", "0", .toNearestOrEven)
    /* ddmng530 */ self.minmag64("-1.00E-383", "0", "0", .toNearestOrEven)
    /* ddmng531 */ self.minmag64("-0.1E-383", "0", "0", .toNearestOrEven)
    /* ddmng532 */ self.minmag64("-0.10E-383", "0", "0", .toNearestOrEven)
    /* ddmng533 */ self.minmag64("-0.100E-383", "0", "0", .toNearestOrEven)
    /* ddmng534 */ self.minmag64("-0.01E-383", "0", "0", .toNearestOrEven)
    /* ddmng535 */ self.minmag64("-0.999E-383", "0", "0", .toNearestOrEven)
    /* ddmng536 */ self.minmag64("-0.099E-383", "0", "0", .toNearestOrEven)
    /* ddmng537 */ self.minmag64("-0.009E-383", "0", "0", .toNearestOrEven)
    /* ddmng538 */ self.minmag64("-0.001E-383", "0", "0", .toNearestOrEven)
    /* ddmng539 */ self.minmag64("-0.0009E-383", "0", "0", .toNearestOrEven)
    /* ddmng540 */ self.minmag64("-0.0001E-383", "0", "0", .toNearestOrEven)
  }

  private func minmag64(
    _ _arg0: String,
    _ _arg1: String,
    _ _expected: String,
    _ rounding: DecimalFloatingPointRoundingRule,
    _ _expectedStatus: DecimalStatus? = nil,
    file: StaticString = #file,
    line: UInt = #line
  ) {
    guard let arg0 = self.parseDecimal64(_arg0, file, line) else { return }
    guard let arg1 = self.parseDecimal64(_arg1, file, line) else { return }
    guard let expected = self.parseDecimal64(_expected, file, line) else { return }
    let expectedStatus = _expectedStatus ?? DecimalStatus()

    var status = DecimalStatus()
    let result = Decimal64.minimumMagnitude(arg0, arg1, status: &status)
    let speleotroveResult = self.toSpeleotrove_min(arg0, arg1, result: result)
    self.assertEqual(speleotroveResult, expected, file, line)
    self.assertStatus(status, expectedStatus, file, line)
  }

  func test_minmag128() {
    /* dqmng001 */ self.minmag128("-2", "-2", "-2", .toNearestOrEven)
    /* dqmng002 */ self.minmag128("-2", "-1", "-1", .toNearestOrEven)
    /* dqmng003 */ self.minmag128("-2", "0", "0", .toNearestOrEven)
    /* dqmng004 */ self.minmag128("-2", "1", "1", .toNearestOrEven)
    /* dqmng005 */ self.minmag128("-2", "2", "-2", .toNearestOrEven)
    /* dqmng006 */ self.minmag128("-1", "-2", "-1", .toNearestOrEven)
    /* dqmng007 */ self.minmag128("-1", "-1", "-1", .toNearestOrEven)
    /* dqmng008 */ self.minmag128("-1", "0", "0", .toNearestOrEven)
    /* dqmng009 */ self.minmag128("-1", "1", "-1", .toNearestOrEven)
    /* dqmng010 */ self.minmag128("-1", "2", "-1", .toNearestOrEven)
    /* dqmng011 */ self.minmag128("0", "-2", "0", .toNearestOrEven)
    /* dqmng012 */ self.minmag128("0", "-1", "0", .toNearestOrEven)
    /* dqmng013 */ self.minmag128("0", "0", "0", .toNearestOrEven)
    /* dqmng014 */ self.minmag128("0", "1", "0", .toNearestOrEven)
    /* dqmng015 */ self.minmag128("0", "2", "0", .toNearestOrEven)
    /* dqmng016 */ self.minmag128("1", "-2", "1", .toNearestOrEven)
    /* dqmng017 */ self.minmag128("1", "-1", "-1", .toNearestOrEven)
    /* dqmng018 */ self.minmag128("1", "0", "0", .toNearestOrEven)
    /* dqmng019 */ self.minmag128("1", "1", "1", .toNearestOrEven)
    /* dqmng020 */ self.minmag128("1", "2", "1", .toNearestOrEven)
    /* dqmng021 */ self.minmag128("2", "-2", "-2", .toNearestOrEven)
    /* dqmng022 */ self.minmag128("2", "-1", "-1", .toNearestOrEven)
    /* dqmng023 */ self.minmag128("2", "0", "0", .toNearestOrEven)
    /* dqmng025 */ self.minmag128("2", "1", "1", .toNearestOrEven)
    /* dqmng026 */ self.minmag128("2", "2", "2", .toNearestOrEven)
    /* dqmng030 */ self.minmag128("0", "0", "0", .toNearestOrEven)
    /* dqmng031 */ self.minmag128("0", "-0", "-0", .toNearestOrEven)
    /* dqmng032 */ self.minmag128("0", "-0.0", "-0.0", .toNearestOrEven)
    /* dqmng033 */ self.minmag128("0", "0.0", "0.0", .toNearestOrEven)
    /* dqmng034 */ self.minmag128("-0", "0", "-0", .toNearestOrEven)
    /* dqmng035 */ self.minmag128("-0", "-0", "-0", .toNearestOrEven)
    /* dqmng036 */ self.minmag128("-0", "-0.0", "-0", .toNearestOrEven)
    /* dqmng037 */ self.minmag128("-0", "0.0", "-0", .toNearestOrEven)
    /* dqmng038 */ self.minmag128("0.0", "0", "0.0", .toNearestOrEven)
    /* dqmng039 */ self.minmag128("0.0", "-0", "-0", .toNearestOrEven)
    /* dqmng040 */ self.minmag128("0.0", "-0.0", "-0.0", .toNearestOrEven)
    /* dqmng041 */ self.minmag128("0.0", "0.0", "0.0", .toNearestOrEven)
    /* dqmng042 */ self.minmag128("-0.0", "0", "-0.0", .toNearestOrEven)
    /* dqmng043 */ self.minmag128("-0.0", "-0", "-0", .toNearestOrEven)
    /* dqmng044 */ self.minmag128("-0.0", "-0.0", "-0.0", .toNearestOrEven)
    /* dqmng045 */ self.minmag128("-0.0", "0.0", "-0.0", .toNearestOrEven)
    /* dqmng046 */ self.minmag128("0E1", "-0E1", "-0E+1", .toNearestOrEven)
    /* dqmng047 */ self.minmag128("-0E1", "0E2", "-0E+1", .toNearestOrEven)
    /* dqmng048 */ self.minmag128("0E2", "0E1", "0E+1", .toNearestOrEven)
    /* dqmng049 */ self.minmag128("0E1", "0E2", "0E+1", .toNearestOrEven)
    /* dqmng050 */ self.minmag128("-0E3", "-0E2", "-0E+3", .toNearestOrEven)
    /* dqmng051 */ self.minmag128("-0E2", "-0E3", "-0E+3", .toNearestOrEven)
    /* dqmng090 */ self.minmag128("Inf", "-Inf", "-Infinity", .toNearestOrEven)
    /* dqmng091 */ self.minmag128("Inf", "-1000", "-1000", .toNearestOrEven)
    /* dqmng092 */ self.minmag128("Inf", "-1", "-1", .toNearestOrEven)
    /* dqmng093 */ self.minmag128("Inf", "-0", "-0", .toNearestOrEven)
    /* dqmng094 */ self.minmag128("Inf", "0", "0", .toNearestOrEven)
    /* dqmng095 */ self.minmag128("Inf", "1", "1", .toNearestOrEven)
    /* dqmng096 */ self.minmag128("Inf", "1000", "1000", .toNearestOrEven)
    /* dqmng097 */ self.minmag128("Inf", "Inf", "Infinity", .toNearestOrEven)
    /* dqmng098 */ self.minmag128("-1000", "Inf", "-1000", .toNearestOrEven)
    /* dqmng099 */ self.minmag128("-Inf", "Inf", "-Infinity", .toNearestOrEven)
    /* dqmng100 */ self.minmag128("-1", "Inf", "-1", .toNearestOrEven)
    /* dqmng101 */ self.minmag128("-0", "Inf", "-0", .toNearestOrEven)
    /* dqmng102 */ self.minmag128("0", "Inf", "0", .toNearestOrEven)
    /* dqmng103 */ self.minmag128("1", "Inf", "1", .toNearestOrEven)
    /* dqmng104 */ self.minmag128("1000", "Inf", "1000", .toNearestOrEven)
    /* dqmng105 */ self.minmag128("Inf", "Inf", "Infinity", .toNearestOrEven)
    /* dqmng120 */ self.minmag128("-Inf", "-Inf", "-Infinity", .toNearestOrEven)
    /* dqmng121 */ self.minmag128("-Inf", "-1000", "-1000", .toNearestOrEven)
    /* dqmng122 */ self.minmag128("-Inf", "-1", "-1", .toNearestOrEven)
    /* dqmng123 */ self.minmag128("-Inf", "-0", "-0", .toNearestOrEven)
    /* dqmng124 */ self.minmag128("-Inf", "0", "0", .toNearestOrEven)
    /* dqmng125 */ self.minmag128("-Inf", "1", "1", .toNearestOrEven)
    /* dqmng126 */ self.minmag128("-Inf", "1000", "1000", .toNearestOrEven)
    /* dqmng127 */ self.minmag128("-Inf", "Inf", "-Infinity", .toNearestOrEven)
    /* dqmng128 */ self.minmag128("-Inf", "-Inf", "-Infinity", .toNearestOrEven)
    /* dqmng129 */ self.minmag128("-1000", "-Inf", "-1000", .toNearestOrEven)
    /* dqmng130 */ self.minmag128("-1", "-Inf", "-1", .toNearestOrEven)
    /* dqmng131 */ self.minmag128("-0", "-Inf", "-0", .toNearestOrEven)
    /* dqmng132 */ self.minmag128("0", "-Inf", "0", .toNearestOrEven)
    /* dqmng133 */ self.minmag128("1", "-Inf", "1", .toNearestOrEven)
    /* dqmng134 */ self.minmag128("1000", "-Inf", "1000", .toNearestOrEven)
    /* dqmng135 */ self.minmag128("Inf", "-Inf", "-Infinity", .toNearestOrEven)
    /* dqmng141 */ self.minmag128("NaN", "-Inf", "-Infinity", .toNearestOrEven)
    /* dqmng142 */ self.minmag128("NaN", "-1000", "-1000", .toNearestOrEven)
    /* dqmng143 */ self.minmag128("NaN", "-1", "-1", .toNearestOrEven)
    /* dqmng144 */ self.minmag128("NaN", "-0", "-0", .toNearestOrEven)
    /* dqmng145 */ self.minmag128("NaN", "0", "0", .toNearestOrEven)
    /* dqmng146 */ self.minmag128("NaN", "1", "1", .toNearestOrEven)
    /* dqmng147 */ self.minmag128("NaN", "1000", "1000", .toNearestOrEven)
    /* dqmng148 */ self.minmag128("NaN", "Inf", "Infinity", .toNearestOrEven)
    /* dqmng149 */ self.minmag128("NaN", "NaN", "NaN", .toNearestOrEven)
    /* dqmng150 */ self.minmag128("-Inf", "NaN", "-Infinity", .toNearestOrEven)
    /* dqmng151 */ self.minmag128("-1000", "NaN", "-1000", .toNearestOrEven)
    /* dqmng152 */ self.minmag128("-1", "-NaN", "-1", .toNearestOrEven)
    /* dqmng153 */ self.minmag128("-0", "NaN", "-0", .toNearestOrEven)
    /* dqmng154 */ self.minmag128("0", "-NaN", "0", .toNearestOrEven)
    /* dqmng155 */ self.minmag128("1", "NaN", "1", .toNearestOrEven)
    /* dqmng156 */ self.minmag128("1000", "NaN", "1000", .toNearestOrEven)
    /* dqmng157 */ self.minmag128("Inf", "NaN", "Infinity", .toNearestOrEven)
    /* dqmng161 */ self.minmag128("sNaN", "-Inf", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmng162 */ self.minmag128("sNaN", "-1000", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmng163 */ self.minmag128("sNaN", "-1", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmng164 */ self.minmag128("sNaN", "-0", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmng165 */ self.minmag128("-sNaN", "0", "-NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmng166 */ self.minmag128("-sNaN", "1", "-NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmng167 */ self.minmag128("sNaN", "1000", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmng168 */ self.minmag128("sNaN", "NaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmng169 */ self.minmag128("sNaN", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmng170 */ self.minmag128("NaN", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmng171 */ self.minmag128("-Inf", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmng172 */ self.minmag128("-1000", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmng173 */ self.minmag128("-1", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmng174 */ self.minmag128("-0", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmng175 */ self.minmag128("0", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmng176 */ self.minmag128("1", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmng177 */ self.minmag128("1000", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmng178 */ self.minmag128("Inf", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmng179 */ self.minmag128("NaN", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmng181 */ self.minmag128("NaN(0x9)", "-Inf", "-Infinity", .toNearestOrEven)
    /* dqmng182 */ self.minmag128("-NaN(0x8)", "9990", "9990", .toNearestOrEven)
    /* dqmng183 */ self.minmag128("NaN(0x47)", "Inf", "Infinity", .toNearestOrEven)
    /* dqmng184 */ self.minmag128("NaN(0x1)", "NaN(0x36)", "NaN(0x1)", .toNearestOrEven)
    /* dqmng185 */ self.minmag128("NaN(0x16)", "-NaN(0x35)", "NaN(0x16)", .toNearestOrEven)
    /* dqmng186 */ self.minmag128("-NaN(0x3)", "NaN(0x6)", "-NaN(0x3)", .toNearestOrEven)
    /* dqmng187 */ self.minmag128("-NaN(0x2c)", "NaN(0x7)", "-NaN(0x2c)", .toNearestOrEven)
    /* dqmng188 */ self.minmag128("-Inf", "NaN(0x29)", "-Infinity", .toNearestOrEven)
    /* dqmng189 */ self.minmag128("-9999", "-NaN(0x21)", "-9999", .toNearestOrEven)
    /* dqmng190 */ self.minmag128("Inf", "NaN(0x2)", "Infinity", .toNearestOrEven)
    /* dqmng191 */ self.minmag128("sNaN(0x63)", "-Inf", "NaN(0x63)", .toNearestOrEven, .isInvalidOperation)
    /* dqmng192 */ self.minmag128("sNaN(0x62)", "-11", "NaN(0x62)", .toNearestOrEven, .isInvalidOperation)
    /* dqmng193 */ self.minmag128("-sNaN(0x61)", "NaN(0x8)", "-NaN(0x61)", .toNearestOrEven, .isInvalidOperation)
    /* dqmng194 */ self.minmag128("sNaN(0x45)", "sNaN(0x5e)", "NaN(0x45)", .toNearestOrEven, .isInvalidOperation)
    /* dqmng195 */ self.minmag128("NaN(0x5f)", "sNaN(0x5d)", "NaN(0x5d)", .toNearestOrEven, .isInvalidOperation)
    /* dqmng196 */ self.minmag128("-Inf", "sNaN(0x5c)", "NaN(0x5c)", .toNearestOrEven, .isInvalidOperation)
    /* dqmng197 */ self.minmag128("088", "sNaN(0x5b)", "NaN(0x5b)", .toNearestOrEven, .isInvalidOperation)
    /* dqmng198 */ self.minmag128("Inf", "-sNaN(0x5a)", "-NaN(0x5a)", .toNearestOrEven, .isInvalidOperation)
    /* dqmng199 */ self.minmag128("NaN", "sNaN(0x56)", "NaN(0x56)", .toNearestOrEven, .isInvalidOperation)
    /* dqmng221 */ self.minmag128("-12345678000", "1", "1", .toNearestOrEven)
    /* dqmng222 */ self.minmag128("1", "-12345678000", "1", .toNearestOrEven)
    /* dqmng223 */ self.minmag128("-1234567800", "1", "1", .toNearestOrEven)
    /* dqmng224 */ self.minmag128("1", "-1234567800", "1", .toNearestOrEven)
    /* dqmng225 */ self.minmag128("-1234567890", "1", "1", .toNearestOrEven)
    /* dqmng226 */ self.minmag128("1", "-1234567890", "1", .toNearestOrEven)
    /* dqmng227 */ self.minmag128("-1234567891", "1", "1", .toNearestOrEven)
    /* dqmng228 */ self.minmag128("1", "-1234567891", "1", .toNearestOrEven)
    /* dqmng229 */ self.minmag128("-12345678901", "1", "1", .toNearestOrEven)
    /* dqmng230 */ self.minmag128("1", "-12345678901", "1", .toNearestOrEven)
    /* dqmng231 */ self.minmag128("-1234567896", "1", "1", .toNearestOrEven)
    /* dqmng232 */ self.minmag128("1", "-1234567896", "1", .toNearestOrEven)
    /* dqmng233 */ self.minmag128("1234567891", "1", "1", .toNearestOrEven)
    /* dqmng234 */ self.minmag128("1", "1234567891", "1", .toNearestOrEven)
    /* dqmng235 */ self.minmag128("12345678901", "1", "1", .toNearestOrEven)
    /* dqmng236 */ self.minmag128("1", "12345678901", "1", .toNearestOrEven)
    /* dqmng237 */ self.minmag128("1234567896", "1", "1", .toNearestOrEven)
    /* dqmng238 */ self.minmag128("1", "1234567896", "1", .toNearestOrEven)
    /* dqmng280 */ self.minmag128("3", "2", "2", .toNearestOrEven)
    /* dqmng281 */ self.minmag128("-10", "3", "3", .toNearestOrEven)
    /* dqmng282 */ self.minmag128("1.0", "1", "1.0", .toNearestOrEven)
    /* dqmng283 */ self.minmag128("1", "1.0", "1.0", .toNearestOrEven)
    /* dqmng284 */ self.minmag128("7", "NaN", "7", .toNearestOrEven)
    /* dqmng401 */ self.minmag128("Inf", "1.1", "1.1", .toNearestOrEven)
    /* dqmng402 */ self.minmag128("1.1", "1", "1", .toNearestOrEven)
    /* dqmng403 */ self.minmag128("1", "1.0", "1.0", .toNearestOrEven)
    /* dqmng404 */ self.minmag128("1.0", "0.1", "0.1", .toNearestOrEven)
    /* dqmng405 */ self.minmag128("0.1", "0.10", "0.10", .toNearestOrEven)
    /* dqmng406 */ self.minmag128("0.10", "0.100", "0.100", .toNearestOrEven)
    /* dqmng407 */ self.minmag128("0.10", "0", "0", .toNearestOrEven)
    /* dqmng408 */ self.minmag128("0", "0.0", "0.0", .toNearestOrEven)
    /* dqmng409 */ self.minmag128("0.0", "-0", "-0", .toNearestOrEven)
    /* dqmng410 */ self.minmag128("0.0", "-0.0", "-0.0", .toNearestOrEven)
    /* dqmng411 */ self.minmag128("0.00", "-0.0", "-0.0", .toNearestOrEven)
    /* dqmng412 */ self.minmag128("0.0", "-0.00", "-0.00", .toNearestOrEven)
    /* dqmng413 */ self.minmag128("0", "-0.0", "-0.0", .toNearestOrEven)
    /* dqmng414 */ self.minmag128("0", "-0", "-0", .toNearestOrEven)
    /* dqmng415 */ self.minmag128("-0.0", "-0", "-0", .toNearestOrEven)
    /* dqmng416 */ self.minmag128("-0", "-0.100", "-0", .toNearestOrEven)
    /* dqmng417 */ self.minmag128("-0.100", "-0.10", "-0.10", .toNearestOrEven)
    /* dqmng418 */ self.minmag128("-0.10", "-0.1", "-0.1", .toNearestOrEven)
    /* dqmng419 */ self.minmag128("-0.1", "-1.0", "-0.1", .toNearestOrEven)
    /* dqmng420 */ self.minmag128("-1.0", "-1", "-1", .toNearestOrEven)
    /* dqmng421 */ self.minmag128("-1", "-1.1", "-1", .toNearestOrEven)
    /* dqmng423 */ self.minmag128("-1.1", "-Inf", "-1.1", .toNearestOrEven)
    /* dqmng431 */ self.minmag128("1.1", "Inf", "1.1", .toNearestOrEven)
    /* dqmng432 */ self.minmag128("1", "1.1", "1", .toNearestOrEven)
    /* dqmng433 */ self.minmag128("1.0", "1", "1.0", .toNearestOrEven)
    /* dqmng434 */ self.minmag128("0.1", "1.0", "0.1", .toNearestOrEven)
    /* dqmng435 */ self.minmag128("0.10", "0.1", "0.10", .toNearestOrEven)
    /* dqmng436 */ self.minmag128("0.100", "0.10", "0.100", .toNearestOrEven)
    /* dqmng437 */ self.minmag128("0", "0.10", "0", .toNearestOrEven)
    /* dqmng438 */ self.minmag128("0.0", "0", "0.0", .toNearestOrEven)
    /* dqmng439 */ self.minmag128("-0", "0.0", "-0", .toNearestOrEven)
    /* dqmng440 */ self.minmag128("-0.0", "0.0", "-0.0", .toNearestOrEven)
    /* dqmng441 */ self.minmag128("-0.0", "0.00", "-0.0", .toNearestOrEven)
    /* dqmng442 */ self.minmag128("-0.00", "0.0", "-0.00", .toNearestOrEven)
    /* dqmng443 */ self.minmag128("-0.0", "0", "-0.0", .toNearestOrEven)
    /* dqmng444 */ self.minmag128("-0", "0", "-0", .toNearestOrEven)
    /* dqmng445 */ self.minmag128("-0", "-0.0", "-0", .toNearestOrEven)
    /* dqmng446 */ self.minmag128("-0.100", "-0", "-0", .toNearestOrEven)
    /* dqmng447 */ self.minmag128("-0.10", "-0.100", "-0.10", .toNearestOrEven)
    /* dqmng448 */ self.minmag128("-0.1", "-0.10", "-0.1", .toNearestOrEven)
    /* dqmng449 */ self.minmag128("-1.0", "-0.1", "-0.1", .toNearestOrEven)
    /* dqmng450 */ self.minmag128("-1", "-1.0", "-1", .toNearestOrEven)
    /* dqmng451 */ self.minmag128("-1.1", "-1", "-1", .toNearestOrEven)
    /* dqmng453 */ self.minmag128("-Inf", "-1.1", "-1.1", .toNearestOrEven)
    /* dqmng460 */ self.minmag128("1000", "1E+3", "1000", .toNearestOrEven)
    /* dqmng461 */ self.minmag128("1E+3", "1000", "1000", .toNearestOrEven)
    /* dqmng462 */ self.minmag128("1000", "-1E+3", "-1E+3", .toNearestOrEven)
    /* dqmng463 */ self.minmag128("1E+3", "-384", "-384", .toNearestOrEven)
    /* dqmng464 */ self.minmag128("-384", "1E+3", "-384", .toNearestOrEven)
    /* dqmng465 */ self.minmag128("-1E+3", "1000", "-1E+3", .toNearestOrEven)
    /* dqmng466 */ self.minmag128("-384", "-1E+3", "-384", .toNearestOrEven)
    /* dqmng467 */ self.minmag128("-1E+3", "-384", "-384", .toNearestOrEven)
    /* dqmng510 */ self.minmag128("1.00E-6143", "0", "0", .toNearestOrEven)
    /* dqmng511 */ self.minmag128("0.1E-6143", "0", "0", .toNearestOrEven)
    /* dqmng512 */ self.minmag128("0.10E-6143", "0", "0", .toNearestOrEven)
    /* dqmng513 */ self.minmag128("0.100E-6143", "0", "0", .toNearestOrEven)
    /* dqmng514 */ self.minmag128("0.01E-6143", "0", "0", .toNearestOrEven)
    /* dqmng515 */ self.minmag128("0.999E-6143", "0", "0", .toNearestOrEven)
    /* dqmng516 */ self.minmag128("0.099E-6143", "0", "0", .toNearestOrEven)
    /* dqmng517 */ self.minmag128("0.009E-6143", "0", "0", .toNearestOrEven)
    /* dqmng518 */ self.minmag128("0.001E-6143", "0", "0", .toNearestOrEven)
    /* dqmng519 */ self.minmag128("0.0009E-6143", "0", "0", .toNearestOrEven)
    /* dqmng520 */ self.minmag128("0.0001E-6143", "0", "0", .toNearestOrEven)
    /* dqmng530 */ self.minmag128("-1.00E-6143", "0", "0", .toNearestOrEven)
    /* dqmng531 */ self.minmag128("-0.1E-6143", "0", "0", .toNearestOrEven)
    /* dqmng532 */ self.minmag128("-0.10E-6143", "0", "0", .toNearestOrEven)
    /* dqmng533 */ self.minmag128("-0.100E-6143", "0", "0", .toNearestOrEven)
    /* dqmng534 */ self.minmag128("-0.01E-6143", "0", "0", .toNearestOrEven)
    /* dqmng535 */ self.minmag128("-0.999E-6143", "0", "0", .toNearestOrEven)
    /* dqmng536 */ self.minmag128("-0.099E-6143", "0", "0", .toNearestOrEven)
    /* dqmng537 */ self.minmag128("-0.009E-6143", "0", "0", .toNearestOrEven)
    /* dqmng538 */ self.minmag128("-0.001E-6143", "0", "0", .toNearestOrEven)
    /* dqmng539 */ self.minmag128("-0.0009E-6143", "0", "0", .toNearestOrEven)
    /* dqmng540 */ self.minmag128("-0.0001E-6143", "0", "0", .toNearestOrEven)
  }

  private func minmag128(
    _ _arg0: String,
    _ _arg1: String,
    _ _expected: String,
    _ rounding: DecimalFloatingPointRoundingRule,
    _ _expectedStatus: DecimalStatus? = nil,
    file: StaticString = #file,
    line: UInt = #line
  ) {
    guard let arg0 = self.parseDecimal128(_arg0, file, line) else { return }
    guard let arg1 = self.parseDecimal128(_arg1, file, line) else { return }
    guard let expected = self.parseDecimal128(_expected, file, line) else { return }
    let expectedStatus = _expectedStatus ?? DecimalStatus()

    var status = DecimalStatus()
    let result = Decimal128.minimumMagnitude(arg0, arg1, status: &status)
    let speleotroveResult = self.toSpeleotrove_min(arg0, arg1, result: result)
    self.assertEqual(speleotroveResult, expected, file, line)
    self.assertStatus(status, expectedStatus, file, line)
  }
}
