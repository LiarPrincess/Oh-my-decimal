// =============================================================================
// Automatically generated. DO NOT EDIT!
// To regenerate: make gen
// =============================================================================

import XCTest
@testable import Decimal

class SpeleotroveMulTests: XCTestCase, SpeleotroveMixin {

  func test_multiply64() {
    /* ddcan302 */ self.multiply64("1", "#77ffff3fcff3fcff", "#77fcff3fcff3fcff", .toNearestOrEven)
    /* ddcan303 */ self.multiply64("#77fcffffcff3fcff", "1", "#77fcff3fcff3fcff", .toNearestOrEven)
    /* ddcan306 */ self.multiply64("-1", "#77ffff3fcff3fcff", "#f7fcff3fcff3fcff", .toNearestOrEven)
    /* ddcan307 */ self.multiply64("#77fcffffcff3fcff", "-1", "#f7fcff3fcff3fcff", .toNearestOrEven)
    /* ddcan311 */ self.multiply64("1", "#7c03ff3fcff3fcff", "#7c00ff3fcff3fcff", .toNearestOrEven)
    /* ddcan312 */ self.multiply64("#7c03ff3fcff3fcff", "1", "#7c00ff3fcff3fcff", .toNearestOrEven)
    /* ddcan313 */ self.multiply64("1", "#7c40ff3fcff3fcff", "#7c00ff3fcff3fcff", .toNearestOrEven)
    /* ddcan314 */ self.multiply64("#7c40ff3fcff3fcff", "1", "#7c00ff3fcff3fcff", .toNearestOrEven)
    /* ddcan315 */ self.multiply64("1", "#7e00ffffcff3fcff", "#7c00ff3fcff3fcff", .toNearestOrEven, .isInvalidOperation)
    /* ddcan316 */ self.multiply64("#7e00ffffcff3fcff", "1", "#7c00ff3fcff3fcff", .toNearestOrEven, .isInvalidOperation)
    /* ddcan317 */ self.multiply64("1", "#7e80ff3fcff3fcff", "#7c00ff3fcff3fcff", .toNearestOrEven, .isInvalidOperation)
    /* ddcan318 */ self.multiply64("#7e80ff3fcff3fcff", "1", "#7c00ff3fcff3fcff", .toNearestOrEven, .isInvalidOperation)
    /* ddcan320 */ self.multiply64("1", "#7880000000000000", "#7800000000000000", .toNearestOrEven)
    /* ddcan321 */ self.multiply64("#7880000000000000", "1", "#7800000000000000", .toNearestOrEven)
    /* ddcan322 */ self.multiply64("1", "#7802000000000000", "#7800000000000000", .toNearestOrEven)
    /* ddcan323 */ self.multiply64("#7802000000000000", "1", "#7800000000000000", .toNearestOrEven)
    /* ddcan324 */ self.multiply64("1", "#7800000000000001", "#7800000000000000", .toNearestOrEven)
    /* ddcan325 */ self.multiply64("#7800000000000001", "1", "#7800000000000000", .toNearestOrEven)
    /* ddcan326 */ self.multiply64("1", "#7800002000000000", "#7800000000000000", .toNearestOrEven)
    /* ddcan327 */ self.multiply64("#7800002000000000", "1", "#7800000000000000", .toNearestOrEven)
    /* ddm2 */ self.multiply64("999999999999999", "999999999999999", "9.999999999999980E+29", .toNearestOrEven, .isInexact)
    /* ddmul000 */ self.multiply64("2", "2", "4", .toNearestOrEven)
    /* ddmul001 */ self.multiply64("2", "3", "6", .toNearestOrEven)
    /* ddmul002 */ self.multiply64("5", "1", "5", .toNearestOrEven)
    /* ddmul003 */ self.multiply64("5", "2", "10", .toNearestOrEven)
    /* ddmul004 */ self.multiply64("1.20", "2", "2.40", .toNearestOrEven)
    /* ddmul005 */ self.multiply64("1.20", "0", "0.00", .toNearestOrEven)
    /* ddmul006 */ self.multiply64("1.20", "-2", "-2.40", .toNearestOrEven)
    /* ddmul007 */ self.multiply64("-1.20", "2", "-2.40", .toNearestOrEven)
    /* ddmul008 */ self.multiply64("-1.20", "0", "-0.00", .toNearestOrEven)
    /* ddmul009 */ self.multiply64("-1.20", "-2", "2.40", .toNearestOrEven)
    /* ddmul010 */ self.multiply64("5.09", "7.1", "36.139", .toNearestOrEven)
    /* ddmul011 */ self.multiply64("2.5", "4", "10.0", .toNearestOrEven)
    /* ddmul012 */ self.multiply64("2.50", "4", "10.00", .toNearestOrEven)
    /* ddmul013 */ self.multiply64("1.23456789", "1.00000000", "1.234567890000000", .toNearestOrEven)
    /* ddmul015 */ self.multiply64("2.50", "4", "10.00", .toNearestOrEven)
    /* ddmul016 */ self.multiply64("9.999999999", "9.999999999", "99.99999998000000", .toNearestOrEven, .isInexact)
    /* ddmul017 */ self.multiply64("9.999999999", "-9.999999999", "-99.99999998000000", .toNearestOrEven, .isInexact)
    /* ddmul018 */ self.multiply64("-9.999999999", "9.999999999", "-99.99999998000000", .toNearestOrEven, .isInexact)
    /* ddmul019 */ self.multiply64("-9.999999999", "-9.999999999", "99.99999998000000", .toNearestOrEven, .isInexact)
    /* ddmul021 */ self.multiply64("0", "0", "0", .toNearestOrEven)
    /* ddmul022 */ self.multiply64("0", "-0", "-0", .toNearestOrEven)
    /* ddmul023 */ self.multiply64("-0", "0", "-0", .toNearestOrEven)
    /* ddmul024 */ self.multiply64("-0", "-0", "0", .toNearestOrEven)
    /* ddmul025 */ self.multiply64("-0.0", "-0.0", "0.00", .toNearestOrEven)
    /* ddmul026 */ self.multiply64("-0.0", "-0.0", "0.00", .toNearestOrEven)
    /* ddmul027 */ self.multiply64("-0.0", "-0.0", "0.00", .toNearestOrEven)
    /* ddmul028 */ self.multiply64("-0.0", "-0.0", "0.00", .toNearestOrEven)
    /* ddmul030 */ self.multiply64("5.00", "1E-3", "0.00500", .toNearestOrEven)
    /* ddmul031 */ self.multiply64("00.00", "0.000", "0.00000", .toNearestOrEven)
    /* ddmul032 */ self.multiply64("00.00", "0E-3", "0.00000", .toNearestOrEven)
    /* ddmul033 */ self.multiply64("0E-3", "00.00", "0.00000", .toNearestOrEven)
    /* ddmul034 */ self.multiply64("-5.00", "1E-3", "-0.00500", .toNearestOrEven)
    /* ddmul035 */ self.multiply64("-00.00", "0.000", "-0.00000", .toNearestOrEven)
    /* ddmul036 */ self.multiply64("-00.00", "0E-3", "-0.00000", .toNearestOrEven)
    /* ddmul037 */ self.multiply64("-0E-3", "00.00", "-0.00000", .toNearestOrEven)
    /* ddmul038 */ self.multiply64("5.00", "-1E-3", "-0.00500", .toNearestOrEven)
    /* ddmul039 */ self.multiply64("00.00", "-0.000", "-0.00000", .toNearestOrEven)
    /* ddmul040 */ self.multiply64("00.00", "-0E-3", "-0.00000", .toNearestOrEven)
    /* ddmul041 */ self.multiply64("0E-3", "-00.00", "-0.00000", .toNearestOrEven)
    /* ddmul042 */ self.multiply64("-5.00", "-1E-3", "0.00500", .toNearestOrEven)
    /* ddmul043 */ self.multiply64("-00.00", "-0.000", "0.00000", .toNearestOrEven)
    /* ddmul044 */ self.multiply64("-00.00", "-0E-3", "0.00000", .toNearestOrEven)
    /* ddmul045 */ self.multiply64("-0E-3", "-00.00", "0.00000", .toNearestOrEven)
    /* ddmul050 */ self.multiply64("1.20", "3", "3.60", .toNearestOrEven)
    /* ddmul051 */ self.multiply64("7", "3", "21", .toNearestOrEven)
    /* ddmul052 */ self.multiply64("0.9", "0.8", "0.72", .toNearestOrEven)
    /* ddmul053 */ self.multiply64("0.9", "-0", "-0.0", .toNearestOrEven)
    /* ddmul054 */ self.multiply64("654321", "654321", "428135971041", .toNearestOrEven)
    /* ddmul060 */ self.multiply64("123.45", "1e7", "1.2345E+9", .toNearestOrEven)
    /* ddmul061 */ self.multiply64("123.45", "1e8", "1.2345E+10", .toNearestOrEven)
    /* ddmul062 */ self.multiply64("123.45", "1e+9", "1.2345E+11", .toNearestOrEven)
    /* ddmul063 */ self.multiply64("123.45", "1e10", "1.2345E+12", .toNearestOrEven)
    /* ddmul064 */ self.multiply64("123.45", "1e11", "1.2345E+13", .toNearestOrEven)
    /* ddmul065 */ self.multiply64("123.45", "1e12", "1.2345E+14", .toNearestOrEven)
    /* ddmul066 */ self.multiply64("123.45", "1e13", "1.2345E+15", .toNearestOrEven)
    /* ddmul080 */ self.multiply64("0.1", "1230123456456789", "123012345645678.9", .toNearestOrEven)
    /* ddmul084 */ self.multiply64("0.1", "1230123456456789", "123012345645678.9", .toNearestOrEven)
    /* ddmul090 */ self.multiply64("1230123456456789", "0.1", "123012345645678.9", .toNearestOrEven)
    /* ddmul094 */ self.multiply64("1230123456456789", "0.1", "123012345645678.9", .toNearestOrEven)
    /* ddmul1001 */ self.multiply64("1", "10", "10", .toNearestOrEven)
    /* ddmul1002 */ self.multiply64("1", "100", "100", .toNearestOrEven)
    /* ddmul1003 */ self.multiply64("1", "1000", "1000", .toNearestOrEven)
    /* ddmul1004 */ self.multiply64("1", "10000", "10000", .toNearestOrEven)
    /* ddmul1005 */ self.multiply64("1", "100000", "100000", .toNearestOrEven)
    /* ddmul1006 */ self.multiply64("1", "1000000", "1000000", .toNearestOrEven)
    /* ddmul1007 */ self.multiply64("1", "10000000", "10000000", .toNearestOrEven)
    /* ddmul1008 */ self.multiply64("1", "100000000", "100000000", .toNearestOrEven)
    /* ddmul1009 */ self.multiply64("1", "1000000000", "1000000000", .toNearestOrEven)
    /* ddmul101 */ self.multiply64("9", "9", "81", .toNearestOrEven)
    /* ddmul1010 */ self.multiply64("1", "10000000000", "10000000000", .toNearestOrEven)
    /* ddmul1011 */ self.multiply64("1", "100000000000", "100000000000", .toNearestOrEven)
    /* ddmul1012 */ self.multiply64("1", "1000000000000", "1000000000000", .toNearestOrEven)
    /* ddmul1013 */ self.multiply64("1", "10000000000000", "10000000000000", .toNearestOrEven)
    /* ddmul1014 */ self.multiply64("1", "100000000000000", "100000000000000", .toNearestOrEven)
    /* ddmul1015 */ self.multiply64("1", "1000000000000000", "1000000000000000", .toNearestOrEven)
    /* ddmul102 */ self.multiply64("9", "90", "810", .toNearestOrEven)
    /* ddmul1021 */ self.multiply64("10", "1", "10", .toNearestOrEven)
    /* ddmul1022 */ self.multiply64("10", "10", "100", .toNearestOrEven)
    /* ddmul1023 */ self.multiply64("10", "100", "1000", .toNearestOrEven)
    /* ddmul1024 */ self.multiply64("10", "1000", "10000", .toNearestOrEven)
    /* ddmul1025 */ self.multiply64("10", "10000", "100000", .toNearestOrEven)
    /* ddmul1026 */ self.multiply64("10", "100000", "1000000", .toNearestOrEven)
    /* ddmul1027 */ self.multiply64("10", "1000000", "10000000", .toNearestOrEven)
    /* ddmul1028 */ self.multiply64("10", "10000000", "100000000", .toNearestOrEven)
    /* ddmul1029 */ self.multiply64("10", "100000000", "1000000000", .toNearestOrEven)
    /* ddmul103 */ self.multiply64("9", "900", "8100", .toNearestOrEven)
    /* ddmul1030 */ self.multiply64("10", "1000000000", "10000000000", .toNearestOrEven)
    /* ddmul1031 */ self.multiply64("10", "10000000000", "100000000000", .toNearestOrEven)
    /* ddmul1032 */ self.multiply64("10", "100000000000", "1000000000000", .toNearestOrEven)
    /* ddmul1033 */ self.multiply64("10", "1000000000000", "10000000000000", .toNearestOrEven)
    /* ddmul1034 */ self.multiply64("10", "10000000000000", "100000000000000", .toNearestOrEven)
    /* ddmul1035 */ self.multiply64("10", "100000000000000", "1000000000000000", .toNearestOrEven)
    /* ddmul104 */ self.multiply64("9", "9000", "81000", .toNearestOrEven)
    /* ddmul1041 */ self.multiply64("100", "0.1", "10.0", .toNearestOrEven)
    /* ddmul1042 */ self.multiply64("100", "1", "100", .toNearestOrEven)
    /* ddmul1043 */ self.multiply64("100", "10", "1000", .toNearestOrEven)
    /* ddmul1044 */ self.multiply64("100", "100", "10000", .toNearestOrEven)
    /* ddmul1045 */ self.multiply64("100", "1000", "100000", .toNearestOrEven)
    /* ddmul1046 */ self.multiply64("100", "10000", "1000000", .toNearestOrEven)
    /* ddmul1047 */ self.multiply64("100", "100000", "10000000", .toNearestOrEven)
    /* ddmul1048 */ self.multiply64("100", "1000000", "100000000", .toNearestOrEven)
    /* ddmul1049 */ self.multiply64("100", "10000000", "1000000000", .toNearestOrEven)
    /* ddmul105 */ self.multiply64("9", "90000", "810000", .toNearestOrEven)
    /* ddmul1050 */ self.multiply64("100", "100000000", "10000000000", .toNearestOrEven)
    /* ddmul1051 */ self.multiply64("100", "1000000000", "100000000000", .toNearestOrEven)
    /* ddmul1052 */ self.multiply64("100", "10000000000", "1000000000000", .toNearestOrEven)
    /* ddmul1053 */ self.multiply64("100", "100000000000", "10000000000000", .toNearestOrEven)
    /* ddmul1054 */ self.multiply64("100", "1000000000000", "100000000000000", .toNearestOrEven)
    /* ddmul1055 */ self.multiply64("100", "10000000000000", "1000000000000000", .toNearestOrEven)
    /* ddmul106 */ self.multiply64("9", "900000", "8100000", .toNearestOrEven)
    /* ddmul1061 */ self.multiply64("1000", "0.01", "10.00", .toNearestOrEven)
    /* ddmul1062 */ self.multiply64("1000", "0.1", "100.0", .toNearestOrEven)
    /* ddmul1063 */ self.multiply64("1000", "1", "1000", .toNearestOrEven)
    /* ddmul1064 */ self.multiply64("1000", "10", "10000", .toNearestOrEven)
    /* ddmul1065 */ self.multiply64("1000", "100", "100000", .toNearestOrEven)
    /* ddmul1066 */ self.multiply64("1000", "1000", "1000000", .toNearestOrEven)
    /* ddmul1067 */ self.multiply64("1000", "10000", "10000000", .toNearestOrEven)
    /* ddmul1068 */ self.multiply64("1000", "100000", "100000000", .toNearestOrEven)
    /* ddmul1069 */ self.multiply64("1000", "1000000", "1000000000", .toNearestOrEven)
    /* ddmul107 */ self.multiply64("9", "9000000", "81000000", .toNearestOrEven)
    /* ddmul1070 */ self.multiply64("1000", "10000000", "10000000000", .toNearestOrEven)
    /* ddmul1071 */ self.multiply64("1000", "100000000", "100000000000", .toNearestOrEven)
    /* ddmul1072 */ self.multiply64("1000", "1000000000", "1000000000000", .toNearestOrEven)
    /* ddmul1073 */ self.multiply64("1000", "10000000000", "10000000000000", .toNearestOrEven)
    /* ddmul1074 */ self.multiply64("1000", "100000000000", "100000000000000", .toNearestOrEven)
    /* ddmul1075 */ self.multiply64("1000", "1000000000000", "1000000000000000", .toNearestOrEven)
    /* ddmul108 */ self.multiply64("9", "90000000", "810000000", .toNearestOrEven)
    /* ddmul1081 */ self.multiply64("10000", "0.001", "10.000", .toNearestOrEven)
    /* ddmul1082 */ self.multiply64("10000", "0.01", "100.00", .toNearestOrEven)
    /* ddmul1083 */ self.multiply64("10000", "0.1", "1000.0", .toNearestOrEven)
    /* ddmul1084 */ self.multiply64("10000", "1", "10000", .toNearestOrEven)
    /* ddmul1085 */ self.multiply64("10000", "10", "100000", .toNearestOrEven)
    /* ddmul1086 */ self.multiply64("10000", "100", "1000000", .toNearestOrEven)
    /* ddmul1087 */ self.multiply64("10000", "1000", "10000000", .toNearestOrEven)
    /* ddmul1088 */ self.multiply64("10000", "10000", "100000000", .toNearestOrEven)
    /* ddmul1089 */ self.multiply64("10000", "100000", "1000000000", .toNearestOrEven)
    /* ddmul109 */ self.multiply64("9", "900000000", "8100000000", .toNearestOrEven)
    /* ddmul1090 */ self.multiply64("10000", "1000000", "10000000000", .toNearestOrEven)
    /* ddmul1091 */ self.multiply64("10000", "10000000", "100000000000", .toNearestOrEven)
    /* ddmul1092 */ self.multiply64("10000", "100000000", "1000000000000", .toNearestOrEven)
    /* ddmul1093 */ self.multiply64("10000", "1000000000", "10000000000000", .toNearestOrEven)
    /* ddmul1094 */ self.multiply64("10000", "10000000000", "100000000000000", .toNearestOrEven)
    /* ddmul1095 */ self.multiply64("10000", "100000000000", "1000000000000000", .toNearestOrEven)
    /* ddmul1097 */ self.multiply64("10000", "99999999999", "999999999990000", .toNearestOrEven)
    /* ddmul1098 */ self.multiply64("10000", "99999999999", "999999999990000", .toNearestOrEven)
    /* ddmul110 */ self.multiply64("9", "9000000000", "81000000000", .toNearestOrEven)
    /* ddmul111 */ self.multiply64("9", "90000000000", "810000000000", .toNearestOrEven)
    /* ddmul112 */ self.multiply64("9", "900000000000", "8100000000000", .toNearestOrEven)
    /* ddmul113 */ self.multiply64("9", "9000000000000", "81000000000000", .toNearestOrEven)
    /* ddmul114 */ self.multiply64("9", "90000000000000", "810000000000000", .toNearestOrEven)
    /* ddmul115 */ self.multiply64("9", "900000000000000", "8100000000000000", .toNearestOrEven)
    /* ddmul131 */ self.multiply64("3", "3", "9", .toNearestOrEven)
    /* ddmul132 */ self.multiply64("3", "30", "90", .toNearestOrEven)
    /* ddmul133 */ self.multiply64("3", "300", "900", .toNearestOrEven)
    /* ddmul134 */ self.multiply64("3", "3000", "9000", .toNearestOrEven)
    /* ddmul135 */ self.multiply64("3", "30000", "90000", .toNearestOrEven)
    /* ddmul136 */ self.multiply64("3", "300000", "900000", .toNearestOrEven)
    /* ddmul137 */ self.multiply64("3", "3000000", "9000000", .toNearestOrEven)
    /* ddmul138 */ self.multiply64("3", "30000000", "90000000", .toNearestOrEven)
    /* ddmul139 */ self.multiply64("3", "300000000", "900000000", .toNearestOrEven)
    /* ddmul140 */ self.multiply64("3", "3000000000", "9000000000", .toNearestOrEven)
    /* ddmul141 */ self.multiply64("3", "30000000000", "90000000000", .toNearestOrEven)
    /* ddmul142 */ self.multiply64("3", "300000000000", "900000000000", .toNearestOrEven)
    /* ddmul143 */ self.multiply64("3", "3000000000000", "9000000000000", .toNearestOrEven)
    /* ddmul144 */ self.multiply64("3", "30000000000000", "90000000000000", .toNearestOrEven)
    /* ddmul145 */ self.multiply64("3", "300000000000000", "900000000000000", .toNearestOrEven)
    /* ddmul301 */ self.multiply64("9", "9", "81", .toNearestOrEven)
    /* ddmul302 */ self.multiply64("9", "90", "810", .toNearestOrEven)
    /* ddmul303 */ self.multiply64("9", "900", "8100", .toNearestOrEven)
    /* ddmul304 */ self.multiply64("9", "9000", "81000", .toNearestOrEven)
    /* ddmul305 */ self.multiply64("9", "90000", "810000", .toNearestOrEven)
    /* ddmul306 */ self.multiply64("9", "900000", "8100000", .toNearestOrEven)
    /* ddmul307 */ self.multiply64("9", "9000000", "81000000", .toNearestOrEven)
    /* ddmul308 */ self.multiply64("9", "90000000", "810000000", .toNearestOrEven)
    /* ddmul309 */ self.multiply64("9", "900000000", "8100000000", .toNearestOrEven)
    /* ddmul310 */ self.multiply64("9", "9000000000", "81000000000", .toNearestOrEven)
    /* ddmul311 */ self.multiply64("9", "90000000000", "810000000000", .toNearestOrEven)
    /* ddmul312 */ self.multiply64("9", "900000000000", "8100000000000", .toNearestOrEven)
    /* ddmul313 */ self.multiply64("9", "9000000000000", "81000000000000", .toNearestOrEven)
    /* ddmul314 */ self.multiply64("9", "90000000000000", "810000000000000", .toNearestOrEven)
    /* ddmul315 */ self.multiply64("9", "900000000000000", "8100000000000000", .toNearestOrEven)
    /* ddmul316 */ self.multiply64("9", "9000000000000000", "8.100000000000000E+16", .toNearestOrEven)
    /* ddmul317 */ self.multiply64("90", "9000000000000000", "8.100000000000000E+17", .toNearestOrEven)
    /* ddmul318 */ self.multiply64("900", "9000000000000000", "8.100000000000000E+18", .toNearestOrEven)
    /* ddmul319 */ self.multiply64("9000", "9000000000000000", "8.100000000000000E+19", .toNearestOrEven)
    /* ddmul320 */ self.multiply64("90000", "9000000000000000", "8.100000000000000E+20", .toNearestOrEven)
    /* ddmul321 */ self.multiply64("900000", "9000000000000000", "8.100000000000000E+21", .toNearestOrEven)
    /* ddmul322 */ self.multiply64("9000000", "9000000000000000", "8.100000000000000E+22", .toNearestOrEven)
    /* ddmul323 */ self.multiply64("90000000", "9000000000000000", "8.100000000000000E+23", .toNearestOrEven)
    /* ddmul504 */ self.multiply64("0E-260", "1000E-260", "0E-398", .toNearestOrEven)
    /* ddmul505 */ self.multiply64("100E+260", "0E+260", "0E+369", .toNearestOrEven)
    /* ddmul506 */ self.multiply64("77.1", "850", "65535.0", .toNearestOrEven)
    /* ddmul541 */ self.multiply64("0", "-1", "-0", .toNearestOrEven)
    /* ddmul542 */ self.multiply64("-0", "-1", "0", .toNearestOrEven)
    /* ddmul543 */ self.multiply64("0", "1", "0", .toNearestOrEven)
    /* ddmul544 */ self.multiply64("-0", "1", "-0", .toNearestOrEven)
    /* ddmul545 */ self.multiply64("-1", "0", "-0", .toNearestOrEven)
    /* ddmul546 */ self.multiply64("-1", "-0", "0", .toNearestOrEven)
    /* ddmul547 */ self.multiply64("1", "0", "0", .toNearestOrEven)
    /* ddmul548 */ self.multiply64("1", "-0", "-0", .toNearestOrEven)
    /* ddmul551 */ self.multiply64("0.0", "-1", "-0.0", .toNearestOrEven)
    /* ddmul552 */ self.multiply64("-0.0", "-1", "0.0", .toNearestOrEven)
    /* ddmul553 */ self.multiply64("0.0", "1", "0.0", .toNearestOrEven)
    /* ddmul554 */ self.multiply64("-0.0", "1", "-0.0", .toNearestOrEven)
    /* ddmul555 */ self.multiply64("-1.0", "0", "-0.0", .toNearestOrEven)
    /* ddmul556 */ self.multiply64("-1.0", "-0", "0.0", .toNearestOrEven)
    /* ddmul557 */ self.multiply64("1.0", "0", "0.0", .toNearestOrEven)
    /* ddmul558 */ self.multiply64("1.0", "-0", "-0.0", .toNearestOrEven)
    /* ddmul561 */ self.multiply64("0", "-1.0", "-0.0", .toNearestOrEven)
    /* ddmul562 */ self.multiply64("-0", "-1.0", "0.0", .toNearestOrEven)
    /* ddmul563 */ self.multiply64("0", "1.0", "0.0", .toNearestOrEven)
    /* ddmul564 */ self.multiply64("-0", "1.0", "-0.0", .toNearestOrEven)
    /* ddmul565 */ self.multiply64("-1", "0.0", "-0.0", .toNearestOrEven)
    /* ddmul566 */ self.multiply64("-1", "-0.0", "0.0", .toNearestOrEven)
    /* ddmul567 */ self.multiply64("1", "0.0", "0.0", .toNearestOrEven)
    /* ddmul568 */ self.multiply64("1", "-0.0", "-0.0", .toNearestOrEven)
    /* ddmul571 */ self.multiply64("0.0", "-1.0", "-0.00", .toNearestOrEven)
    /* ddmul572 */ self.multiply64("-0.0", "-1.0", "0.00", .toNearestOrEven)
    /* ddmul573 */ self.multiply64("0.0", "1.0", "0.00", .toNearestOrEven)
    /* ddmul574 */ self.multiply64("-0.0", "1.0", "-0.00", .toNearestOrEven)
    /* ddmul575 */ self.multiply64("-1.0", "0.0", "-0.00", .toNearestOrEven)
    /* ddmul576 */ self.multiply64("-1.0", "-0.0", "0.00", .toNearestOrEven)
    /* ddmul577 */ self.multiply64("1.0", "0.0", "0.00", .toNearestOrEven)
    /* ddmul578 */ self.multiply64("1.0", "-0.0", "-0.00", .toNearestOrEven)
    /* ddmul580 */ self.multiply64("Inf", "-Inf", "-Infinity", .toNearestOrEven)
    /* ddmul581 */ self.multiply64("Inf", "-1000", "-Infinity", .toNearestOrEven)
    /* ddmul582 */ self.multiply64("Inf", "-1", "-Infinity", .toNearestOrEven)
    /* ddmul583 */ self.multiply64("Inf", "-0", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmul584 */ self.multiply64("Inf", "0", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmul585 */ self.multiply64("Inf", "1", "Infinity", .toNearestOrEven)
    /* ddmul586 */ self.multiply64("Inf", "1000", "Infinity", .toNearestOrEven)
    /* ddmul587 */ self.multiply64("Inf", "Inf", "Infinity", .toNearestOrEven)
    /* ddmul588 */ self.multiply64("-1000", "Inf", "-Infinity", .toNearestOrEven)
    /* ddmul589 */ self.multiply64("-Inf", "Inf", "-Infinity", .toNearestOrEven)
    /* ddmul590 */ self.multiply64("-1", "Inf", "-Infinity", .toNearestOrEven)
    /* ddmul591 */ self.multiply64("-0", "Inf", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmul592 */ self.multiply64("0", "Inf", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmul593 */ self.multiply64("1", "Inf", "Infinity", .toNearestOrEven)
    /* ddmul594 */ self.multiply64("1000", "Inf", "Infinity", .toNearestOrEven)
    /* ddmul595 */ self.multiply64("Inf", "Inf", "Infinity", .toNearestOrEven)
    /* ddmul600 */ self.multiply64("-Inf", "-Inf", "Infinity", .toNearestOrEven)
    /* ddmul601 */ self.multiply64("-Inf", "-1000", "Infinity", .toNearestOrEven)
    /* ddmul602 */ self.multiply64("-Inf", "-1", "Infinity", .toNearestOrEven)
    /* ddmul603 */ self.multiply64("-Inf", "-0", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmul604 */ self.multiply64("-Inf", "0", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmul605 */ self.multiply64("-Inf", "1", "-Infinity", .toNearestOrEven)
    /* ddmul606 */ self.multiply64("-Inf", "1000", "-Infinity", .toNearestOrEven)
    /* ddmul607 */ self.multiply64("-Inf", "Inf", "-Infinity", .toNearestOrEven)
    /* ddmul608 */ self.multiply64("-1000", "Inf", "-Infinity", .toNearestOrEven)
    /* ddmul609 */ self.multiply64("-Inf", "-Inf", "Infinity", .toNearestOrEven)
    /* ddmul610 */ self.multiply64("-1", "-Inf", "Infinity", .toNearestOrEven)
    /* ddmul611 */ self.multiply64("-0", "-Inf", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmul612 */ self.multiply64("0", "-Inf", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmul613 */ self.multiply64("1", "-Inf", "-Infinity", .toNearestOrEven)
    /* ddmul614 */ self.multiply64("1000", "-Inf", "-Infinity", .toNearestOrEven)
    /* ddmul615 */ self.multiply64("Inf", "-Inf", "-Infinity", .toNearestOrEven)
    /* ddmul621 */ self.multiply64("NaN", "-Inf", "NaN", .toNearestOrEven)
    /* ddmul622 */ self.multiply64("NaN", "-1000", "NaN", .toNearestOrEven)
    /* ddmul623 */ self.multiply64("NaN", "-1", "NaN", .toNearestOrEven)
    /* ddmul624 */ self.multiply64("NaN", "-0", "NaN", .toNearestOrEven)
    /* ddmul625 */ self.multiply64("NaN", "0", "NaN", .toNearestOrEven)
    /* ddmul626 */ self.multiply64("NaN", "1", "NaN", .toNearestOrEven)
    /* ddmul627 */ self.multiply64("NaN", "1000", "NaN", .toNearestOrEven)
    /* ddmul628 */ self.multiply64("NaN", "Inf", "NaN", .toNearestOrEven)
    /* ddmul629 */ self.multiply64("NaN", "NaN", "NaN", .toNearestOrEven)
    /* ddmul630 */ self.multiply64("-Inf", "NaN", "NaN", .toNearestOrEven)
    /* ddmul631 */ self.multiply64("-1000", "NaN", "NaN", .toNearestOrEven)
    /* ddmul632 */ self.multiply64("-1", "NaN", "NaN", .toNearestOrEven)
    /* ddmul633 */ self.multiply64("-0", "NaN", "NaN", .toNearestOrEven)
    /* ddmul634 */ self.multiply64("0", "NaN", "NaN", .toNearestOrEven)
    /* ddmul635 */ self.multiply64("1", "NaN", "NaN", .toNearestOrEven)
    /* ddmul636 */ self.multiply64("1000", "NaN", "NaN", .toNearestOrEven)
    /* ddmul637 */ self.multiply64("Inf", "NaN", "NaN", .toNearestOrEven)
    /* ddmul641 */ self.multiply64("sNaN", "-Inf", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmul642 */ self.multiply64("sNaN", "-1000", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmul643 */ self.multiply64("sNaN", "-1", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmul644 */ self.multiply64("sNaN", "-0", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmul645 */ self.multiply64("sNaN", "0", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmul646 */ self.multiply64("sNaN", "1", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmul647 */ self.multiply64("sNaN", "1000", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmul648 */ self.multiply64("sNaN", "NaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmul649 */ self.multiply64("sNaN", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmul650 */ self.multiply64("NaN", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmul651 */ self.multiply64("-Inf", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmul652 */ self.multiply64("-1000", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmul653 */ self.multiply64("-1", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmul654 */ self.multiply64("-0", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmul655 */ self.multiply64("0", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmul656 */ self.multiply64("1", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmul657 */ self.multiply64("1000", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmul658 */ self.multiply64("Inf", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmul659 */ self.multiply64("NaN", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmul661 */ self.multiply64("NaN(0x9)", "-Inf", "NaN(0x9)", .toNearestOrEven)
    /* ddmul662 */ self.multiply64("NaN(0x8)", "999", "NaN(0x8)", .toNearestOrEven)
    /* ddmul663 */ self.multiply64("NaN(0x47)", "Inf", "NaN(0x47)", .toNearestOrEven)
    /* ddmul664 */ self.multiply64("NaN(0x6)", "NaN(0x5)", "NaN(0x6)", .toNearestOrEven)
    /* ddmul665 */ self.multiply64("-Inf", "NaN(0x4)", "NaN(0x4)", .toNearestOrEven)
    /* ddmul666 */ self.multiply64("-999", "NaN(0x21)", "NaN(0x21)", .toNearestOrEven)
    /* ddmul667 */ self.multiply64("Inf", "NaN(0x2)", "NaN(0x2)", .toNearestOrEven)
    /* ddmul671 */ self.multiply64("sNaN(0x63)", "-Inf", "NaN(0x63)", .toNearestOrEven, .isInvalidOperation)
    /* ddmul672 */ self.multiply64("sNaN(0x62)", "-11", "NaN(0x62)", .toNearestOrEven, .isInvalidOperation)
    /* ddmul673 */ self.multiply64("sNaN(0x61)", "NaN", "NaN(0x61)", .toNearestOrEven, .isInvalidOperation)
    /* ddmul674 */ self.multiply64("sNaN(0x10)", "sNaN(0x5e)", "NaN(0x10)", .toNearestOrEven, .isInvalidOperation)
    /* ddmul675 */ self.multiply64("NaN(0x5f)", "sNaN(0x5d)", "NaN(0x5d)", .toNearestOrEven, .isInvalidOperation)
    /* ddmul676 */ self.multiply64("-Inf", "sNaN(0x5c)", "NaN(0x5c)", .toNearestOrEven, .isInvalidOperation)
    /* ddmul677 */ self.multiply64("088", "sNaN(0x5b)", "NaN(0x5b)", .toNearestOrEven, .isInvalidOperation)
    /* ddmul678 */ self.multiply64("Inf", "sNaN(0x5a)", "NaN(0x5a)", .toNearestOrEven, .isInvalidOperation)
    /* ddmul679 */ self.multiply64("NaN", "sNaN(0x59)", "NaN(0x59)", .toNearestOrEven, .isInvalidOperation)
    /* ddmul681 */ self.multiply64("-NaN(0x9)", "-Inf", "-NaN(0x9)", .toNearestOrEven)
    /* ddmul682 */ self.multiply64("-NaN(0x8)", "999", "-NaN(0x8)", .toNearestOrEven)
    /* ddmul683 */ self.multiply64("-NaN(0x47)", "Inf", "-NaN(0x47)", .toNearestOrEven)
    /* ddmul684 */ self.multiply64("-NaN(0x6)", "-NaN(0x5)", "-NaN(0x6)", .toNearestOrEven)
    /* ddmul685 */ self.multiply64("-Inf", "-NaN(0x4)", "-NaN(0x4)", .toNearestOrEven)
    /* ddmul686 */ self.multiply64("-999", "-NaN(0x21)", "-NaN(0x21)", .toNearestOrEven)
    /* ddmul687 */ self.multiply64("Inf", "-NaN(0x2)", "-NaN(0x2)", .toNearestOrEven)
    /* ddmul691 */ self.multiply64("-sNaN(0x63)", "-Inf", "-NaN(0x63)", .toNearestOrEven, .isInvalidOperation)
    /* ddmul692 */ self.multiply64("-sNaN(0x62)", "-11", "-NaN(0x62)", .toNearestOrEven, .isInvalidOperation)
    /* ddmul693 */ self.multiply64("-sNaN(0x61)", "NaN", "-NaN(0x61)", .toNearestOrEven, .isInvalidOperation)
    /* ddmul694 */ self.multiply64("-sNaN(0x10)", "-sNaN(0x5e)", "-NaN(0x10)", .toNearestOrEven, .isInvalidOperation)
    /* ddmul695 */ self.multiply64("-NaN(0x5f)", "-sNaN(0x5d)", "-NaN(0x5d)", .toNearestOrEven, .isInvalidOperation)
    /* ddmul696 */ self.multiply64("-Inf", "-sNaN(0x5c)", "-NaN(0x5c)", .toNearestOrEven, .isInvalidOperation)
    /* ddmul697 */ self.multiply64("088", "-sNaN(0x5b)", "-NaN(0x5b)", .toNearestOrEven, .isInvalidOperation)
    /* ddmul698 */ self.multiply64("Inf", "-sNaN(0x5a)", "-NaN(0x5a)", .toNearestOrEven, .isInvalidOperation)
    /* ddmul699 */ self.multiply64("-NaN", "-sNaN(0x59)", "-NaN(0x59)", .toNearestOrEven, .isInvalidOperation)
    /* ddmul701 */ self.multiply64("-NaN", "-Inf", "-NaN", .toNearestOrEven)
    /* ddmul702 */ self.multiply64("-NaN", "999", "-NaN", .toNearestOrEven)
    /* ddmul703 */ self.multiply64("-NaN", "Inf", "-NaN", .toNearestOrEven)
    /* ddmul704 */ self.multiply64("-NaN", "-NaN", "-NaN", .toNearestOrEven)
    /* ddmul705 */ self.multiply64("-Inf", "-NaN(0x0)", "-NaN", .toNearestOrEven)
    /* ddmul706 */ self.multiply64("-999", "-NaN", "-NaN", .toNearestOrEven)
    /* ddmul707 */ self.multiply64("Inf", "-NaN", "-NaN", .toNearestOrEven)
    /* ddmul711 */ self.multiply64("-sNaN", "-Inf", "-NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmul712 */ self.multiply64("-sNaN", "-11", "-NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmul713 */ self.multiply64("-sNaN(0x0)", "NaN", "-NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmul714 */ self.multiply64("-sNaN", "-sNaN", "-NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmul715 */ self.multiply64("-NaN", "-sNaN", "-NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmul716 */ self.multiply64("-Inf", "-sNaN", "-NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmul717 */ self.multiply64("088", "-sNaN", "-NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmul718 */ self.multiply64("Inf", "-sNaN", "-NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmul719 */ self.multiply64("-NaN", "-sNaN", "-NaN", .toNearestOrEven, .isInvalidOperation)
    /* ddmul751 */ self.multiply64("1e+277", "1e+311", "Infinity", .toNearestOrEven, .isInexact | .isOverflow)
    /* ddmul752 */ self.multiply64("1e+277", "-1e+311", "-Infinity", .toNearestOrEven, .isInexact | .isOverflow)
    /* ddmul753 */ self.multiply64("-1e+277", "1e+311", "-Infinity", .toNearestOrEven, .isInexact | .isOverflow)
    /* ddmul754 */ self.multiply64("-1e+277", "-1e+311", "Infinity", .toNearestOrEven, .isInexact | .isOverflow)
    /* ddmul755 */ self.multiply64("1e-277", "1e-311", "0E-398", .toNearestOrEven, .isInexact | .isUnderflow)
    /* ddmul756 */ self.multiply64("1e-277", "-1e-311", "-0E-398", .toNearestOrEven, .isInexact | .isUnderflow)
    /* ddmul757 */ self.multiply64("-1e-277", "1e-311", "-0E-398", .toNearestOrEven, .isInexact | .isUnderflow)
    /* ddmul758 */ self.multiply64("-1e-277", "-1e-311", "0E-398", .toNearestOrEven, .isInexact | .isUnderflow)
    /* ddmul760 */ self.multiply64("1e-291", "1e-101", "1E-392", .toNearestOrEven)
    /* ddmul761 */ self.multiply64("1e-291", "1e-102", "1E-393", .toNearestOrEven)
    /* ddmul762 */ self.multiply64("1e-291", "1e-103", "1E-394", .toNearestOrEven)
    /* ddmul763 */ self.multiply64("1e-291", "1e-104", "1E-395", .toNearestOrEven)
    /* ddmul764 */ self.multiply64("1e-291", "1e-105", "1E-396", .toNearestOrEven)
    /* ddmul765 */ self.multiply64("1e-291", "1e-106", "1E-397", .toNearestOrEven)
    /* ddmul766 */ self.multiply64("1e-291", "1e-107", "1E-398", .toNearestOrEven)
    /* ddmul767 */ self.multiply64("1e-291", "1e-108", "0E-398", .toNearestOrEven, .isInexact | .isUnderflow)
    /* ddmul768 */ self.multiply64("1e-291", "1e-109", "0E-398", .toNearestOrEven, .isInexact | .isUnderflow)
    /* ddmul769 */ self.multiply64("1e-291", "1e-110", "0E-398", .toNearestOrEven, .isInexact | .isUnderflow)
    /* ddmul770 */ self.multiply64("1e+60", "1e+321", "1.000000000000E+381", .toNearestOrEven)
    /* ddmul771 */ self.multiply64("1e+60", "1e+322", "1.0000000000000E+382", .toNearestOrEven)
    /* ddmul772 */ self.multiply64("1e+60", "1e+323", "1.00000000000000E+383", .toNearestOrEven)
    /* ddmul773 */ self.multiply64("1e+60", "1e+324", "1.000000000000000E+384", .toNearestOrEven)
    /* ddmul774 */ self.multiply64("1e+60", "1e+325", "Infinity", .toNearestOrEven, .isInexact | .isOverflow)
    /* ddmul775 */ self.multiply64("1e+60", "1e+326", "Infinity", .toNearestOrEven, .isInexact | .isOverflow)
    /* ddmul776 */ self.multiply64("1e+60", "1e+327", "Infinity", .toNearestOrEven, .isInexact | .isOverflow)
    /* ddmul777 */ self.multiply64("1e+60", "1e+328", "Infinity", .toNearestOrEven, .isInexact | .isOverflow)
    /* ddmul778 */ self.multiply64("1e+60", "1e+329", "Infinity", .toNearestOrEven, .isInexact | .isOverflow)
    /* ddmul779 */ self.multiply64("1e+60", "1e+330", "Infinity", .toNearestOrEven, .isInexact | .isOverflow)
    /* ddmul801 */ self.multiply64("1.0000E-394", "1", "1.0000E-394", .toNearestOrEven)
    /* ddmul802 */ self.multiply64("1.000E-394", "1e-1", "1.000E-395", .toNearestOrEven)
    /* ddmul803 */ self.multiply64("1.00E-394", "1e-2", "1.00E-396", .toNearestOrEven)
    /* ddmul804 */ self.multiply64("1.0E-394", "1e-3", "1.0E-397", .toNearestOrEven)
    /* ddmul805 */ self.multiply64("1.0E-394", "1e-4", "1E-398", .toNearestOrEven)
    /* ddmul806 */ self.multiply64("1.3E-394", "1e-4", "1E-398", .toNearestOrEven, .isInexact | .isUnderflow)
    /* ddmul807 */ self.multiply64("1.5E-394", "1e-4", "2E-398", .toNearestOrEven, .isInexact | .isUnderflow)
    /* ddmul808 */ self.multiply64("1.7E-394", "1e-4", "2E-398", .toNearestOrEven, .isInexact | .isUnderflow)
    /* ddmul809 */ self.multiply64("2.3E-394", "1e-4", "2E-398", .toNearestOrEven, .isInexact | .isUnderflow)
    /* ddmul810 */ self.multiply64("2.5E-394", "1e-4", "2E-398", .toNearestOrEven, .isInexact | .isUnderflow)
    /* ddmul811 */ self.multiply64("2.7E-394", "1e-4", "3E-398", .toNearestOrEven, .isInexact | .isUnderflow)
    /* ddmul812 */ self.multiply64("1.49E-394", "1e-4", "1E-398", .toNearestOrEven, .isInexact | .isUnderflow)
    /* ddmul813 */ self.multiply64("1.50E-394", "1e-4", "2E-398", .toNearestOrEven, .isInexact | .isUnderflow)
    /* ddmul814 */ self.multiply64("1.51E-394", "1e-4", "2E-398", .toNearestOrEven, .isInexact | .isUnderflow)
    /* ddmul815 */ self.multiply64("2.49E-394", "1e-4", "2E-398", .toNearestOrEven, .isInexact | .isUnderflow)
    /* ddmul816 */ self.multiply64("2.50E-394", "1e-4", "2E-398", .toNearestOrEven, .isInexact | .isUnderflow)
    /* ddmul817 */ self.multiply64("2.51E-394", "1e-4", "3E-398", .toNearestOrEven, .isInexact | .isUnderflow)
    /* ddmul818 */ self.multiply64("1E-394", "1e-4", "1E-398", .toNearestOrEven)
    /* ddmul819 */ self.multiply64("3E-394", "1e-5", "0E-398", .toNearestOrEven, .isInexact | .isUnderflow)
    /* ddmul820 */ self.multiply64("5E-394", "1e-5", "0E-398", .toNearestOrEven, .isInexact | .isUnderflow)
    /* ddmul821 */ self.multiply64("7E-394", "1e-5", "1E-398", .toNearestOrEven, .isInexact | .isUnderflow)
    /* ddmul822 */ self.multiply64("9E-394", "1e-5", "1E-398", .toNearestOrEven, .isInexact | .isUnderflow)
    /* ddmul823 */ self.multiply64("9.9E-394", "1e-5", "1E-398", .toNearestOrEven, .isInexact | .isUnderflow)
    /* ddmul824 */ self.multiply64("1E-394", "-1e-4", "-1E-398", .toNearestOrEven)
    /* ddmul825 */ self.multiply64("3E-394", "-1e-5", "-0E-398", .toNearestOrEven, .isInexact | .isUnderflow)
    /* ddmul826 */ self.multiply64("-5E-394", "1e-5", "-0E-398", .toNearestOrEven, .isInexact | .isUnderflow)
    /* ddmul827 */ self.multiply64("7E-394", "-1e-5", "-1E-398", .toNearestOrEven, .isInexact | .isUnderflow)
    /* ddmul828 */ self.multiply64("-9E-394", "1e-5", "-1E-398", .toNearestOrEven, .isInexact | .isUnderflow)
    /* ddmul829 */ self.multiply64("9.9E-394", "-1e-5", "-1E-398", .toNearestOrEven, .isInexact | .isUnderflow)
    /* ddmul830 */ self.multiply64("3.0E-394", "-1e-5", "-0E-398", .toNearestOrEven, .isInexact | .isUnderflow)
    /* ddmul831 */ self.multiply64("1.0E-199", "1e-200", "0E-398", .toNearestOrEven, .isInexact | .isUnderflow)
    /* ddmul832 */ self.multiply64("1.0E-199", "1e-199", "1E-398", .toNearestOrEven)
    /* ddmul833 */ self.multiply64("1.0E-199", "1e-198", "1.0E-397", .toNearestOrEven)
    /* ddmul834 */ self.multiply64("2.0E-199", "2e-198", "4.0E-397", .toNearestOrEven)
    /* ddmul835 */ self.multiply64("4.0E-199", "4e-198", "1.60E-396", .toNearestOrEven)
    /* ddmul836 */ self.multiply64("10.0E-199", "10e-198", "1.000E-395", .toNearestOrEven)
    /* ddmul837 */ self.multiply64("30.0E-199", "30e-198", "9.000E-395", .toNearestOrEven)
    /* ddmul838 */ self.multiply64("40.0E-199", "40e-188", "1.6000E-384", .toNearestOrEven)
    /* ddmul839 */ self.multiply64("40.0E-199", "40e-187", "1.6000E-383", .toNearestOrEven)
    /* ddmul840 */ self.multiply64("40.0E-199", "40e-186", "1.6000E-382", .toNearestOrEven)
    /* ddmul870 */ self.multiply64("100", "9.999E+383", "Infinity", .toNearestOrEven, .isInexact | .isOverflow)
    /* ddmul871 */ self.multiply64("100", "-9.999E+383", "-Infinity", .toNearestOrEven, .isInexact | .isOverflow)
    /* ddmul872 */ self.multiply64("9.999E+383", "100", "Infinity", .toNearestOrEven, .isInexact | .isOverflow)
    /* ddmul873 */ self.multiply64("-9.999E+383", "100", "-Infinity", .toNearestOrEven, .isInexact | .isOverflow)
    /* ddmul881 */ self.multiply64("1.2347E-355", "1.2347E-40", "1.524E-395", .toNearestOrEven, .isInexact | .isUnderflow)
    /* ddmul882 */ self.multiply64("1.234E-355", "1.234E-40", "1.523E-395", .toNearestOrEven, .isInexact | .isUnderflow)
    /* ddmul883 */ self.multiply64("1.23E-355", "1.23E-40", "1.513E-395", .toNearestOrEven, .isInexact | .isUnderflow)
    /* ddmul884 */ self.multiply64("1.2E-355", "1.2E-40", "1.44E-395", .toNearestOrEven)
    /* ddmul885 */ self.multiply64("1.2E-355", "1.2E-41", "1.44E-396", .toNearestOrEven)
    /* ddmul886 */ self.multiply64("1.2E-355", "1.2E-42", "1.4E-397", .toNearestOrEven, .isInexact | .isUnderflow)
    /* ddmul887 */ self.multiply64("1.2E-355", "1.3E-42", "1.6E-397", .toNearestOrEven, .isInexact | .isUnderflow)
    /* ddmul888 */ self.multiply64("1.3E-355", "1.3E-42", "1.7E-397", .toNearestOrEven, .isInexact | .isUnderflow)
    /* ddmul889 */ self.multiply64("1.3E-355", "1.3E-43", "2E-398", .toNearestOrEven, .isInexact | .isUnderflow)
    /* ddmul890 */ self.multiply64("1.3E-356", "1.3E-43", "0E-398", .toNearestOrEven, .isInexact | .isUnderflow)
    /* ddmul891 */ self.multiply64("1.2345E-39", "1.234E-355", "1.5234E-394", .toNearestOrEven, .isInexact | .isUnderflow)
    /* ddmul892 */ self.multiply64("1.23456E-39", "1.234E-355", "1.5234E-394", .toNearestOrEven, .isInexact | .isUnderflow)
    /* ddmul893 */ self.multiply64("1.2345E-40", "1.234E-355", "1.523E-395", .toNearestOrEven, .isInexact | .isUnderflow)
    /* ddmul894 */ self.multiply64("1.23456E-40", "1.234E-355", "1.523E-395", .toNearestOrEven, .isInexact | .isUnderflow)
    /* ddmul895 */ self.multiply64("1.2345E-41", "1.234E-355", "1.52E-396", .toNearestOrEven, .isInexact | .isUnderflow)
    /* ddmul896 */ self.multiply64("1.23456E-41", "1.234E-355", "1.52E-396", .toNearestOrEven, .isInexact | .isUnderflow)
    /* ddmul900 */ self.multiply64("0.3000000000E-191", "0.3000000000E-191", "9.00000000000000E-384", .toNearestOrEven)
    /* ddmul901 */ self.multiply64("0.3000000001E-191", "0.3000000001E-191", "9.00000000600000E-384", .toNearestOrEven, .isInexact | .isUnderflow)
    /* ddmul902 */ self.multiply64("9.999999999999999E-383", "0.0999999999999", "9.99999999999000E-384", .toNearestOrEven, .isInexact | .isUnderflow)
    /* ddmul903 */ self.multiply64("9.999999999999999E-383", "0.09999999999999", "9.99999999999900E-384", .toNearestOrEven, .isInexact | .isUnderflow)
    /* ddmul904 */ self.multiply64("9.999999999999999E-383", "0.099999999999999", "9.99999999999990E-384", .toNearestOrEven, .isInexact | .isUnderflow)
    /* ddmul905 */ self.multiply64("9.999999999999999E-383", "0.0999999999999999", "9.99999999999999E-384", .toNearestOrEven, .isInexact | .isUnderflow)
    /* ddmul906 */ self.multiply64("9.999999999999999E-383", "0.09999999999999999", "1.000000000000000E-383", .toNearestOrEven, .isInexact | .isUnderflow)
    /* ddmul907 */ self.multiply64("9.999999999999999E-383", "1", "9.999999999999999E-383", .toNearestOrEven)
    /* ddmul908 */ self.multiply64("1", "0.09999999999999999", "0.09999999999999999", .toNearestOrEven)
    /* ddmul910 */ self.multiply64("1e-398", "0.99", "1E-398", .toNearestOrEven, .isInexact | .isUnderflow)
    /* ddmul911 */ self.multiply64("1e-398", "0.75", "1E-398", .toNearestOrEven, .isInexact | .isUnderflow)
    /* ddmul912 */ self.multiply64("1e-398", "0.5", "0E-398", .toNearestOrEven, .isInexact | .isUnderflow)
    /* ddmul913 */ self.multiply64("1e-398", "0.25", "0E-398", .toNearestOrEven, .isInexact | .isUnderflow)
    /* ddmul914 */ self.multiply64("1e-398", "0.01", "0E-398", .toNearestOrEven, .isInexact | .isUnderflow)
    /* ddmul920 */ self.multiply64("9999999999999999", "9999999999999999", "9.999999999999998E+31", .toNearestOrEven, .isInexact)
  }

  private func multiply64(
    _ _arg0: String,
    _ _arg1: String,
    _ _expected: String,
    _ rounding: DecimalFloatingPointRoundingRule,
    _ _expectedStatus: DecimalStatus? = nil,
    file: StaticString = #file,
    line: UInt = #line
  ) {
    guard let arg0 = self.parseDecimal64(_arg0, file, line) else { return }
    guard let arg1 = self.parseDecimal64(_arg1, file, line) else { return }
    guard let expected = self.parseDecimal64(_expected, file, line) else { return }
    let expectedStatus = _expectedStatus ?? DecimalStatus()

    var status = DecimalStatus()
    let result = arg0.multiplied(by: arg1, rounding: rounding, status: &status)
    let speleotroveResult = self.toSpeleotrove_mul(arg0, arg1, result: result)
    self.assertEqual(speleotroveResult, expected, file, line)
    self.assertStatus(status, expectedStatus, file, line)
  }

  func test_multiply128() {
    /* decq843 */ self.multiply128("#20800000000000008000000000000000", "#2080000000000000F294000000172636", "#1EF98490000000010F6E4E0000000000", .toNearestOrAwayFromZero)
    /* dqcan302 */ self.multiply128("1", "#77ffff3fcff3fcff0000000000000000", "#77ffff3fcff3fcff0000000000000000", .toNearestOrEven)
    /* dqcan303 */ self.multiply128("#77fcffffcff3fcff0000000000000000", "1", "#77fccfffcff3fcff0000000000000000", .toNearestOrEven)
    /* dqcan306 */ self.multiply128("-1", "#77ffff3fcff3fcff0000000000000000", "#f7ffff3fcff3fcff0000000000000000", .toNearestOrEven)
    /* dqcan307 */ self.multiply128("#77fcffffcff3fcff0000000000000000", "-1", "#f7fccfffcff3fcff0000000000000000", .toNearestOrEven)
    /* dqcan311 */ self.multiply128("1", "#7c03ff3fcff3fcff0000000000000000", "#7c003f3fcff3fcff0000000000000000", .toNearestOrEven)
    /* dqcan312 */ self.multiply128("#7c03ff3fcff3fcff0000000000000000", "1", "#7c003f3fcff3fcff0000000000000000", .toNearestOrEven)
    /* dqcan313 */ self.multiply128("1", "#7c40ff3fcff3fcff0000000000000000", "#7c003f3fcff3fcff0000000000000000", .toNearestOrEven)
    /* dqcan314 */ self.multiply128("#7c40ff3fcff3fcff0000000000000000", "1", "#7c003f3fcff3fcff0000000000000000", .toNearestOrEven)
    /* dqcan315 */ self.multiply128("1", "#7e00ffffcff3fcff0000000000000000", "#7c000fffcff3fcff0000000000000000", .toNearestOrEven, .isInvalidOperation)
    /* dqcan316 */ self.multiply128("#7e00ffffcff3fcff0000000000000000", "1", "#7c000fffcff3fcff0000000000000000", .toNearestOrEven, .isInvalidOperation)
    /* dqcan317 */ self.multiply128("1", "#7e80ff3fcff3fcff0000000000000000", "#7c003f3fcff3fcff0000000000000000", .toNearestOrEven, .isInvalidOperation)
    /* dqcan318 */ self.multiply128("#7e80ff3fcff3fcff0000000000000000", "1", "#7c003f3fcff3fcff0000000000000000", .toNearestOrEven, .isInvalidOperation)
    /* dqcan320 */ self.multiply128("1", "#78800000000000000000000000000000", "#78000000000000000000000000000000", .toNearestOrEven)
    /* dqcan321 */ self.multiply128("#78800000000000000000000000000000", "1", "#78000000000000000000000000000000", .toNearestOrEven)
    /* dqcan322 */ self.multiply128("1", "#78020000000000000000000000000000", "#78000000000000000000000000000000", .toNearestOrEven)
    /* dqcan323 */ self.multiply128("#78020000000000000000000000000000", "1", "#78000000000000000000000000000000", .toNearestOrEven)
    /* dqcan324 */ self.multiply128("1", "#78000000000000010000000000000000", "#78000000000000000000000000000000", .toNearestOrEven)
    /* dqcan325 */ self.multiply128("#78000000000000010000000000000000", "1", "#78000000000000000000000000000000", .toNearestOrEven)
    /* dqcan326 */ self.multiply128("1", "#78000020000000000000000000000000", "#78000000000000000000000000000000", .toNearestOrEven)
    /* dqcan327 */ self.multiply128("#78000020000000000000000000000000", "1", "#78000000000000000000000000000000", .toNearestOrEven)
    /* dqmul000 */ self.multiply128("2", "2", "4", .toNearestOrEven)
    /* dqmul001 */ self.multiply128("2", "3", "6", .toNearestOrEven)
    /* dqmul002 */ self.multiply128("5", "1", "5", .toNearestOrEven)
    /* dqmul003 */ self.multiply128("5", "2", "10", .toNearestOrEven)
    /* dqmul004 */ self.multiply128("1.20", "2", "2.40", .toNearestOrEven)
    /* dqmul005 */ self.multiply128("1.20", "0", "0.00", .toNearestOrEven)
    /* dqmul006 */ self.multiply128("1.20", "-2", "-2.40", .toNearestOrEven)
    /* dqmul007 */ self.multiply128("-1.20", "2", "-2.40", .toNearestOrEven)
    /* dqmul008 */ self.multiply128("-1.20", "0", "-0.00", .toNearestOrEven)
    /* dqmul009 */ self.multiply128("-1.20", "-2", "2.40", .toNearestOrEven)
    /* dqmul010 */ self.multiply128("5.09", "7.1", "36.139", .toNearestOrEven)
    /* dqmul011 */ self.multiply128("2.5", "4", "10.0", .toNearestOrEven)
    /* dqmul012 */ self.multiply128("2.50", "4", "10.00", .toNearestOrEven)
    /* dqmul013 */ self.multiply128("1.23456789", "1.0000000000000000000000000000", "1.234567890000000000000000000000000", .toNearestOrEven)
    /* dqmul015 */ self.multiply128("2.50", "4", "10.00", .toNearestOrEven)
    /* dqmul016 */ self.multiply128("9.99999999999999999", "9.99999999999999999", "99.99999999999999980000000000000000", .toNearestOrEven, .isInexact)
    /* dqmul017 */ self.multiply128("9.99999999999999999", "-9.99999999999999999", "-99.99999999999999980000000000000000", .toNearestOrEven, .isInexact)
    /* dqmul018 */ self.multiply128("-9.99999999999999999", "9.99999999999999999", "-99.99999999999999980000000000000000", .toNearestOrEven, .isInexact)
    /* dqmul019 */ self.multiply128("-9.99999999999999999", "-9.99999999999999999", "99.99999999999999980000000000000000", .toNearestOrEven, .isInexact)
    /* dqmul021 */ self.multiply128("0", "0", "0", .toNearestOrEven)
    /* dqmul022 */ self.multiply128("0", "-0", "-0", .toNearestOrEven)
    /* dqmul023 */ self.multiply128("-0", "0", "-0", .toNearestOrEven)
    /* dqmul024 */ self.multiply128("-0", "-0", "0", .toNearestOrEven)
    /* dqmul025 */ self.multiply128("-0.0", "-0.0", "0.00", .toNearestOrEven)
    /* dqmul026 */ self.multiply128("-0.0", "-0.0", "0.00", .toNearestOrEven)
    /* dqmul027 */ self.multiply128("-0.0", "-0.0", "0.00", .toNearestOrEven)
    /* dqmul028 */ self.multiply128("-0.0", "-0.0", "0.00", .toNearestOrEven)
    /* dqmul030 */ self.multiply128("5.00", "1E-3", "0.00500", .toNearestOrEven)
    /* dqmul031 */ self.multiply128("00.00", "0.000", "0.00000", .toNearestOrEven)
    /* dqmul032 */ self.multiply128("00.00", "0E-3", "0.00000", .toNearestOrEven)
    /* dqmul033 */ self.multiply128("0E-3", "00.00", "0.00000", .toNearestOrEven)
    /* dqmul034 */ self.multiply128("-5.00", "1E-3", "-0.00500", .toNearestOrEven)
    /* dqmul035 */ self.multiply128("-00.00", "0.000", "-0.00000", .toNearestOrEven)
    /* dqmul036 */ self.multiply128("-00.00", "0E-3", "-0.00000", .toNearestOrEven)
    /* dqmul037 */ self.multiply128("-0E-3", "00.00", "-0.00000", .toNearestOrEven)
    /* dqmul038 */ self.multiply128("5.00", "-1E-3", "-0.00500", .toNearestOrEven)
    /* dqmul039 */ self.multiply128("00.00", "-0.000", "-0.00000", .toNearestOrEven)
    /* dqmul040 */ self.multiply128("00.00", "-0E-3", "-0.00000", .toNearestOrEven)
    /* dqmul041 */ self.multiply128("0E-3", "-00.00", "-0.00000", .toNearestOrEven)
    /* dqmul042 */ self.multiply128("-5.00", "-1E-3", "0.00500", .toNearestOrEven)
    /* dqmul043 */ self.multiply128("-00.00", "-0.000", "0.00000", .toNearestOrEven)
    /* dqmul044 */ self.multiply128("-00.00", "-0E-3", "0.00000", .toNearestOrEven)
    /* dqmul045 */ self.multiply128("-0E-3", "-00.00", "0.00000", .toNearestOrEven)
    /* dqmul050 */ self.multiply128("1.20", "3", "3.60", .toNearestOrEven)
    /* dqmul051 */ self.multiply128("7", "3", "21", .toNearestOrEven)
    /* dqmul052 */ self.multiply128("0.9", "0.8", "0.72", .toNearestOrEven)
    /* dqmul053 */ self.multiply128("0.9", "-0", "-0.0", .toNearestOrEven)
    /* dqmul054 */ self.multiply128("654321", "654321", "428135971041", .toNearestOrEven)
    /* dqmul060 */ self.multiply128("123.45", "1e7", "1.2345E+9", .toNearestOrEven)
    /* dqmul061 */ self.multiply128("123.45", "1e8", "1.2345E+10", .toNearestOrEven)
    /* dqmul062 */ self.multiply128("123.45", "1e+9", "1.2345E+11", .toNearestOrEven)
    /* dqmul063 */ self.multiply128("123.45", "1e10", "1.2345E+12", .toNearestOrEven)
    /* dqmul064 */ self.multiply128("123.45", "1e11", "1.2345E+13", .toNearestOrEven)
    /* dqmul065 */ self.multiply128("123.45", "1e12", "1.2345E+14", .toNearestOrEven)
    /* dqmul066 */ self.multiply128("123.45", "1e13", "1.2345E+15", .toNearestOrEven)
    /* dqmul080 */ self.multiply128("0.1", "1230123456456789", "123012345645678.9", .toNearestOrEven)
    /* dqmul084 */ self.multiply128("0.1", "1230123456456789", "123012345645678.9", .toNearestOrEven)
    /* dqmul090 */ self.multiply128("1230123456456789", "0.1", "123012345645678.9", .toNearestOrEven)
    /* dqmul094 */ self.multiply128("1230123456456789", "0.1", "123012345645678.9", .toNearestOrEven)
    /* dqmul1001 */ self.multiply128("1", "10", "10", .toNearestOrAwayFromZero)
    /* dqmul1002 */ self.multiply128("1", "100", "100", .toNearestOrAwayFromZero)
    /* dqmul1003 */ self.multiply128("1", "1000", "1000", .toNearestOrAwayFromZero)
    /* dqmul1004 */ self.multiply128("1", "10000", "10000", .toNearestOrAwayFromZero)
    /* dqmul1005 */ self.multiply128("1", "100000", "100000", .toNearestOrAwayFromZero)
    /* dqmul1006 */ self.multiply128("1", "1000000", "1000000", .toNearestOrAwayFromZero)
    /* dqmul1007 */ self.multiply128("1", "10000000", "10000000", .toNearestOrAwayFromZero)
    /* dqmul1008 */ self.multiply128("1", "100000000", "100000000", .toNearestOrAwayFromZero)
    /* dqmul1009 */ self.multiply128("1", "1000000000", "1000000000", .toNearestOrAwayFromZero)
    /* dqmul101 */ self.multiply128("9", "9", "81", .toNearestOrEven)
    /* dqmul1010 */ self.multiply128("1", "10000000000", "10000000000", .toNearestOrAwayFromZero)
    /* dqmul1011 */ self.multiply128("1", "100000000000", "100000000000", .toNearestOrAwayFromZero)
    /* dqmul1012 */ self.multiply128("1", "1000000000000", "1000000000000", .toNearestOrAwayFromZero)
    /* dqmul1013 */ self.multiply128("1", "10000000000000", "10000000000000", .toNearestOrAwayFromZero)
    /* dqmul1014 */ self.multiply128("1", "100000000000000", "100000000000000", .toNearestOrAwayFromZero)
    /* dqmul1015 */ self.multiply128("1", "1000000000000000", "1000000000000000", .toNearestOrAwayFromZero)
    /* dqmul1016 */ self.multiply128("1", "1000000000000000000", "1000000000000000000", .toNearestOrAwayFromZero)
    /* dqmul1017 */ self.multiply128("1", "100000000000000000000000000", "100000000000000000000000000", .toNearestOrAwayFromZero)
    /* dqmul1018 */ self.multiply128("1", "1000000000000000000000000000", "1000000000000000000000000000", .toNearestOrAwayFromZero)
    /* dqmul1019 */ self.multiply128("1", "10000000000000000000000000000", "10000000000000000000000000000", .toNearestOrAwayFromZero)
    /* dqmul102 */ self.multiply128("9", "90", "810", .toNearestOrEven)
    /* dqmul1020 */ self.multiply128("1", "1000000000000000000000000000000000", "1000000000000000000000000000000000", .toNearestOrAwayFromZero)
    /* dqmul1021 */ self.multiply128("10", "1", "10", .toNearestOrAwayFromZero)
    /* dqmul1022 */ self.multiply128("10", "10", "100", .toNearestOrAwayFromZero)
    /* dqmul1023 */ self.multiply128("10", "100", "1000", .toNearestOrAwayFromZero)
    /* dqmul1024 */ self.multiply128("10", "1000", "10000", .toNearestOrAwayFromZero)
    /* dqmul1025 */ self.multiply128("10", "10000", "100000", .toNearestOrAwayFromZero)
    /* dqmul1026 */ self.multiply128("10", "100000", "1000000", .toNearestOrAwayFromZero)
    /* dqmul1027 */ self.multiply128("10", "1000000", "10000000", .toNearestOrAwayFromZero)
    /* dqmul1028 */ self.multiply128("10", "10000000", "100000000", .toNearestOrAwayFromZero)
    /* dqmul1029 */ self.multiply128("10", "100000000", "1000000000", .toNearestOrAwayFromZero)
    /* dqmul103 */ self.multiply128("9", "900", "8100", .toNearestOrEven)
    /* dqmul1030 */ self.multiply128("10", "1000000000", "10000000000", .toNearestOrAwayFromZero)
    /* dqmul1031 */ self.multiply128("10", "10000000000", "100000000000", .toNearestOrAwayFromZero)
    /* dqmul1032 */ self.multiply128("10", "100000000000", "1000000000000", .toNearestOrAwayFromZero)
    /* dqmul1033 */ self.multiply128("10", "1000000000000", "10000000000000", .toNearestOrAwayFromZero)
    /* dqmul1034 */ self.multiply128("10", "10000000000000", "100000000000000", .toNearestOrAwayFromZero)
    /* dqmul1035 */ self.multiply128("10", "100000000000000", "1000000000000000", .toNearestOrAwayFromZero)
    /* dqmul1036 */ self.multiply128("10", "100000000000000000", "1000000000000000000", .toNearestOrAwayFromZero)
    /* dqmul1037 */ self.multiply128("10", "10000000000000000000000000", "100000000000000000000000000", .toNearestOrAwayFromZero)
    /* dqmul1038 */ self.multiply128("10", "100000000000000000000000000", "1000000000000000000000000000", .toNearestOrAwayFromZero)
    /* dqmul1039 */ self.multiply128("10", "1000000000000000000000000000", "10000000000000000000000000000", .toNearestOrAwayFromZero)
    /* dqmul104 */ self.multiply128("9", "9000", "81000", .toNearestOrEven)
    /* dqmul1040 */ self.multiply128("10", "100000000000000000000000000000000", "1000000000000000000000000000000000", .toNearestOrAwayFromZero)
    /* dqmul1041 */ self.multiply128("100", "0.1", "10.0", .toNearestOrAwayFromZero)
    /* dqmul1042 */ self.multiply128("100", "1", "100", .toNearestOrAwayFromZero)
    /* dqmul1043 */ self.multiply128("100", "10", "1000", .toNearestOrAwayFromZero)
    /* dqmul1044 */ self.multiply128("100", "100", "10000", .toNearestOrAwayFromZero)
    /* dqmul1045 */ self.multiply128("100", "1000", "100000", .toNearestOrAwayFromZero)
    /* dqmul1046 */ self.multiply128("100", "10000", "1000000", .toNearestOrAwayFromZero)
    /* dqmul1047 */ self.multiply128("100", "100000", "10000000", .toNearestOrAwayFromZero)
    /* dqmul1048 */ self.multiply128("100", "1000000", "100000000", .toNearestOrAwayFromZero)
    /* dqmul1049 */ self.multiply128("100", "10000000", "1000000000", .toNearestOrAwayFromZero)
    /* dqmul105 */ self.multiply128("9", "90000", "810000", .toNearestOrEven)
    /* dqmul1050 */ self.multiply128("100", "100000000", "10000000000", .toNearestOrAwayFromZero)
    /* dqmul1051 */ self.multiply128("100", "1000000000", "100000000000", .toNearestOrAwayFromZero)
    /* dqmul1052 */ self.multiply128("100", "10000000000", "1000000000000", .toNearestOrAwayFromZero)
    /* dqmul1053 */ self.multiply128("100", "100000000000", "10000000000000", .toNearestOrAwayFromZero)
    /* dqmul1054 */ self.multiply128("100", "1000000000000", "100000000000000", .toNearestOrAwayFromZero)
    /* dqmul1055 */ self.multiply128("100", "10000000000000", "1000000000000000", .toNearestOrAwayFromZero)
    /* dqmul1056 */ self.multiply128("100", "10000000000000000", "1000000000000000000", .toNearestOrAwayFromZero)
    /* dqmul1057 */ self.multiply128("100", "1000000000000000000000000", "100000000000000000000000000", .toNearestOrAwayFromZero)
    /* dqmul1058 */ self.multiply128("100", "10000000000000000000000000", "1000000000000000000000000000", .toNearestOrAwayFromZero)
    /* dqmul1059 */ self.multiply128("100", "100000000000000000000000000", "10000000000000000000000000000", .toNearestOrAwayFromZero)
    /* dqmul106 */ self.multiply128("9", "900000", "8100000", .toNearestOrEven)
    /* dqmul1060 */ self.multiply128("100", "10000000000000000000000000000000", "1000000000000000000000000000000000", .toNearestOrAwayFromZero)
    /* dqmul1061 */ self.multiply128("1000", "0.01", "10.00", .toNearestOrAwayFromZero)
    /* dqmul1062 */ self.multiply128("1000", "0.1", "100.0", .toNearestOrAwayFromZero)
    /* dqmul1063 */ self.multiply128("1000", "1", "1000", .toNearestOrAwayFromZero)
    /* dqmul1064 */ self.multiply128("1000", "10", "10000", .toNearestOrAwayFromZero)
    /* dqmul1065 */ self.multiply128("1000", "100", "100000", .toNearestOrAwayFromZero)
    /* dqmul1066 */ self.multiply128("1000", "1000", "1000000", .toNearestOrAwayFromZero)
    /* dqmul1067 */ self.multiply128("1000", "10000", "10000000", .toNearestOrAwayFromZero)
    /* dqmul1068 */ self.multiply128("1000", "100000", "100000000", .toNearestOrAwayFromZero)
    /* dqmul1069 */ self.multiply128("1000", "1000000", "1000000000", .toNearestOrAwayFromZero)
    /* dqmul107 */ self.multiply128("9", "9000000", "81000000", .toNearestOrEven)
    /* dqmul1070 */ self.multiply128("1000", "10000000", "10000000000", .toNearestOrAwayFromZero)
    /* dqmul1071 */ self.multiply128("1000", "100000000", "100000000000", .toNearestOrAwayFromZero)
    /* dqmul1072 */ self.multiply128("1000", "1000000000", "1000000000000", .toNearestOrAwayFromZero)
    /* dqmul1073 */ self.multiply128("1000", "10000000000", "10000000000000", .toNearestOrAwayFromZero)
    /* dqmul1074 */ self.multiply128("1000", "100000000000", "100000000000000", .toNearestOrAwayFromZero)
    /* dqmul1075 */ self.multiply128("1000", "1000000000000", "1000000000000000", .toNearestOrAwayFromZero)
    /* dqmul1076 */ self.multiply128("1000", "1000000000000000", "1000000000000000000", .toNearestOrAwayFromZero)
    /* dqmul1077 */ self.multiply128("1000", "100000000000000000000000", "100000000000000000000000000", .toNearestOrAwayFromZero)
    /* dqmul1078 */ self.multiply128("1000", "1000000000000000000000000", "1000000000000000000000000000", .toNearestOrAwayFromZero)
    /* dqmul1079 */ self.multiply128("1000", "10000000000000000000000000", "10000000000000000000000000000", .toNearestOrAwayFromZero)
    /* dqmul108 */ self.multiply128("9", "90000000", "810000000", .toNearestOrEven)
    /* dqmul1080 */ self.multiply128("1000", "1000000000000000000000000000000", "1000000000000000000000000000000000", .toNearestOrAwayFromZero)
    /* dqmul1081 */ self.multiply128("10000", "0.001", "10.000", .toNearestOrAwayFromZero)
    /* dqmul1082 */ self.multiply128("10000", "0.01", "100.00", .toNearestOrAwayFromZero)
    /* dqmul1083 */ self.multiply128("10000", "0.1", "1000.0", .toNearestOrAwayFromZero)
    /* dqmul1084 */ self.multiply128("10000", "1", "10000", .toNearestOrAwayFromZero)
    /* dqmul1085 */ self.multiply128("10000", "10", "100000", .toNearestOrAwayFromZero)
    /* dqmul1086 */ self.multiply128("10000", "100", "1000000", .toNearestOrAwayFromZero)
    /* dqmul1087 */ self.multiply128("10000", "1000", "10000000", .toNearestOrAwayFromZero)
    /* dqmul1088 */ self.multiply128("10000", "10000", "100000000", .toNearestOrAwayFromZero)
    /* dqmul1089 */ self.multiply128("10000", "100000", "1000000000", .toNearestOrAwayFromZero)
    /* dqmul109 */ self.multiply128("9", "900000000", "8100000000", .toNearestOrEven)
    /* dqmul1090 */ self.multiply128("10000", "1000000", "10000000000", .toNearestOrAwayFromZero)
    /* dqmul1091 */ self.multiply128("10000", "10000000", "100000000000", .toNearestOrAwayFromZero)
    /* dqmul1092 */ self.multiply128("10000", "100000000", "1000000000000", .toNearestOrAwayFromZero)
    /* dqmul1093 */ self.multiply128("10000", "1000000000", "10000000000000", .toNearestOrAwayFromZero)
    /* dqmul1094 */ self.multiply128("10000", "10000000000", "100000000000000", .toNearestOrAwayFromZero)
    /* dqmul1095 */ self.multiply128("10000", "100000000000", "1000000000000000", .toNearestOrAwayFromZero)
    /* dqmul1096 */ self.multiply128("10000", "100000000000000", "1000000000000000000", .toNearestOrAwayFromZero)
    /* dqmul1097 */ self.multiply128("10000", "10000000000000000000000", "100000000000000000000000000", .toNearestOrAwayFromZero)
    /* dqmul1098 */ self.multiply128("10000", "100000000000000000000000", "1000000000000000000000000000", .toNearestOrAwayFromZero)
    /* dqmul1099 */ self.multiply128("10000", "1000000000000000000000000", "10000000000000000000000000000", .toNearestOrAwayFromZero)
    /* dqmul110 */ self.multiply128("9", "9000000000", "81000000000", .toNearestOrEven)
    /* dqmul1100 */ self.multiply128("10000", "100000000000000000000000000000", "1000000000000000000000000000000000", .toNearestOrAwayFromZero)
    /* dqmul1107 */ self.multiply128("10000", "99999999999", "999999999990000", .toNearestOrAwayFromZero)
    /* dqmul1108 */ self.multiply128("10000", "99999999999", "999999999990000", .toNearestOrAwayFromZero)
    /* dqmul111 */ self.multiply128("9", "90000000000", "810000000000", .toNearestOrEven)
    /* dqmul1110 */ self.multiply128("0.0003333333333333333333333333333333333", "1000", "0.3333333333333333333333333333333333", .toNearestOrAwayFromZero)
    /* dqmul112 */ self.multiply128("9", "900000000000", "8100000000000", .toNearestOrEven)
    /* dqmul113 */ self.multiply128("9", "9000000000000", "81000000000000", .toNearestOrEven)
    /* dqmul114 */ self.multiply128("9", "90000000000000", "810000000000000", .toNearestOrEven)
    /* dqmul115 */ self.multiply128("9", "900000000000000", "8100000000000000", .toNearestOrEven)
    /* dqmul131 */ self.multiply128("3", "3", "9", .toNearestOrEven)
    /* dqmul132 */ self.multiply128("3", "30", "90", .toNearestOrEven)
    /* dqmul133 */ self.multiply128("3", "300", "900", .toNearestOrEven)
    /* dqmul134 */ self.multiply128("3", "3000", "9000", .toNearestOrEven)
    /* dqmul135 */ self.multiply128("3", "30000", "90000", .toNearestOrEven)
    /* dqmul136 */ self.multiply128("3", "300000", "900000", .toNearestOrEven)
    /* dqmul137 */ self.multiply128("3", "3000000", "9000000", .toNearestOrEven)
    /* dqmul138 */ self.multiply128("3", "30000000", "90000000", .toNearestOrEven)
    /* dqmul139 */ self.multiply128("3", "300000000", "900000000", .toNearestOrEven)
    /* dqmul140 */ self.multiply128("3", "3000000000", "9000000000", .toNearestOrEven)
    /* dqmul141 */ self.multiply128("3", "30000000000", "90000000000", .toNearestOrEven)
    /* dqmul142 */ self.multiply128("3", "300000000000", "900000000000", .toNearestOrEven)
    /* dqmul143 */ self.multiply128("3", "3000000000000", "9000000000000", .toNearestOrEven)
    /* dqmul144 */ self.multiply128("3", "30000000000000", "90000000000000", .toNearestOrEven)
    /* dqmul145 */ self.multiply128("3", "300000000000000", "900000000000000", .toNearestOrEven)
    /* dqmul146 */ self.multiply128("3", "3000000000000000", "9000000000000000", .toNearestOrEven)
    /* dqmul147 */ self.multiply128("3", "30000000000000000", "90000000000000000", .toNearestOrEven)
    /* dqmul148 */ self.multiply128("3", "300000000000000000", "900000000000000000", .toNearestOrEven)
    /* dqmul149 */ self.multiply128("3", "3000000000000000000", "9000000000000000000", .toNearestOrEven)
    /* dqmul150 */ self.multiply128("3", "30000000000000000000", "90000000000000000000", .toNearestOrEven)
    /* dqmul151 */ self.multiply128("3", "300000000000000000000", "900000000000000000000", .toNearestOrEven)
    /* dqmul152 */ self.multiply128("3", "3000000000000000000000", "9000000000000000000000", .toNearestOrEven)
    /* dqmul153 */ self.multiply128("3", "30000000000000000000000", "90000000000000000000000", .toNearestOrEven)
    /* dqmul263 */ self.multiply128("30269.587755640502150977251770554", "4.8046009735990873395936309640543", "145433.2908011933696719165119928296", .toNearestOrEven, .isInexact)
    /* dqmul301 */ self.multiply128("900000000000000000", "9", "8100000000000000000", .toNearestOrEven)
    /* dqmul302 */ self.multiply128("900000000000000000", "90", "81000000000000000000", .toNearestOrEven)
    /* dqmul303 */ self.multiply128("900000000000000000", "900", "810000000000000000000", .toNearestOrEven)
    /* dqmul304 */ self.multiply128("900000000000000000", "9000", "8100000000000000000000", .toNearestOrEven)
    /* dqmul305 */ self.multiply128("900000000000000000", "90000", "81000000000000000000000", .toNearestOrEven)
    /* dqmul306 */ self.multiply128("900000000000000000", "900000", "810000000000000000000000", .toNearestOrEven)
    /* dqmul307 */ self.multiply128("900000000000000000", "9000000", "8100000000000000000000000", .toNearestOrEven)
    /* dqmul308 */ self.multiply128("900000000000000000", "90000000", "81000000000000000000000000", .toNearestOrEven)
    /* dqmul309 */ self.multiply128("900000000000000000", "900000000", "810000000000000000000000000", .toNearestOrEven)
    /* dqmul310 */ self.multiply128("900000000000000000", "9000000000", "8100000000000000000000000000", .toNearestOrEven)
    /* dqmul311 */ self.multiply128("900000000000000000", "90000000000", "81000000000000000000000000000", .toNearestOrEven)
    /* dqmul312 */ self.multiply128("900000000000000000", "900000000000", "810000000000000000000000000000", .toNearestOrEven)
    /* dqmul313 */ self.multiply128("900000000000000000", "9000000000000", "8100000000000000000000000000000", .toNearestOrEven)
    /* dqmul314 */ self.multiply128("900000000000000000", "90000000000000", "81000000000000000000000000000000", .toNearestOrEven)
    /* dqmul315 */ self.multiply128("900000000000000000", "900000000000000", "810000000000000000000000000000000", .toNearestOrEven)
    /* dqmul316 */ self.multiply128("900000000000000000", "9000000000000000", "8100000000000000000000000000000000", .toNearestOrEven)
    /* dqmul317 */ self.multiply128("9000000000000000000", "9000000000000000", "8.100000000000000000000000000000000E+34", .toNearestOrEven)
    /* dqmul318 */ self.multiply128("90000000000000000000", "9000000000000000", "8.100000000000000000000000000000000E+35", .toNearestOrEven)
    /* dqmul319 */ self.multiply128("900000000000000000000", "9000000000000000", "8.100000000000000000000000000000000E+36", .toNearestOrEven)
    /* dqmul320 */ self.multiply128("9000000000000000000000", "9000000000000000", "8.100000000000000000000000000000000E+37", .toNearestOrEven)
    /* dqmul321 */ self.multiply128("90000000000000000000000", "9000000000000000", "8.100000000000000000000000000000000E+38", .toNearestOrEven)
    /* dqmul322 */ self.multiply128("900000000000000000000000", "9000000000000000", "8.100000000000000000000000000000000E+39", .toNearestOrEven)
    /* dqmul323 */ self.multiply128("9000000000000000000000000", "9000000000000000", "8.100000000000000000000000000000000E+40", .toNearestOrEven)
    /* dqmul504 */ self.multiply128("0E-4260", "1000E-4260", "0E-6176", .toNearestOrEven)
    /* dqmul505 */ self.multiply128("100E+4260", "0E+4260", "0E+6111", .toNearestOrEven)
    /* dqmul541 */ self.multiply128("0", "-1", "-0", .toNearestOrEven)
    /* dqmul542 */ self.multiply128("-0", "-1", "0", .toNearestOrEven)
    /* dqmul543 */ self.multiply128("0", "1", "0", .toNearestOrEven)
    /* dqmul544 */ self.multiply128("-0", "1", "-0", .toNearestOrEven)
    /* dqmul545 */ self.multiply128("-1", "0", "-0", .toNearestOrEven)
    /* dqmul546 */ self.multiply128("-1", "-0", "0", .toNearestOrEven)
    /* dqmul547 */ self.multiply128("1", "0", "0", .toNearestOrEven)
    /* dqmul548 */ self.multiply128("1", "-0", "-0", .toNearestOrEven)
    /* dqmul551 */ self.multiply128("0.0", "-1", "-0.0", .toNearestOrEven)
    /* dqmul552 */ self.multiply128("-0.0", "-1", "0.0", .toNearestOrEven)
    /* dqmul553 */ self.multiply128("0.0", "1", "0.0", .toNearestOrEven)
    /* dqmul554 */ self.multiply128("-0.0", "1", "-0.0", .toNearestOrEven)
    /* dqmul555 */ self.multiply128("-1.0", "0", "-0.0", .toNearestOrEven)
    /* dqmul556 */ self.multiply128("-1.0", "-0", "0.0", .toNearestOrEven)
    /* dqmul557 */ self.multiply128("1.0", "0", "0.0", .toNearestOrEven)
    /* dqmul558 */ self.multiply128("1.0", "-0", "-0.0", .toNearestOrEven)
    /* dqmul561 */ self.multiply128("0", "-1.0", "-0.0", .toNearestOrEven)
    /* dqmul562 */ self.multiply128("-0", "-1.0", "0.0", .toNearestOrEven)
    /* dqmul563 */ self.multiply128("0", "1.0", "0.0", .toNearestOrEven)
    /* dqmul564 */ self.multiply128("-0", "1.0", "-0.0", .toNearestOrEven)
    /* dqmul565 */ self.multiply128("-1", "0.0", "-0.0", .toNearestOrEven)
    /* dqmul566 */ self.multiply128("-1", "-0.0", "0.0", .toNearestOrEven)
    /* dqmul567 */ self.multiply128("1", "0.0", "0.0", .toNearestOrEven)
    /* dqmul568 */ self.multiply128("1", "-0.0", "-0.0", .toNearestOrEven)
    /* dqmul571 */ self.multiply128("0.0", "-1.0", "-0.00", .toNearestOrEven)
    /* dqmul572 */ self.multiply128("-0.0", "-1.0", "0.00", .toNearestOrEven)
    /* dqmul573 */ self.multiply128("0.0", "1.0", "0.00", .toNearestOrEven)
    /* dqmul574 */ self.multiply128("-0.0", "1.0", "-0.00", .toNearestOrEven)
    /* dqmul575 */ self.multiply128("-1.0", "0.0", "-0.00", .toNearestOrEven)
    /* dqmul576 */ self.multiply128("-1.0", "-0.0", "0.00", .toNearestOrEven)
    /* dqmul577 */ self.multiply128("1.0", "0.0", "0.00", .toNearestOrEven)
    /* dqmul578 */ self.multiply128("1.0", "-0.0", "-0.00", .toNearestOrEven)
    /* dqmul580 */ self.multiply128("Inf", "-Inf", "-Infinity", .toNearestOrEven)
    /* dqmul581 */ self.multiply128("Inf", "-1000", "-Infinity", .toNearestOrEven)
    /* dqmul582 */ self.multiply128("Inf", "-1", "-Infinity", .toNearestOrEven)
    /* dqmul583 */ self.multiply128("Inf", "-0", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmul584 */ self.multiply128("Inf", "0", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmul585 */ self.multiply128("Inf", "1", "Infinity", .toNearestOrEven)
    /* dqmul586 */ self.multiply128("Inf", "1000", "Infinity", .toNearestOrEven)
    /* dqmul587 */ self.multiply128("Inf", "Inf", "Infinity", .toNearestOrEven)
    /* dqmul588 */ self.multiply128("-1000", "Inf", "-Infinity", .toNearestOrEven)
    /* dqmul589 */ self.multiply128("-Inf", "Inf", "-Infinity", .toNearestOrEven)
    /* dqmul590 */ self.multiply128("-1", "Inf", "-Infinity", .toNearestOrEven)
    /* dqmul591 */ self.multiply128("-0", "Inf", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmul592 */ self.multiply128("0", "Inf", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmul593 */ self.multiply128("1", "Inf", "Infinity", .toNearestOrEven)
    /* dqmul594 */ self.multiply128("1000", "Inf", "Infinity", .toNearestOrEven)
    /* dqmul595 */ self.multiply128("Inf", "Inf", "Infinity", .toNearestOrEven)
    /* dqmul600 */ self.multiply128("-Inf", "-Inf", "Infinity", .toNearestOrEven)
    /* dqmul601 */ self.multiply128("-Inf", "-1000", "Infinity", .toNearestOrEven)
    /* dqmul602 */ self.multiply128("-Inf", "-1", "Infinity", .toNearestOrEven)
    /* dqmul603 */ self.multiply128("-Inf", "-0", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmul604 */ self.multiply128("-Inf", "0", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmul605 */ self.multiply128("-Inf", "1", "-Infinity", .toNearestOrEven)
    /* dqmul606 */ self.multiply128("-Inf", "1000", "-Infinity", .toNearestOrEven)
    /* dqmul607 */ self.multiply128("-Inf", "Inf", "-Infinity", .toNearestOrEven)
    /* dqmul608 */ self.multiply128("-1000", "Inf", "-Infinity", .toNearestOrEven)
    /* dqmul609 */ self.multiply128("-Inf", "-Inf", "Infinity", .toNearestOrEven)
    /* dqmul610 */ self.multiply128("-1", "-Inf", "Infinity", .toNearestOrEven)
    /* dqmul611 */ self.multiply128("-0", "-Inf", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmul612 */ self.multiply128("0", "-Inf", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmul613 */ self.multiply128("1", "-Inf", "-Infinity", .toNearestOrEven)
    /* dqmul614 */ self.multiply128("1000", "-Inf", "-Infinity", .toNearestOrEven)
    /* dqmul615 */ self.multiply128("Inf", "-Inf", "-Infinity", .toNearestOrEven)
    /* dqmul621 */ self.multiply128("NaN", "-Inf", "NaN", .toNearestOrEven)
    /* dqmul622 */ self.multiply128("NaN", "-1000", "NaN", .toNearestOrEven)
    /* dqmul623 */ self.multiply128("NaN", "-1", "NaN", .toNearestOrEven)
    /* dqmul624 */ self.multiply128("NaN", "-0", "NaN", .toNearestOrEven)
    /* dqmul625 */ self.multiply128("NaN", "0", "NaN", .toNearestOrEven)
    /* dqmul626 */ self.multiply128("NaN", "1", "NaN", .toNearestOrEven)
    /* dqmul627 */ self.multiply128("NaN", "1000", "NaN", .toNearestOrEven)
    /* dqmul628 */ self.multiply128("NaN", "Inf", "NaN", .toNearestOrEven)
    /* dqmul629 */ self.multiply128("NaN", "NaN", "NaN", .toNearestOrEven)
    /* dqmul630 */ self.multiply128("-Inf", "NaN", "NaN", .toNearestOrEven)
    /* dqmul631 */ self.multiply128("-1000", "NaN", "NaN", .toNearestOrEven)
    /* dqmul632 */ self.multiply128("-1", "NaN", "NaN", .toNearestOrEven)
    /* dqmul633 */ self.multiply128("-0", "NaN", "NaN", .toNearestOrEven)
    /* dqmul634 */ self.multiply128("0", "NaN", "NaN", .toNearestOrEven)
    /* dqmul635 */ self.multiply128("1", "NaN", "NaN", .toNearestOrEven)
    /* dqmul636 */ self.multiply128("1000", "NaN", "NaN", .toNearestOrEven)
    /* dqmul637 */ self.multiply128("Inf", "NaN", "NaN", .toNearestOrEven)
    /* dqmul641 */ self.multiply128("sNaN", "-Inf", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmul642 */ self.multiply128("sNaN", "-1000", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmul643 */ self.multiply128("sNaN", "-1", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmul644 */ self.multiply128("sNaN", "-0", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmul645 */ self.multiply128("sNaN", "0", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmul646 */ self.multiply128("sNaN", "1", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmul647 */ self.multiply128("sNaN", "1000", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmul648 */ self.multiply128("sNaN", "NaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmul649 */ self.multiply128("sNaN", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmul650 */ self.multiply128("NaN", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmul651 */ self.multiply128("-Inf", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmul652 */ self.multiply128("-1000", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmul653 */ self.multiply128("-1", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmul654 */ self.multiply128("-0", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmul655 */ self.multiply128("0", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmul656 */ self.multiply128("1", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmul657 */ self.multiply128("1000", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmul658 */ self.multiply128("Inf", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmul659 */ self.multiply128("NaN", "sNaN", "NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmul661 */ self.multiply128("NaN(0x9)", "-Inf", "NaN(0x9)", .toNearestOrEven)
    /* dqmul662 */ self.multiply128("NaN(0x8)", "999", "NaN(0x8)", .toNearestOrEven)
    /* dqmul663 */ self.multiply128("NaN(0x47)", "Inf", "NaN(0x47)", .toNearestOrEven)
    /* dqmul664 */ self.multiply128("NaN(0x6)", "NaN(0x5)", "NaN(0x6)", .toNearestOrEven)
    /* dqmul665 */ self.multiply128("-Inf", "NaN(0x4)", "NaN(0x4)", .toNearestOrEven)
    /* dqmul666 */ self.multiply128("-999", "NaN(0x21)", "NaN(0x21)", .toNearestOrEven)
    /* dqmul667 */ self.multiply128("Inf", "NaN(0x2)", "NaN(0x2)", .toNearestOrEven)
    /* dqmul671 */ self.multiply128("sNaN(0x63)", "-Inf", "NaN(0x63)", .toNearestOrEven, .isInvalidOperation)
    /* dqmul672 */ self.multiply128("sNaN(0x62)", "-11", "NaN(0x62)", .toNearestOrEven, .isInvalidOperation)
    /* dqmul673 */ self.multiply128("sNaN(0x61)", "NaN", "NaN(0x61)", .toNearestOrEven, .isInvalidOperation)
    /* dqmul674 */ self.multiply128("sNaN(0x10)", "sNaN(0x5e)", "NaN(0x10)", .toNearestOrEven, .isInvalidOperation)
    /* dqmul675 */ self.multiply128("NaN(0x5f)", "sNaN(0x5d)", "NaN(0x5d)", .toNearestOrEven, .isInvalidOperation)
    /* dqmul676 */ self.multiply128("-Inf", "sNaN(0x5c)", "NaN(0x5c)", .toNearestOrEven, .isInvalidOperation)
    /* dqmul677 */ self.multiply128("088", "sNaN(0x5b)", "NaN(0x5b)", .toNearestOrEven, .isInvalidOperation)
    /* dqmul678 */ self.multiply128("Inf", "sNaN(0x5a)", "NaN(0x5a)", .toNearestOrEven, .isInvalidOperation)
    /* dqmul679 */ self.multiply128("NaN", "sNaN(0x59)", "NaN(0x59)", .toNearestOrEven, .isInvalidOperation)
    /* dqmul681 */ self.multiply128("-NaN(0x9)", "-Inf", "-NaN(0x9)", .toNearestOrEven)
    /* dqmul682 */ self.multiply128("-NaN(0x8)", "999", "-NaN(0x8)", .toNearestOrEven)
    /* dqmul683 */ self.multiply128("-NaN(0x47)", "Inf", "-NaN(0x47)", .toNearestOrEven)
    /* dqmul684 */ self.multiply128("-NaN(0x6)", "-NaN(0x5)", "-NaN(0x6)", .toNearestOrEven)
    /* dqmul685 */ self.multiply128("-Inf", "-NaN(0x4)", "-NaN(0x4)", .toNearestOrEven)
    /* dqmul686 */ self.multiply128("-999", "-NaN(0x21)", "-NaN(0x21)", .toNearestOrEven)
    /* dqmul687 */ self.multiply128("Inf", "-NaN(0x2)", "-NaN(0x2)", .toNearestOrEven)
    /* dqmul691 */ self.multiply128("-sNaN(0x63)", "-Inf", "-NaN(0x63)", .toNearestOrEven, .isInvalidOperation)
    /* dqmul692 */ self.multiply128("-sNaN(0x62)", "-11", "-NaN(0x62)", .toNearestOrEven, .isInvalidOperation)
    /* dqmul693 */ self.multiply128("-sNaN(0x61)", "NaN", "-NaN(0x61)", .toNearestOrEven, .isInvalidOperation)
    /* dqmul694 */ self.multiply128("-sNaN(0x10)", "-sNaN(0x5e)", "-NaN(0x10)", .toNearestOrEven, .isInvalidOperation)
    /* dqmul695 */ self.multiply128("-NaN(0x5f)", "-sNaN(0x5d)", "-NaN(0x5d)", .toNearestOrEven, .isInvalidOperation)
    /* dqmul696 */ self.multiply128("-Inf", "-sNaN(0x5c)", "-NaN(0x5c)", .toNearestOrEven, .isInvalidOperation)
    /* dqmul697 */ self.multiply128("088", "-sNaN(0x5b)", "-NaN(0x5b)", .toNearestOrEven, .isInvalidOperation)
    /* dqmul698 */ self.multiply128("Inf", "-sNaN(0x5a)", "-NaN(0x5a)", .toNearestOrEven, .isInvalidOperation)
    /* dqmul699 */ self.multiply128("-NaN", "-sNaN(0x59)", "-NaN(0x59)", .toNearestOrEven, .isInvalidOperation)
    /* dqmul701 */ self.multiply128("-NaN", "-Inf", "-NaN", .toNearestOrEven)
    /* dqmul702 */ self.multiply128("-NaN", "999", "-NaN", .toNearestOrEven)
    /* dqmul703 */ self.multiply128("-NaN", "Inf", "-NaN", .toNearestOrEven)
    /* dqmul704 */ self.multiply128("-NaN", "-NaN", "-NaN", .toNearestOrEven)
    /* dqmul705 */ self.multiply128("-Inf", "-NaN(0x0)", "-NaN", .toNearestOrEven)
    /* dqmul706 */ self.multiply128("-999", "-NaN", "-NaN", .toNearestOrEven)
    /* dqmul707 */ self.multiply128("Inf", "-NaN", "-NaN", .toNearestOrEven)
    /* dqmul711 */ self.multiply128("-sNaN", "-Inf", "-NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmul712 */ self.multiply128("-sNaN", "-11", "-NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmul713 */ self.multiply128("-sNaN(0x0)", "NaN", "-NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmul714 */ self.multiply128("-sNaN", "-sNaN", "-NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmul715 */ self.multiply128("-NaN", "-sNaN", "-NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmul716 */ self.multiply128("-Inf", "-sNaN", "-NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmul717 */ self.multiply128("088", "-sNaN", "-NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmul718 */ self.multiply128("Inf", "-sNaN", "-NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmul719 */ self.multiply128("-NaN", "-sNaN", "-NaN", .toNearestOrEven, .isInvalidOperation)
    /* dqmul751 */ self.multiply128("1e+4277", "1e+3311", "Infinity", .toNearestOrEven, .isInexact | .isOverflow)
    /* dqmul752 */ self.multiply128("1e+4277", "-1e+3311", "-Infinity", .toNearestOrEven, .isInexact | .isOverflow)
    /* dqmul753 */ self.multiply128("-1e+4277", "1e+3311", "-Infinity", .toNearestOrEven, .isInexact | .isOverflow)
    /* dqmul754 */ self.multiply128("-1e+4277", "-1e+3311", "Infinity", .toNearestOrEven, .isInexact | .isOverflow)
    /* dqmul755 */ self.multiply128("1e-4277", "1e-3311", "0E-6176", .toNearestOrEven, .isInexact | .isUnderflow)
    /* dqmul756 */ self.multiply128("1e-4277", "-1e-3311", "-0E-6176", .toNearestOrEven, .isInexact | .isUnderflow)
    /* dqmul757 */ self.multiply128("-1e-4277", "1e-3311", "-0E-6176", .toNearestOrEven, .isInexact | .isUnderflow)
    /* dqmul758 */ self.multiply128("-1e-4277", "-1e-3311", "0E-6176", .toNearestOrEven, .isInexact | .isUnderflow)
    /* dqmul760 */ self.multiply128("1e-6069", "1e-101", "1E-6170", .toNearestOrEven)
    /* dqmul761 */ self.multiply128("1e-6069", "1e-102", "1E-6171", .toNearestOrEven)
    /* dqmul762 */ self.multiply128("1e-6069", "1e-103", "1E-6172", .toNearestOrEven)
    /* dqmul763 */ self.multiply128("1e-6069", "1e-104", "1E-6173", .toNearestOrEven)
    /* dqmul764 */ self.multiply128("1e-6069", "1e-105", "1E-6174", .toNearestOrEven)
    /* dqmul765 */ self.multiply128("1e-6069", "1e-106", "1E-6175", .toNearestOrEven)
    /* dqmul766 */ self.multiply128("1e-6069", "1e-107", "1E-6176", .toNearestOrEven)
    /* dqmul767 */ self.multiply128("1e-6069", "1e-108", "0E-6176", .toNearestOrEven, .isInexact | .isUnderflow)
    /* dqmul768 */ self.multiply128("1e-6069", "1e-109", "0E-6176", .toNearestOrEven, .isInexact | .isUnderflow)
    /* dqmul769 */ self.multiply128("1e-6069", "1e-110", "0E-6176", .toNearestOrEven, .isInexact | .isUnderflow)
    /* dqmul770 */ self.multiply128("1e+40", "1e+6101", "1.000000000000000000000000000000E+6141", .toNearestOrEven)
    /* dqmul771 */ self.multiply128("1e+40", "1e+6102", "1.0000000000000000000000000000000E+6142", .toNearestOrEven)
    /* dqmul772 */ self.multiply128("1e+40", "1e+6103", "1.00000000000000000000000000000000E+6143", .toNearestOrEven)
    /* dqmul773 */ self.multiply128("1e+40", "1e+6104", "1.000000000000000000000000000000000E+6144", .toNearestOrEven)
    /* dqmul774 */ self.multiply128("1e+40", "1e+6105", "Infinity", .toNearestOrEven, .isInexact | .isOverflow)
    /* dqmul775 */ self.multiply128("1e+40", "1e+6106", "Infinity", .toNearestOrEven, .isInexact | .isOverflow)
    /* dqmul776 */ self.multiply128("1e+40", "1e+6107", "Infinity", .toNearestOrEven, .isInexact | .isOverflow)
    /* dqmul777 */ self.multiply128("1e+40", "1e+6108", "Infinity", .toNearestOrEven, .isInexact | .isOverflow)
    /* dqmul778 */ self.multiply128("1e+40", "1e+6109", "Infinity", .toNearestOrEven, .isInexact | .isOverflow)
    /* dqmul779 */ self.multiply128("1e+40", "1e+6110", "Infinity", .toNearestOrEven, .isInexact | .isOverflow)
    /* dqmul801 */ self.multiply128("1.0000E-6172", "1", "1.0000E-6172", .toNearestOrEven)
    /* dqmul802 */ self.multiply128("1.000E-6172", "1e-1", "1.000E-6173", .toNearestOrEven)
    /* dqmul803 */ self.multiply128("1.00E-6172", "1e-2", "1.00E-6174", .toNearestOrEven)
    /* dqmul804 */ self.multiply128("1.0E-6172", "1e-3", "1.0E-6175", .toNearestOrEven)
    /* dqmul805 */ self.multiply128("1.0E-6172", "1e-4", "1E-6176", .toNearestOrEven)
    /* dqmul806 */ self.multiply128("1.3E-6172", "1e-4", "1E-6176", .toNearestOrEven, .isInexact | .isUnderflow)
    /* dqmul807 */ self.multiply128("1.5E-6172", "1e-4", "2E-6176", .toNearestOrEven, .isInexact | .isUnderflow)
    /* dqmul808 */ self.multiply128("1.7E-6172", "1e-4", "2E-6176", .toNearestOrEven, .isInexact | .isUnderflow)
    /* dqmul809 */ self.multiply128("2.3E-6172", "1e-4", "2E-6176", .toNearestOrEven, .isInexact | .isUnderflow)
    /* dqmul810 */ self.multiply128("2.5E-6172", "1e-4", "2E-6176", .toNearestOrEven, .isInexact | .isUnderflow)
    /* dqmul811 */ self.multiply128("2.7E-6172", "1e-4", "3E-6176", .toNearestOrEven, .isInexact | .isUnderflow)
    /* dqmul812 */ self.multiply128("1.49E-6172", "1e-4", "1E-6176", .toNearestOrEven, .isInexact | .isUnderflow)
    /* dqmul813 */ self.multiply128("1.50E-6172", "1e-4", "2E-6176", .toNearestOrEven, .isInexact | .isUnderflow)
    /* dqmul814 */ self.multiply128("1.51E-6172", "1e-4", "2E-6176", .toNearestOrEven, .isInexact | .isUnderflow)
    /* dqmul815 */ self.multiply128("2.49E-6172", "1e-4", "2E-6176", .toNearestOrEven, .isInexact | .isUnderflow)
    /* dqmul816 */ self.multiply128("2.50E-6172", "1e-4", "2E-6176", .toNearestOrEven, .isInexact | .isUnderflow)
    /* dqmul817 */ self.multiply128("2.51E-6172", "1e-4", "3E-6176", .toNearestOrEven, .isInexact | .isUnderflow)
    /* dqmul818 */ self.multiply128("1E-6172", "1e-4", "1E-6176", .toNearestOrEven)
    /* dqmul819 */ self.multiply128("3E-6172", "1e-5", "0E-6176", .toNearestOrEven, .isInexact | .isUnderflow)
    /* dqmul820 */ self.multiply128("5E-6172", "1e-5", "0E-6176", .toNearestOrEven, .isInexact | .isUnderflow)
    /* dqmul821 */ self.multiply128("7E-6172", "1e-5", "1E-6176", .toNearestOrEven, .isInexact | .isUnderflow)
    /* dqmul822 */ self.multiply128("9E-6172", "1e-5", "1E-6176", .toNearestOrEven, .isInexact | .isUnderflow)
    /* dqmul823 */ self.multiply128("9.9E-6172", "1e-5", "1E-6176", .toNearestOrEven, .isInexact | .isUnderflow)
    /* dqmul824 */ self.multiply128("1E-6172", "-1e-4", "-1E-6176", .toNearestOrEven)
    /* dqmul825 */ self.multiply128("3E-6172", "-1e-5", "-0E-6176", .toNearestOrEven, .isInexact | .isUnderflow)
    /* dqmul826 */ self.multiply128("-5E-6172", "1e-5", "-0E-6176", .toNearestOrEven, .isInexact | .isUnderflow)
    /* dqmul827 */ self.multiply128("7E-6172", "-1e-5", "-1E-6176", .toNearestOrEven, .isInexact | .isUnderflow)
    /* dqmul828 */ self.multiply128("-9E-6172", "1e-5", "-1E-6176", .toNearestOrEven, .isInexact | .isUnderflow)
    /* dqmul829 */ self.multiply128("9.9E-6172", "-1e-5", "-1E-6176", .toNearestOrEven, .isInexact | .isUnderflow)
    /* dqmul830 */ self.multiply128("3.0E-6172", "-1e-5", "-0E-6176", .toNearestOrEven, .isInexact | .isUnderflow)
    /* dqmul831 */ self.multiply128("1.0E-5977", "1e-200", "0E-6176", .toNearestOrEven, .isInexact | .isUnderflow)
    /* dqmul832 */ self.multiply128("1.0E-5977", "1e-199", "1E-6176", .toNearestOrEven)
    /* dqmul833 */ self.multiply128("1.0E-5977", "1e-198", "1.0E-6175", .toNearestOrEven)
    /* dqmul834 */ self.multiply128("2.0E-5977", "2e-198", "4.0E-6175", .toNearestOrEven)
    /* dqmul835 */ self.multiply128("4.0E-5977", "4e-198", "1.60E-6174", .toNearestOrEven)
    /* dqmul836 */ self.multiply128("10.0E-5977", "10e-198", "1.000E-6173", .toNearestOrEven)
    /* dqmul837 */ self.multiply128("30.0E-5977", "30e-198", "9.000E-6173", .toNearestOrEven)
    /* dqmul838 */ self.multiply128("40.0E-5982", "40e-166", "1.6000E-6145", .toNearestOrEven)
    /* dqmul839 */ self.multiply128("40.0E-5982", "40e-165", "1.6000E-6144", .toNearestOrEven)
    /* dqmul840 */ self.multiply128("40.0E-5982", "40e-164", "1.6000E-6143", .toNearestOrEven)
    /* dqmul870 */ self.multiply128("100", "9.999E+6143", "Infinity", .toNearestOrEven, .isInexact | .isOverflow)
    /* dqmul871 */ self.multiply128("100", "-9.999E+6143", "-Infinity", .toNearestOrEven, .isInexact | .isOverflow)
    /* dqmul872 */ self.multiply128("9.999E+6143", "100", "Infinity", .toNearestOrEven, .isInexact | .isOverflow)
    /* dqmul873 */ self.multiply128("-9.999E+6143", "100", "-Infinity", .toNearestOrEven, .isInexact | .isOverflow)
    /* dqmul881 */ self.multiply128("1.2347E-6133", "1.2347E-40", "1.524E-6173", .toNearestOrEven, .isInexact | .isUnderflow)
    /* dqmul882 */ self.multiply128("1.234E-6133", "1.234E-40", "1.523E-6173", .toNearestOrEven, .isInexact | .isUnderflow)
    /* dqmul883 */ self.multiply128("1.23E-6133", "1.23E-40", "1.513E-6173", .toNearestOrEven, .isInexact | .isUnderflow)
    /* dqmul884 */ self.multiply128("1.2E-6133", "1.2E-40", "1.44E-6173", .toNearestOrEven)
    /* dqmul885 */ self.multiply128("1.2E-6133", "1.2E-41", "1.44E-6174", .toNearestOrEven)
    /* dqmul886 */ self.multiply128("1.2E-6133", "1.2E-42", "1.4E-6175", .toNearestOrEven, .isInexact | .isUnderflow)
    /* dqmul887 */ self.multiply128("1.2E-6133", "1.3E-42", "1.6E-6175", .toNearestOrEven, .isInexact | .isUnderflow)
    /* dqmul888 */ self.multiply128("1.3E-6133", "1.3E-42", "1.7E-6175", .toNearestOrEven, .isInexact | .isUnderflow)
    /* dqmul889 */ self.multiply128("1.3E-6133", "1.3E-43", "2E-6176", .toNearestOrEven, .isInexact | .isUnderflow)
    /* dqmul890 */ self.multiply128("1.3E-6134", "1.3E-43", "0E-6176", .toNearestOrEven, .isInexact | .isUnderflow)
    /* dqmul891 */ self.multiply128("1.2345E-39", "1.234E-6133", "1.5234E-6172", .toNearestOrEven, .isInexact | .isUnderflow)
    /* dqmul892 */ self.multiply128("1.23456E-39", "1.234E-6133", "1.5234E-6172", .toNearestOrEven, .isInexact | .isUnderflow)
    /* dqmul893 */ self.multiply128("1.2345E-40", "1.234E-6133", "1.523E-6173", .toNearestOrEven, .isInexact | .isUnderflow)
    /* dqmul894 */ self.multiply128("1.23456E-40", "1.234E-6133", "1.523E-6173", .toNearestOrEven, .isInexact | .isUnderflow)
    /* dqmul895 */ self.multiply128("1.2345E-41", "1.234E-6133", "1.52E-6174", .toNearestOrEven, .isInexact | .isUnderflow)
    /* dqmul896 */ self.multiply128("1.23456E-41", "1.234E-6133", "1.52E-6174", .toNearestOrEven, .isInexact | .isUnderflow)
    /* dqmul906 */ self.multiply128("9.999999999999999999999999999999999E-6143", "1", "9.999999999999999999999999999999999E-6143", .toNearestOrEven)
    /* dqmul907 */ self.multiply128("1", "0.09999999999999999999999999999999999", "0.09999999999999999999999999999999999", .toNearestOrEven)
    /* dqmul908 */ self.multiply128("9.999999999999999999999999999999999E-6143", "0.09999999999999999999999999999999999", "1.000000000000000000000000000000000E-6143", .toNearestOrEven, .isInexact | .isUnderflow)
    /* dqmul909 */ self.multiply128("9999999999999999999999999999999999", "9999999999999999999999999999999999", "9.999999999999999999999999999999998E+67", .toNearestOrEven, .isInexact)
    /* dqmul910 */ self.multiply128("8.81125000000001349436E-1548", "8.000000000000000000E-1550", "7.049000000000010795488000000000000E-3097", .toNearestOrEven)
    /* dqmul911 */ self.multiply128("130E-2", "120E-2", "1.5600", .toNearestOrAwayFromZero)
    /* dqmul912 */ self.multiply128("130E-2", "12E-1", "1.560", .toNearestOrAwayFromZero)
    /* dqmul913 */ self.multiply128("130E-2", "1E0", "1.30", .toNearestOrAwayFromZero)
    /* dqmul914 */ self.multiply128("1E2", "1E4", "1E+6", .toNearestOrAwayFromZero)
  }

  private func multiply128(
    _ _arg0: String,
    _ _arg1: String,
    _ _expected: String,
    _ rounding: DecimalFloatingPointRoundingRule,
    _ _expectedStatus: DecimalStatus? = nil,
    file: StaticString = #file,
    line: UInt = #line
  ) {
    guard let arg0 = self.parseDecimal128(_arg0, file, line) else { return }
    guard let arg1 = self.parseDecimal128(_arg1, file, line) else { return }
    guard let expected = self.parseDecimal128(_expected, file, line) else { return }
    let expectedStatus = _expectedStatus ?? DecimalStatus()

    var status = DecimalStatus()
    let result = arg0.multiplied(by: arg1, rounding: rounding, status: &status)
    let speleotroveResult = self.toSpeleotrove_mul(arg0, arg1, result: result)
    self.assertEqual(speleotroveResult, expected, file, line)
    self.assertStatus(status, expectedStatus, file, line)
  }
}
